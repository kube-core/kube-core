apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: gitlab-add-label
  labels:
    app.kubernetes.io/version: "0.1"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/tags: gitlab
    tekton.dev/displayName: "gitlab add label"
spec:
  description: >-
    This Task will add a label to an issue in Gitlab.

    A collection of tasks to help working with the GitLab API.
    Most tasks would expect to have a secret set in the kubernetes
    secret `gitlab`with a GitLab token in the key `token`.

  params:
  - name: GITLAB_HOST_URL
    description: |
      The Gitlab host url
    default: "gitlab.com"
    type: string

  - name: API_PATH_PREFIX
    description: |
      The API path prefix
    default: "/api/v4"
    type: string

  - name: REQUEST_URL
    description: |
      The Gitlab issue or merge request URL where we want to add a label.
    type: string

  - name: LABELS
    description: |
      The actual labels to add.
    type: array

  - name: GITLAB_TOKEN_SECRET
    description: |
      Name of the secret holding the gitlab-token.
    type: string
    default: gitlab

  - name: GITLAB_TOKEN_SECRET_KEY
    description: |
      Name of the secret key holding the gitlab-token.
    type: string
    default: token

  steps:
    - name: add-label
      image: registry.access.redhat.com/ubi8/ubi:8.2
      args:
        - "$(params.LABELS)"
      script: |
        #!/usr/libexec/platform-python
        import json
        import os
        import sys
        import http.client
        import urllib.parse

        split_url = urllib.parse.urlparse(
            "$(params.REQUEST_URL)").path.split("/")

        # Creating the API URL

        # This will convert https://gitlab.com/foo/bar/issues/202 to
        # api url path /projects/foo/bar/issues/202

        api_url = "$(params.API_PATH_PREFIX)" + "/projects/" + "%2F".join(split_url[1:3]) + \
                  "/" + split_url[4] + "/" + split_url[-1]


        # Get array of Labels
        labels = sys.argv[1: ]
        labels_string = ','.join(labels)

        data = {
            "labels": labels_string
        }

        # Adding the data as the query parameter
        params = urllib.parse.urlencode(data)
        api_url += "?" + params

        print("Sending the data to GitLab: ")
        print(data)
        conn = http.client.HTTPSConnection("$(params.GITLAB_HOST_URL)")
        r = conn.request(
            "PUT",
            api_url,
            headers={
                "Authorization": "Bearer " + os.environ["TOKEN"],
            })

        resp = conn.getresponse()
        if not str(resp.status).startswith("2"):
            print("Error: %d" % (resp.status))
            print(resp.read())
        else:
          print("Labels has been added to "
                "$(params.REQUEST_URL)")

      env:
        - name: TOKEN
          valueFrom:
            secretKeyRef:
              name: $(params.GITLAB_TOKEN_SECRET)
              key: $(params.GITLAB_TOKEN_SECRET_KEY)
