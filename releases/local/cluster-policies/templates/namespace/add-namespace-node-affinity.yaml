{{ $policyName := "add-namespace-node-affinity" }}
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: add-namespace-node-affinity
  annotations:
    policies.kyverno.io/title: Add Namespace Node Selector
    policies.kyverno.io/category: Namespace
    policies.kyverno.io/subject: Pod
    policies.kyverno.io/description: >-
      This polcy forces a nodeAffinity by Namespace
    pod-policies.kyverno.io/autogen-controllers: none
spec:
  generateExistingOnPolicyUpdate: true
  mutateExistingOnPolicyUpdate: true
  validationFailureAction: {{ coalesce (index .Values.policies $policyName "validationFailureAction") .Values.policies.all.validationFailureAction }}
  background: true
  rules:
    - name: add-namespace-node-affinity
      context:
      - name: namespaceAffinity
        apiCall:
          urlPath: "/api/v1/namespaces/{{`{{ request.namespace }}`}}"
          jmesPath: 'metadata.labels."node.kube-core.io/affinity"'
      match:
        resources:
          kinds:
            - Deployment
            - StatefulSet
            - DaemonSet
            - Job
      preconditions:
        # This precondition selects Pods with the label
        all:
        - key: "{{`{{ namespaceAffinity }}`}}"
          operator: Equals
          value: "self"
      mutate:
        patchStrategicMerge:
          metadata:
            labels:
              node.kube-core.io/affinity: "{{`{{request.object.metadata.namespace}}`}}"
    - name: add-namespace-node-affinity-cronjob
      match:
        resources:
          kinds:
            - CronJob
      context:
      - name: namespaceAffinity
        apiCall:
          urlPath: "/api/v1/namespaces/{{`{{ request.namespace }}`}}"
          jmesPath: 'metadata.labels."node.kube-core.io/affinity"'
      preconditions:
        # This precondition selects Pods with the label
        all:
        - key: "{{`{{ namespaceAffinity }}`}}"
          operator: Equals
          value: "self"
      mutate:
        patchStrategicMerge:
          spec:
            jobTemplate:
              spec:
                template:
                  metadata:
                    labels:
                      node.kube-core.io/affinity: "{{`{{request.object.metadata.namespace}}`}}"
  {{ if .Values.namespace.nodeAffinity }}
    - name: add-namespace-node-affinity-list
      match:
        resources:
          kinds:
            - Deployment
            - StatefulSet
            - DaemonSet
            - Job
      preconditions:
        # This precondition selects Pods with the label
        any:
        {{ range .Values.namespace.nodeAffinity }}
        - key: "{{`{{request.object.metadata.namespace}}`}}"
          operator: Equals
          value: "{{ . }}"
        {{ end }}
      mutate:
        patchStrategicMerge:
          metadata:
            labels:
              node.kube-core.io/affinity: "{{`{{request.object.metadata.namespace}}`}}"
    - name: add-namespace-node-affinity-cronjob-list
      match:
        resources:
          kinds:
            - CronJob
      preconditions:
        # This precondition selects Pods with the label
        any:
        {{ range .Values.namespace.nodeAffinity }}
        - key: "{{`{{request.object.metadata.namespace}}`}}"
          operator: Equals
          value: "{{ . }}"
        {{ end }}
      mutate:
        patchStrategicMerge:
          spec:
            jobTemplate:
              spec:
                template:
                  metadata:
                    labels:
                      node.kube-core.io/affinity: "{{`{{request.object.metadata.namespace}}`}}"
    {{ end }}
