{{ $policyName := "add-node-selector" }}
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: add-node-selector
  annotations:
    policies.kyverno.io/title: Add Node Selector
    policies.kyverno.io/category: Sample
    policies.kyverno.io/subject: Pod
    policies.kyverno.io/description: >-
      This policy adds a nodeSelector based on the value of .metadata.labels.\"node.kube-core.io/selector\"
    pod-policies.kyverno.io/autogen-controllers: none
spec:
  generateExistingOnPolicyUpdate: true
  mutateExistingOnPolicyUpdate: true
  validationFailureAction: {{ coalesce (index .Values.policies $policyName "validationFailureAction") .Values.policies.all.validationFailureAction }}
  background: true
  rules:
    - name: add-deployment-node-selector
      match:
        resources:
          kinds:
            - Deployment
            - StatefulSet
            - DaemonSet
            - Job
      preconditions:
        # This precondition selects Pods with the label
        all:
        - key: "{{`{{request.object.metadata.labels.\"node.kube-core.io/selector\"}}`}}"
          operator: NotEquals
          value: ""
      mutate:
        patchStrategicMerge:
          spec:
            template:
              spec:
                tolerations:
                - key: "type"
                  operator: "Equal"
                  value: "{{`{{ request.object.metadata.labels.\"node.kube-core.io/selector\"}}`}}"
                  effect: "NoSchedule"
                - key: "type"
                  operator: "Equal"
                  value: "{{`{{ request.object.metadata.labels.\"node.kube-core.io/selector\"}}`}}"
                  effect: "NoExecute"
                # Add the `affinity`if not already specified.
                nodeSelector:
                  type: "{{`{{ request.object.metadata.labels.\"node.kube-core.io/selector\"}}`}}"
    - name: add-cronjob-node-selector
      match:
        resources:
          kinds:
            - CronJob
      preconditions:
        # This precondition selects Pods with the label
        all:
        - key: "{{`{{request.object.metadata.labels.\"node.kube-core.io/selector\"}}`}}"
          operator: NotEquals
          value: ""
      mutate:
        patchStrategicMerge:
          spec:
            jobTemplate:
              spec:
                template:
                  spec:
                    tolerations:
                    - key: "type"
                      operator: "Equal"
                      value: "{{`{{ request.object.metadata.labels.\"node.kube-core.io/selector\"}}`}}"
                      effect: "NoSchedule"
                    - key: "type"
                      operator: "Equal"
                      value: "{{`{{ request.object.metadata.labels.\"node.kube-core.io/selector\"}}`}}"
                      effect: "NoExecute"
                    # Add the `affinity`if not already specified.
                    nodeSelector:
                      type: "{{`{{ request.object.metadata.labels.\"node.kube-core.io/selector\"}}`}}"
