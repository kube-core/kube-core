apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/helm stable-2.12.3
    linkerd.io/inject: enabled
    config.linkerd.io/proxy-await: "enabled"
  labels:
    linkerd.io/extension: viz
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.12.3
    component: prometheus
    namespace: linkerd-viz
  name: prometheus
  namespace: linkerd-viz
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/extension: viz
      component: prometheus
      namespace: linkerd-viz
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/helm stable-2.12.3
        linkerd.io/inject: enabled
      labels:
        linkerd.io/extension: viz
        component: prometheus
        namespace: linkerd-viz
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      securityContext:
        fsGroup: 65534
      containers:
        - args:
            - --log.level=info
            - --log.format=logfmt
            - --config.file=/etc/prometheus/prometheus.yml
            - --storage.tsdb.path=/data
            - --storage.tsdb.retention.time=6h
          image: prom/prometheus:v2.30.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
            initialDelaySeconds: 30
            timeoutSeconds: 30
          name: prometheus
          ports:
            - containerPort: 9090
              name: admin-http
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9090
            initialDelaySeconds: 30
            timeoutSeconds: 30
          resources:
          securityContext:
            runAsNonRoot: true
            runAsUser: 65534
            runAsGroup: 65534
          volumeMounts:
            - mountPath: /data
              name: data
            - mountPath: /etc/prometheus/prometheus.yml
              name: prometheus-config
              subPath: prometheus.yml
              readOnly: true
      serviceAccountName: prometheus
      volumes:
        - name: data
          emptyDir: {}
        - configMap:
            name: prometheus-config
          name: prometheus-config

