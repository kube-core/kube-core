{{ if (eq .Values.scaling.es.enabled true) }}
---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: logging-es-hpa.rules
spec:
  groups:
  - name: logging-es-hpa.rules
    rules:
    # - expr: (node_filesystem_size_bytes{container="buffer-metrics-sidecar",mountpoint="/buffers"}-node_filesystem_free_bytes{container="buffer-metrics-sidecar",mountpoint="/buffers"})/node_filesystem_size_bytes{container="buffer-metrics-sidecar",mountpoint="/buffers"}
    #   record: elasticsearch_disk_space_usage_ratio
    - expr: rate(container_cpu_usage_seconds_total{pod=~"logging-es-.*", image!="", container="elasticsearch"}[5m])
      record: elasticsearch_cpu_usage_ratio
    # - expr: container_cpu_usage_seconds_total{pod=~"logging-es-.*", image!="", container="elasticsearch"}
    #   record: elasticsearch_cpu_usage
    # - expr: container_memory_working_set_bytes{pod=~"logging-es-.*", image!="", container="elasticsearch"}
    #   record: elasticsearch_memory_usage
    - expr: sum(container_memory_working_set_bytes{namespace="logging", pod=~"logging-es-.*", image!="", container="elasticsearch"}) / sum(cluster:namespace:pod_memory:active:kube_pod_container_resource_requests{namespace="logging", pod=~"logging-es-.*", container="elasticsearch"})
      record: elasticsearch_memory_usage_ratio
---
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: logging-es
spec:
  scaleTargetRef:
    name: logging
    kind: Elasticsearch
    apiVersion: elasticsearch.k8s.elastic.co/v1
  triggers:
  # - type: prometheus
  #   metricType: Value # https://keda.sh/docs/2.8/faq/ => search HPA
  #   metadata:
  #     serverAddress: http://prometheus-operated.monitoring.svc.cluster.local:9090
  #     metricName: elasticsearch_disk_space_usage_ratio
  #     threshold: '0.1'
  #     query: avg(elasticsearch_disk_space_usage_ratio)
  - type: prometheus
    metricType: Value # https://keda.sh/docs/2.8/faq/ => search HPA
    metadata:
      serverAddress: http://prometheus-operated.monitoring.svc.cluster.local:9090
      metricName: elasticsearch_memory_usage_ratio
      threshold: '0.1'
      query: avg(elasticsearch_memory_usage_ratio)
  # Not scaling ES on memory. Consider: shards per node, or others
  # - type: prometheus
  #   metricType: Value # https://keda.sh/docs/2.8/faq/ => search HPA
  #   metadata:
  #     serverAddress: http://prometheus-operated.monitoring.svc.cluster.local:9090
  #     metricName: elasticsearch_memory_usage_ratio
  #     threshold: '0.80'
  #     query: avg(elasticsearch_cpu_usage_ratio)
  minReplicaCount: 2
  maxReplicaCount: 6
{{ end }}
