# Default values & details for n9-api.

## Extension for readme generation with helm-docs
If.api.type=java:
  pod:
    env:
      valuesMap:
        # -- If not set release namespace is the default value
        PROFILE: ".deployedEnv"
  service:
    labels:
      # -- Always injected for apiType=java
      spring-boot: "true"
  healtcheck:
    # -- Overrided by chart values if set
    path: /actuator/health
  metrics:
    # -- Overrided by chart values if set
    port: 8080
If.api.type=node:
  pod:
    env:
      valuesMap:
        # -- If not set release namespace is the default value
        NODE_ENV: ".deployedEnv"
  healtcheck:
    # -- Overrided by chart values if set
    path: /ping
  metrics:
    # -- Overrided by chart values if set
    port: 9101

## Naming convention for app & k8s ressources
name:
  ## Default name is the name of the release from which is trimmed the (eventually included) prefixed name of the environnement (deployedEnv or namespace)
  ## Override to identify the app/api deployed by the chart, if the api deployed is different from the release name
  # -- Override to set 'application name' if different from the release name (or template: namespace-release-name)
  appNameOverride: ""
  ## Override the appNameOverride to name kubernetes ressources deployed by the chart
  ## Default is same logic that for appName, but can be overwritten to deploy the same app multiple time in the same namespace
  # -- Override the 'application name' to be used as a convention to name k8s ressources create by chart
  templatedNameOverride: ""

## Parameters to use specific functionnality on standard n9 api
api:
  ## ApiType will set liveness/readiness port and path corresponding to neo9 standard
  # -- Only "node" or "java" will set multiple default value in releases, check readme
  type: "node"
  # -- Override the release namespace value for env var sent to pod
  deployedEnv: ""
  # -- No default values, check https://github.com/neo9/n9-node-log
  logLevel: ""

## Image details
image:
  repository: n9/api
  pullPolicy: IfNotPresent
  pullSecrets: []
  # -- Define the image tag which by default is 'latest'
  tag: "latest"
  # -- Overrides tag if set
  digest: ""

## Configure istio virtual-service (v1alpha3)
istio:
  # -- Create virtual service ressource (v1alpha3)
  enabled: false
  retries: {}

## Global value to share when using n9-api as subchart
global:
  # -- Not recommended by default, designed to expose 'api.deployedEnv' into parent-chart (subchart values override global values)
  deployedEnv: ""
  # -- Not recommended by default, designed to expose 'api.logLevel' into parent-chart (subchart values override global values)
  logLevel: ""
  # -- Not recommended by default, designed to expose 'image.pullSecrets' into parent-chart (subchart values override global values)
  imagePullSecrets: []
  istio:
    # -- Not recommended by default, designed to expose 'istio.enabled' into parent-chart (subchart values override global values)
    enabled: ""

## Define default 'http' endpoints and service
service:
  type: ClusterIP
  port: 80
  # -- Port to access on the pod if different from port used by service
  targetPort: ""
  labels: {}
  annotations: {}
  # -- Create additional pods endpoints and relative service
  additionalPorts: []
    # - name: myextra-service
    #   port: 80 # port to access for the service
    #   targetPort: 8080 # Port to access on the pods if different from the one accessible through the service

## Define ingress with several hosts/path
ingress:
  enabled: false
  className: ""
  # -- Set a default pathType for all hosts
  defaultPathType: ImplementationSpecific
  # -- Automatically generate tls certificate secret for defined hosts
  globalEasyTls: false
  labels: {}
  annotations: {}
    # kubernetes.io/ingress.class: nginx
  hosts: []
    # - host: chart-example.local
    #   paths:
    #     - path: /
    #       pathType: ImplementationSpecific
    #       # svcName: left to default 
    #       # svcPort: left to default
    # - host: imanhost.domain.tld
    #   paths:
    #     - path: /api/(service_1/?.*)
    #       # pathType: left to default 
    #       svcName: neo9-api-1
    #       svcPort: 80
    #     - path: /api/(service_2/?.*)
    #       svcName: neo9-api-2
    #       # svcPort: left to default
  
  additionalHosts: []
    # - host: imalsoanhost.domain.tld
    #   paths:
    #     - path: /api/(service_1/?.*)
    #       # pathType: left to default 
    #       svcName: neo9-api-1
    #       svcPort: 80
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

## Defined pods ressources
resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

## Relate to horizontal pod autoscaling
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

## Define value relative to kube scheduling
scheduling: 
  nodeSelector: {}
  tolerations: []
  affinity: {}

## Define endpoints and service to expose metrics
metrics:
  # -- Condition to enable ports and service for metrics endpoints
  enabled: false
  ## Default is set from apiType
  port: ""
  ## Create a service monitor for kps to listen metrics
  serviceMonitor:
    enabled: false
    # -- Value in seconds suffixed by unit 's'
    interval: "15s"

## Relate to deployment ressources
deployment:
  labels: {}
  annotations:
    reloader.stakater.com/auto: "true"
  progressDeadlineSeconds: ""
  minReadySeconds: ""
  # -- Automatically create podDisruptionBudget if more than 1 replica
  replicaCount: 1
  # -- Default to 1 if not set for the podDisruptionBudget
  minAvailable: 1
  # -- Default Rolling Update
  strategy: {}
    # type: Recreate
  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

## Relate to the templating of the pods managed by the deployment
pod:
  workingDir: ""
  command: []
  args: []
  annotations: {}
  securityContext: {}
    # fsGroup: 2000
  env:
    # -- Define env values for pods, example commented out in values.yaml files
    values: []
      # - name: ENV_VALUES
      #   value: "something"
    # -- Define secret env values for pods, example commented out in values.yaml files
    secrets: []
      # - name: SECRET_ENV_VALUES # if not set, secretKey will be used
      #   secretName: my-in-cluster-secret
      #   secretKey: its-content
      #   optional: false (default), when true: the lack of this secret ENV VALUES won't prevent the pod from starting
    # -- Define and sent env Values as a map, useful for yaml merge
    valuesMap: {}
      # ENV_VALUES: "something"
  additionalEnv:
    values: []
    secrets: []
    valuesMap: {}
  mounts:
    # -- Define configmap to attach and mount, example commented out in values.yaml files
    configMap: []
    # - name: certs-configmap # name of the configmap to mount
    #   mountPath: /etc/configmaps/ 
    #   subPath: "" # (optional) default to null
    #   readOnly: true # (optional) default to true
    # -- Define secrets to attach and mount, example commented out in values.yaml files
    secrets: []
    # - name: secret-files # name of the mount
    #   mountPath: /etc/secrets
    #   secretName: -secret-files # name of secret
    #   defaultMode: 256 # (optional) default to 256
    #   readOnly: true # (optional) default to true
    # -- Define map of configmap to mount, useful for yaml merge
    configMapMap: {}
      # configMapName: mountPath
    # -- Define pvc to attach and mount, example commented out in values.yaml files
    pvc: []
    # - name: images # name of the pvc to mount
    #   mountPath: /uploads # (optional) default "/data"
    #   subPath: /img # (optional) default is the name
    #   storageClass: "" # (optional) default is cluster standard class
    #   size: "" # (optional) default is '10'
    #   accessMode: "" (optional)

# -- Generate and define content of one or multiple configmap
configMap: []
  # - name: n9-config-map # name of a config map
  #   content: "" # content of a config map

## Configure PodDisruptionBudget
pdb:
  # -- Create Pod Disruption Budget
  enabled: false
  minAvailable: 1

## Configure HorizontalPodAutoscaling
hpa:
  # -- Create Horizontal Pod Autoscaling
  enabled: false
  customMetrics: []
  minReplicas: 1
  maxReplicas: 5
  cpu: 100
  memory: 80
  rabbitmq:
    enabled: false
    serviceName: rabbitmq
    metricName: master-api_queue_messages
    target: 1

## Configure liveness & readiness probe
healthCheck:
  enabled: true
  # -- Enabled usage of tcpSocket probe over httpget probe
  tcpSocket: false
  # -- Specify port to probe if different from service port
  port: ""
  # -- Specify a port for httpGet probe, if different from /ping for node or /actuator/health for java
  path: ""
  initialDelaySeconds: 3
  periodSeconds: 10
  timeoutSeconds: 1
  failureThreshold: 3
  liveness:
    enabled: true
    ## Values to override global healtcheck values
    # tcpSocket:
    # port: ""
    # path: /
    # initialDelaySeconds: 3
    # periodSeconds: 10
    # timeoutSeconds: 1
    # failureThreshold: 3
  readiness:
    enabled: true
    ## Values to override global healtcheck values
    # tcpSocket:
    # port: ""
    # path: /
    # initialDelaySeconds: 3
    # periodSeconds: 10
    # timeoutSeconds: 1
    # failureThreshold: 3

## Create service account
serviceAccount:
  # -- Specifies whether a service account should be created
  create: false
  # -- Annotations to add to the service account
  annotations: {}
  # The name of the service account to use, to use one not created by chart.
  # Else if name not set and create is true, a name is generated using the fullname template
  # -- Name of service account to create or to use if not created by chart
  name: ""

## Create clusterRole and bind it to service account
clusterRole:
  # -- Specifies whether a cluster role should be created, also require to set rules.
  create: false
  # The name of the cluster role to use, to use one not created by chart.
  # Else if name not set and create is true, a name is generated using the fullname template + release namespace
  # -- Name of cluster role to create or to use if not created by chart
  name: ""
  # -- Bind cluster role to service account created/named in chart values
  autoBindClusteRole: false
  # -- Set clusterRole rules, example commented out in values.yaml files
  rules: {}
  # - apiGroups:
  #   - networking.k8s.io
  #   resources:
  #   - ingresses
  #   verbs:
  #   - get
  # - apiGroups:
  #   - apiextensions.k8s.io
  #   resources:
  #   - customresourcedefinitions
  #   verbs:
  #   - get

## Configure a init job as an helm chart hook
initJob:
  enabled: false
  priorityClassName: ""
  command: []
  # -- Helm hook deletion policy on when to delete previous initjob
  hookDeletionPolicy: before-hook-creation,hook-succeeded
  ttlSecondsAfterFinished: 300
  activeDeadlineSeconds: 950
  # -- Example commented out in values.yaml files
  resources: {}
  #  limits:
  #    memory: 100M
  #  requests:
  #    memory: 100M
  #    cpu: 35m

##  Configure an init-container
initContainer:
  enabled: false
  command: []
  resources: {}
    #  limits:
    #    memory: 100M
    #  requests:
    #    memory: 100M
    #    cpu: 35m


flux:
  enabled: false

  imageRepository:
    interval: 1m0s
    secretName: docker-registry-gcr-admin
  imageUpdateAutomation:
    enabled: false
    interval: 1m0s
    git:
      sourceRef: my-repo
      # sourceNamespace: my-namespace # Use this if you need a source out of your current release namespace
      ref:
        branch: main
      pushRef:
        branch: main
      author: 
        email: flux-bot@my-domain.com
        name: flux-bot
      message: "chore: Updating images"
    update:
      path: ./config
      strategy: Setters
  defaultImagePolicy: default
  defaultImagePoliciesEnabled: true
  # imagePolicy: "my-policy" # Use this to override
  # imagePolicies:
  #   default:
  #     policy:
  #       semver:
  #         range: "*"
  #   dev:
  #     filterTags:
  #       # Matches v-${commitHash}-${timestamp} with a named capture group (https://pkg.go.dev/regexp)
  #       pattern: '^v-(.*)-(?P<ts>.*)'
  #       extract: '$ts'
  #     policy:
  #       numerical:
  #         order: asc
  #   staging:
  #     policy:
  #       semver:
  #         range: ^0.1.0
  #   prod:
  #     policy:
  #       semver:
  #         range: "0.1.0"