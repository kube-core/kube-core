# Git Provider & Config
git:
  provider: GIT_PROVIDER
  web: GIT_WEB
  github_read_token: ./keys/.github-read-token #GITHUB_READ_TOKEN
  api:
    url: GIT_API_URL
    host: GIT_API_HOST
    token: ./keys/.git-api-token #GIT_API_TOKEN
  ssh:
    url: GIT_SSH_URL
    host: GIT_SSH_HOST
    key: ./keys/.git-ssh-key #GIT_SSH_KEY
    known_hosts: ./keys/.git-ssh-hosts #GIT_SSH_KNOWN_HOSTS
  webhooks:
    token: ./keys/.git-webhooks-token #GIT_WEBHOOKS_TOKEN
  bot:
    user: GIT_BOT_USER
    name: GIT_BOT_NAME

cloud:
  provider: CLOUD_PROVIDER
  default:
    location: CLOUD_DEFAULT_LOCATION
  registry:
    hostname: REGISTRY
# Cluster configuration
cluster:
  common:
    defaultIngressAnnotations: {}
    defaultServiceAnnotations: {}
  config:
    name: CLUSTER_CONFIG_NAME
    repository:
      name: CLUSTER_CONFIG_REPOSITORY_NAME
      url: CLUSTER_CONFIG_REPOSITORY_URL
      ref: CLUSTER_CONFIG_REPOSITORY_REF
      path: CLUSTER_CONFIG_REPOSITORY_PATH
    adminEmail: CLUSTER_CONFIG_ADMIN_EMAIL
  logging:
    integrations:
      tekton:
        enabled: false
  delivery:
    namespace: integration
    branch: develop
    config:
      apply:
        enabled: false
        dry: ""
      autoMerge: "false"
      kubeCoreImage: k8skubecore/kube-core:latest
      lighthouse:
        bucket: tekton-storage
      run:
        timeout: "60"
        tests: "true"
        storage:
          requests: 10Gi
        serviceAccount: tekton
        nameTemplate: $(tt.params.git-project-name)-$(tt.params.git-branch-sanitized)-
        namespace: tekton-pipelines
    node:
      version: "14.15.4"
      tests:
        image: "ihebchakroun/node-14.15.4-chrome-lighthouse:latest"


tekton:
  config:
    hooks:
      appPushDevelop:
        templateRef: app-push
      gardenPushDevelop:
        templateRef: garden-push
    templates:
      appPushDevelop:
        pipelineRef: app-push
      gardenPushDevelop:
        pipelineRef: garden-deploy
    pipeline:
      cleanup:
        enabled: true
      externalLogs:
        enabled: false
        endpoint: http://tekton-logs-server.logging.svc.cluster.local:3000/logs
    webhook:
      scaling:
        minAvailable: 2
    storage:
      bucket: kube-core-tekton-storage
    core-hooks:
      ingress:
        subdomain: "core-hooks.tekton-pipelines"
        annotations: {}
        labels: {}
    cluster-hooks:
      ingress:
        subdomain: "cluster-hooks.tekton-pipelines"
        annotations: {}
        labels: {}
    app-hooks:
      ingress:
        subdomain: "app-hooks.tekton-pipelines"
        annotations: {}
        labels: {}
    garden-hooks:
      ingress:
        subdomain: "garden-hooks.tekton-pipelines"
        annotations: {}
        labels: {}
    dashboard:
      ingress:
        subdomain: "tekton-dashboard.tekton-pipelines"
        annotations: {}
        labels: {}
  secrets:
      credentials:
        crossplaneGenerated: false
        description: Credentials to authenticate to your Cloud Provider.
        replicate: false
        replicateFrom: secrets/tekton
        secretRef:
          key: tekton.json
          name: tekton
      git-webhooks-token:
        crossplaneGenerated: false
        description: Token to authenticate requests to your Git Provider webhooks
        replicate: false
        replicateFrom: secrets/git-webhooks-token
        secretRef:
          key: git-webhooks-token
          name: git-webhooks-token
      git-api-token:
        crossplaneGenerated: false
        description: Token to authenticate to your Git Provider API
        replicate: false
        replicateFrom: secrets/git-api-token
        secretRef:
          key: git-api-token
          name: git-api-token
      git-ssh:
        crossplaneGenerated: false
        description: SSH key & known_hosts to authenticate Git requests
        replicate: false
        replicateFrom: secrets/git-ssh
        secretRef:
          key: git-ssh
          name: git-ssh
      github-read-token:
        crossplaneGenerated: false
        description: A GitHub Token with public read scope to remove rate limiting (for Trivy)
        replicate: false
        replicateFrom: secrets/github-read-token
        secretRef:
          key: github-read-token
          name: github-read-token
      docker-registry:
        crossplaneGenerated: false
        description: Docker Registry credentials to push images
        replicate: false
        replicateFrom: secrets/docker-registry
        secretRef:
          key: known_hosts
          name: docker-registry
