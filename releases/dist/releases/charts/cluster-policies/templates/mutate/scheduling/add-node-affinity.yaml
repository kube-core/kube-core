{{ $policyName := "add-node-affinity" }}
{{ if (index .Values.policies $policyName "enabled") }}
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: add-node-affinity
  annotations:
    policies.kyverno.io/title: Add Node Affinity
    policies.kyverno.io/category: Sample
    policies.kyverno.io/subject: Pod
    policies.kyverno.io/description: >-
      This policy adds a nodeAffinity based on the value of .metadata.labels.\"node.kube-core.io/affinity\"
    pod-policies.kyverno.io/autogen-controllers: none
spec:
  generateExistingOnPolicyUpdate: true
  mutateExistingOnPolicyUpdate: true
  failurePolicy: {{ coalesce (index .Values.policies $policyName "failurePolicy") .Values.policies.all.failurePolicy }}
  validationFailureAction: {{ coalesce (index .Values.policies $policyName "validationFailureAction") .Values.policies.all.validationFailureAction }}
  background: true
  rules:
    - name: add-pod-node-affinity
      match:
        resources:
          kinds:
            - Pod
      preconditions:
        # This precondition selects Pods with the label
        all:
        - key: "{{`{{request.object.metadata.labels.\"node.kube-core.io/affinity\"}}`}}"
          operator: NotEquals
          value: ""
      mutate:
        patchStrategicMerge:
          spec:
            affinity:
              nodeAffinity:
                preferredDuringSchedulingIgnoredDuringExecution:
                  - preference:
                      matchExpressions:
                        - key: type
                          operator: In
                          values:
                            - "{{`{{request.object.metadata.labels.\"node.kube-core.io/affinity\"}}`}}"
                    weight: 100
            tolerations:
            - key: "type"
              operator: "Equal"
              value: "{{`{{request.object.metadata.labels.\"node.kube-core.io/affinity\"}}`}}"
              effect: "NoSchedule"
            - key: "type"
              operator: "Equal"
              value: "{{`{{request.object.metadata.labels.\"node.kube-core.io/affinity\"}}`}}"
              effect: "NoExecute"
    - name: add-deployment-node-affinity
      match:
        resources:
          kinds:
            - Deployment
            - StatefulSet
            - DaemonSet
            - Job
      preconditions:
        # This precondition selects Pods with the label
        all:
        - key: "{{`{{request.object.metadata.labels.\"node.kube-core.io/affinity\"}}`}}"
          operator: NotEquals
          value: ""
      mutate:
        patchStrategicMerge:
          spec:
            template:
              spec:
                affinity:
                  nodeAffinity:
                    preferredDuringSchedulingIgnoredDuringExecution:
                      - preference:
                          matchExpressions:
                            - key: type
                              operator: In
                              values:
                                - "{{`{{request.object.metadata.labels.\"node.kube-core.io/affinity\"}}`}}"
                        weight: 100
                tolerations:
                - key: "type"
                  operator: "Equal"
                  value: "{{`{{request.object.metadata.labels.\"node.kube-core.io/affinity\"}}`}}"
                  effect: "NoSchedule"
                - key: "type"
                  operator: "Equal"
                  value: "{{`{{request.object.metadata.labels.\"node.kube-core.io/affinity\"}}`}}"
                  effect: "NoExecute"

    - name: add-cronjob-node-affinity
      match:
        resources:
          kinds:
            - CronJob
      preconditions:
        # This precondition selects Pods with the label
        all:
        - key: "{{`{{request.object.metadata.labels.\"node.kube-core.io/affinity\"}}`}}"
          operator: NotEquals
          value: ""
      mutate:
        patchStrategicMerge:
          spec:
            jobTemplate:
              spec:
                template:
                  spec:
                    affinity:
                      nodeAffinity:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          - preference:
                              matchExpressions:
                                - key: type
                                  operator: In
                                  values:
                                    - "{{`{{request.object.metadata.labels.\"node.kube-core.io/affinity\"}}`}}"
                            weight: 100
                    tolerations:
                    - key: "type"
                      operator: "Equal"
                      value: "{{`{{request.object.metadata.labels.\"node.kube-core.io/affinity\"}}`}}"
                      effect: "NoSchedule"
                    - key: "type"
                      operator: "Equal"
                      value: "{{`{{request.object.metadata.labels.\"node.kube-core.io/affinity\"}}`}}"
                      effect: "NoExecute"
                    # Add the `affinity`if not already specified.
{{ end }}
