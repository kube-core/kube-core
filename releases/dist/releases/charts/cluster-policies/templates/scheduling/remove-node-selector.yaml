{{ $policyName := "remove-node-selector" }}
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: remove-node-selector
  annotations:
    policies.kyverno.io/title: remove Node Selector
    policies.kyverno.io/category: Sample
    policies.kyverno.io/subject: Pod
    policies.kyverno.io/description: >-
      This policy removes a nodeSelector based on the value of .metadata.labels.\"node.kube-core.io/selector\"
    pod-policies.kyverno.io/autogen-controllers: none
spec:
  generateExistingOnPolicyUpdate: true
  mutateExistingOnPolicyUpdate: true
  validationFailureAction: {{ coalesce (index .Values.policies $policyName "validationFailureAction") .Values.policies.all.validationFailureAction }}
  background: true
  rules:
    - name: remove-deployment-node-selector
      match:
        resources:
          kinds:
            - Deployment
            - StatefulSet
            - DaemonSet
            - Job
      preconditions:
        # This precondition selects Pods with the label
        all:
        - key: "{{`{{request.object.metadata.labels.\"node.kube-core.io/selector\" || ''}}`}}"
          operator: Equals
          value: ""
      mutate:
        patchesJson6902: |-
          - path: "/spec/template/spec/nodeSelector"
            op: remove
    - name: remove-cronjob-node-selector
      match:
        resources:
          kinds:
            - CronJob
      preconditions:
        # This precondition selects Pods with the label
        all:
        - key: "{{`{{request.object.metadata.labels.\"node.kube-core.io/selector\" || ''}}`}}"
          operator: Equals
          value: ""
      mutate:
        patchesJson6902: |-
          - path: "/spec/jobTemplate/spec/template/spec/nodeSelector"
            op: remove
