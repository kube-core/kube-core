{{ if .Values.externalDatabase.enabled }}

# defining zalando postgres secret-name
{{- $secret_name := (printf "%s.%s.credentials.postgresql.acid.zalan.do" .Values.externalDatabase.postgresUsername .Values.externalDatabase.pgsqlClusterName ) }}
# checking auht value in secret, if so define them as var
{{ $postgres_password := include "getPreviousPass" (dict "Namespace" .Release.Namespace "Kind" "Secret" "Name" $secret_name "Key" "password") }}
{{ $postgres_username := include "getPreviousPass" (dict "Namespace" .Release.Namespace "Kind" "Secret" "Name" $secret_name "Key" "username") }}

apiVersion: v1
kind: Secret
metadata:
  name: keycloak-db-secret
type: Opaque
data:
{{ if $postgres_username }}
  POSTGRES_USERNAME: {{ $postgres_username | quote }}
{{ else }}
  POSTGRES_USERNAME: {{ .Values.externalDatabase.postgresUsername | b64enc | quote }}
{{ end }}
{{ if $postgres_password }}
  POSTGRES_PASSWORD: {{ $postgres_password | quote }}
{{ else }}
  POSTGRES_PASSWORD: {{ .Values.externalDatabase.postgresPassword | b64enc | quote }}
{{ end }}
  POSTGRES_DATABASE: {{ .Values.externalDatabase.postgresDatabase | b64enc | quote }}
{{ if .Values.externalDatabase.postgresExternalAddress }}
  POSTGRES_EXTERNAL_ADDRESS: {{ .Values.externalDatabase.postgresExternalAddress | b64enc | quote }}
{{ else }}
  POSTGRES_EXTERNAL_ADDRESS: {{ (printf "%s.%s.svc.cluster.local" .Values.externalDatabase.pgsqlClusterName .Release.Namespace) | b64enc | quote }}
{{ end }}
  POSTGRES_EXTERNAL_PORT: {{ .Values.externalDatabase.postgresExternalPort | toString | b64enc | quote }}
  POSTGRES_SUPERUSER: {{ .Values.externalDatabase.postgresSuperUser | toString | b64enc | quote }}

{{ end }}
