apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: notify-slack
  labels:
    app.kubernetes.io/version: "0.0.1"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/tags: notify-slack, debug, dev, tools
    tekton.dev/displayName: "notify-slack"
spec:
  description: >-
    Sends a message to Slack
  workspaces:
    - name: input
    - name: output
    - name: source
    - name: data
  params:
    
    - name: channel
      description: The channel
      type: string
      default: "#devops-test"
    
    - name: hook
      description: The hook
      type: string
      default: https://hooks.slack.com/services/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

    - name: message
      description: The message to write
      type: string
      default: ""

    - name: messageFromFileName
      description: Get the message from a give file, which is a tekton input
      type: string
      default: ""

    - name: username
      description: The username to write
      type: string
      default: "tektoncd-bot"

    - name: emoji
      description: The emoji to write
      type: string
      default: ":ghost:"

    - name: command
      description: The message to write
      type: string
      default: ""

    - name: image
      description: The message to write
      type: string
      default: neo9sas/devops-tools:v1.5.0

    - name: messageLevel
      description: The message level
      type: string
      default: DEBUG

  steps:
    - name: init
      image: $(params.image)
      script: |
        #!/usr/bin/env bash
        echo "I am supposed to notify-slack !"
    - name: notify-slack
      image: $(params.image)
      script: |
        #!/usr/bin/env bash

        slackHookURL="$(params.hook)"
        slackChannel="$(params.channel)"
        slackUsername="$(params.username)"
        slackEmoji="$(params.emoji)"
        messageLevel="$(params.messageLevel)"
        message="$(params.message)"
        messageFromFileName="$(params.messageFromFileName)"

        if [ ! -z "${messageFromFileName}" ]; then
          message=$(cat /workspace/input/${messageFromFileName} | sed 's/$/\\n/' | tr -d '\n' | sed 's/"/\\"/g' | sed 's/\\\\"/\\\\\\"/g')
        fi

        color='#FFFFFF'
        if [ "${messageLevel}" == "INFO" ]; then
          color='#40A058'
        elif [ "${messageLevel}" == "ERROR" ]; then
          color='#C73938'
        fi

        cat <<EOF > data.json
          {
            "channel": "${slackChannel}",
            "username": "${slackUsername}",
            "icon_emoji": "${slackEmoji}",
            "attachments": [
              {
                "color": "${color}",
                "text": "${message}"
              }
            ]
          }
        EOF
        cat data.json

        echo "Sending Slack notification"
        curl -X POST -H "Content-Type: application/json" --data "@data.json" ${slackHookURL}
