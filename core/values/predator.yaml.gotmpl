replicaCount: 1

port: 80

podAnnotations: {}
imagePullSecrets: {}
image:
  repository: zooz/predator
  tag: 1.6
  pullPolicy: Always

nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  annotations:
  {{ if .Values.cluster.common.defaultIngressAnnotations }}
    {{ toYaml .Values.cluster.common.defaultIngressAnnotations | nindent 4 }}
  {{- end }}
  {{- if (index .Values.releases .Release.Name "config" "ingress" "annotations") }}
    {{ toYaml (index .Values.releases .Release.Name "config" "ingress" "annotations") | nindent 4 }}
  {{- end }}
  labels:
  {{ if .Values.cluster.common.defaultIngressLabels }}
    {{ toYaml .Values.cluster.common.defaultIngressLabels | nindent 4 }}
  {{- end }}
  {{- if (index .Values.releases .Release.Name "config" "ingress" "labels") }}
    {{ toYaml (index .Values.releases .Release.Name "config" "ingress" "labels") | nindent 4 }}
  {{- end }}
  tls:
    - secretName: {{ (index .Values.releases .Release.Name "config" "ingress" "subdomain") | replace "." "-"}}-tls
      hosts:
        - {{ (index .Values.releases .Release.Name "config" "ingress" "subdomain") }}.{{ .Values.cluster.config.domain }}
  hosts:
    - {{ (index .Values.releases .Release.Name "config" "ingress" "subdomain") }}.{{ .Values.cluster.config.domain }}

persistence:
  enabled: true
  # storageClassName: default
  accessModes:
  - ReadWriteOnce
  size: 2Gi
  # annotations: {}
  # existingClaim:

tolerations: {{ toYaml (index .Values.releases .Release.Name "scheduling" "tolerations") | nindent 2 }}
nodeSelector: {{ toYaml (index .Values.releases .Release.Name "scheduling" "nodeSelector") | nindent 2 }}
affinity: {{ toYaml (index .Values.releases .Release.Name "scheduling" "affinity") | nindent 2 }}

database:
  type: SQLITE
  name:
  address:
  username:
  password:
  cassandra:
    replicationFactor: 1
    keySpaceStrategy: SimpleStrategy
    localDataCenter:
  sqlite:
    storage: /db/predator

internalAddress:
kubernetesUrl: https://kubernetes.default.svc
jobPlatform: KUBERNETES
apiVersion: v1
delayRunnerMs: {{ index .Values.releases .Release.Name "config" "delayRunnerMs" }}
runnerDockerImage: {{ index .Values.releases .Release.Name "config" "runnerDockerImage" }}
runnerCpu: {{ index .Values.releases .Release.Name "config" "runnerCpu" }}
runnerMemory: {{ index .Values.releases .Release.Name "config" "runnerMemory" }}
intervalCleanupFinishedContainers: {{ index .Values.releases .Release.Name "config" "intervalCleanupFinishedContainers" }}
customRunnerDefinition: {{ toYaml (index .Values.releases .Release.Name "config" "customRunnerDefinition") | nindent 2 }}
allowInsecureTls: {{ index .Values.releases .Release.Name "config" "allowInsecureTls" }}
skipInternalAddressCheck: {{ index .Values.releases .Release.Name "config" "skipInternalAddressCheck" }}
serviceAccount:
  create: true
rbac:
  create: true


streaming:
  platform:
  platformHealthCheckTimeoutMs: 2000
  excludedAttributes:
  kafka:
    brokers:
    clientId: predator
    topic:
    autoTopicCreation: false
    adminRetries: 2

