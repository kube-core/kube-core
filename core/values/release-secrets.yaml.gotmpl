{{ $values := .values }}
{{ $releases := (merge $values.releases $values.applications $values.services )}}
{{ $releaseNamespace := .releaseNamespace }}

{{ $cloudProject := $values.cloud.project }}
{{ $cloudLocation := $values.cloud.default.location }}
{{ $clusterName := $values.cluster.config.name }}


manifests:
{{ $mainReleaseName := (.releaseName | replace "-secrets" "") }}
{{ $mainRelease := ($releases | getOrNil $mainReleaseName) }}
{{ $releaseCloud := (index $releases $mainReleaseName "cloud" )}}
{{ $releaseCloudEnabled := ($releaseCloud | getOrNil "enabled") }}
{{ $cloudNamingConfig := $values.cloud.naming }}

{{ $name := $mainReleaseName }}
{{ $initials := (($name | splitList "-") | join " " | initials) }}

{{ $clusterShortName := $values.cluster.config.shortName }}
{{ $releaseType := ""}}
{{ if (eq $mainRelease.type "release") }}
{{ $releaseType = "kc" }}
{{ else if (eq $mainRelease.type "application") }}
{{ $releaseType = "app" }}
{{ else if (eq $mainRelease.type "service") }}
{{ $releaseType = "svc" }}
{{ end }}

{{ $autoShortName := "" }}
{{ $namespace := ($releaseNamespace | substr 0 3) }}
{{ $autoShortName = (printf "%s-%s-%s-%s" $clusterShortName $releaseType $namespace $initials) }}
{{ $shortName := "" }}
{{ if (and $releaseCloudEnabled $cloudNamingConfig.enabled) }}
{{ $shortName = (index $mainRelease.metadata.namingConfig.nameBases (coalesce ($values.cloud.naming.config.templates | getOrNil "custom" | getOrNil "nameBase" | default "" | camelcase | untitle) ($values.cloud.naming.config.templates.default.nameBase | camelcase | untitle))) }}
{{ else }}
{{ $shortName = $autoShortName }}
{{ end }}

{{ $releaseServiceAccountName := $shortName | substr 0 30 }}
{{ $releaseBucketName := $shortName | substr 0 63 }}
{{ $releaseRoleName := ($shortName | kebabcase | replace "-" "." | untitle) }}

{{ $name = $shortName }}


{{ range $key, $value := $mainRelease.secrets }}
{{ $crossplaneGenerated := (coalesce ($value | getOrNil "crossplaneGenerated") false) }}
{{ $secretEnabled := (coalesce ($value | getOrNil "enabled") false) }}

{{ if $secretEnabled }}
- apiVersion: v1
  kind: Secret
  metadata:
    name: {{ $value.secretRef.name }}
    annotations:
      {{ if (not $crossplaneGenerated) }}
      replicator.v1.mittwald.de/replicate-from: {{ $value.replicateFrom }}
      {{ else if ($crossplaneGenerated) }}
      {{ if $values.cloud.naming.enabled }}
      {{ $releaseServiceAccountKeyName := (index $mainRelease.metadata.namingConfig.nameBases (coalesce ($values.cloud.naming.config.templates | getOrNil "custom" | getOrNil "serviceAccountKeyName" | default "" | camelcase | untitle) ($values.cloud.naming.config.templates.default.serviceAccountKeyName | camelcase | untitle))) }}
      replicator.v1.mittwald.de/replicate-from: crossplane-system/{{ coalesce ($value | getOrNil "crossplaneNameOverride") $releaseServiceAccountKeyName }}
      {{ else }}
      replicator.v1.mittwald.de/replicate-from: crossplane-system/{{ coalesce ($value | getOrNil "crossplaneNameOverride") $name }}
      {{ end }}
      {{ end }}
      {{ if (and (eq $key "git-ssh") (eq $mainReleaseName "tekton")) }}
      tekton.dev/git-1: {{ $values.git.ssh.host }}
      {{ end }}
      {{ if ($value | getOrNil "extraAnnotations") }}
      {{ range $k, $v := ($value | getOrNil "extraAnnotations") }}
      {{ $k }}: {{ $v | quote }}
      {{ end }}
      {{ end }}
    {{ if ($value | getOrNil "extraLabels") }}
    labels:
      {{ range $k, $v := ($value | getOrNil "extraLabels") }}
      {{ $k }}: {{ $v | quote }}
      {{ end }}
    {{ end }}
  type: {{ (coalesce ($value | getOrNil "type") "Opaque") }}
  data: {}
{{ end }}
{{ end }}
