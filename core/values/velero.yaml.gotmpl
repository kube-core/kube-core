{{/* Release Values Templates Header - START */}}
{{ $values := (coalesce (. | getOrNil "values") (. | getOrNil "Values")) }}
{{ $release := (index $values.releases .Release.Name) }}
{{ $releaseName := .Release.Name }}
{{ $releaseNamespace := .Release.Namespace }}
{{ $releaseType := $release.type }}

{{ $_ := set $release "name" $releaseName }}
{{ $_ := set $release "namespace" $releaseNamespace }}
{{ (tpl (readFile "../templates/releases/standard/variables/release-variables-config.yaml.gotmpl") (dict "item" $release "values" $values)) }}
{{ (tpl (readFile "../templates/releases/standard/variables/release-variables-cloud.yaml.gotmpl") (dict "item" $release "values" $values)) }}
{{/* Release Values Templates Header - END */}}

{{ $bucketName := "velero-backups" }}
{{ if $release.metadata.config.cloudEnabled }}
{{ $bucketName = $release.metadata.namingConfig.templated.releaseBucketName }}
{{ else }}
{{ $bucketName = ($values | get "cluster.config.backups.bucket" (printf "%s-velero-backups" $values.cluster.config.name)) }}
{{ end }}

initContainers:
  {{ if eq $values.cloud.provider "aws" }}
  - name: velero-plugin-for-aws
    image: velero/velero-plugin-for-aws:v1.7.0
    imagePullPolicy: IfNotPresent
    volumeMounts:
      - mountPath: /target
        name: plugins
  {{ else if eq $values.cloud.provider "gcp" }}
  - name: velero-plugin-for-gcp
    image: velero/velero-plugin-for-gcp:v1.7.0
    imagePullPolicy: IfNotPresent
    volumeMounts:
      - mountPath: /target
        name: plugins
  {{ end }}

configuration:
  backupStorageLocation:
  - name:
    provider: {{ $values.cloud.provider }}
    bucket: {{ $bucketName }}
    {{ if eq $values.cloud.provider "gcp" }}
    serviceAccount: velero
    {{ end }}

  extraEnvVars:
    {{ if eq $values.cloud.provider "aws" }}
    AWS_CLUSTER_NAME: {{ $values.cluster.config.domain }}
    {{ else if eq $values.cloud.provider "gcp" }}
    # Now patched in releases via strategicmergepatch, which is still not ideal but better than this.
    # GOOGLE_APPLICATION_CREDENTIALS: /credentials/velero.json
    {{ end }}
  logFormat: json
rbac:
  create: true
  clusterAdministrator: true

serviceAccount:
  server:
    create: true
    name:
    annotations:
      {{ if eq $values.cloud.provider "aws" }}
      eks.amazonaws.com/role-arn: {{ index $values.cluster.config.backups "config" "role-arn" }}
      {{ end }}
    labels:

credentials:
  {{ if eq $values.cloud.provider "gcp" }}
  useSecret: true
  existingSecret: {{ (index $values.releases .Release.Name "secrets" "credentials" "secretRef" "name" ) }}
  {{ end }}

backupsEnabled: true
snapshotsEnabled: false
deployNodeAgent: false
schedules:
  full:
    labels:
      cluster: {{ $values.cluster.config.name }}
      type: full
    schedule: {{ $values.cluster.config.backups.schedule }}
    template:
      includedNamespaces:
        - "*"
