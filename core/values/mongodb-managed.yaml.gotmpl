{{/* Release Header - Start */}}

{{/* Common Variables */}}
{{ $values := (coalesce (. | getOrNil "values") (. | getOrNil "Values")) }}
{{ $release := (. | getOrNil "item") }}
{{ $releaseNamespace := (coalesce ($release | getOrNil "namespace") (. | getOrNil "Release" | getOrNil "Namespace")) }}
{{ $releaseName := (coalesce ($release | getOrNil "name") (. | getOrNil "Release" | getOrNil "Name")) }}

{{/* Releases Variables */}}
{{ $coreReleases := ($values | getOrNil "releases") }}
{{ $clusterReleases := ($values | getOrNil "clusterReleases") }}
{{ $environments := ($values | getOrNil "environments") }}
{{ $environment := ($environments | getOrNil $releaseNamespace) }}
{{ $applications := (coalesce ($environment | getOrNil "applications") ($values | getOrNil "applications")) }}
{{ $services := (coalesce ($environment | getOrNil "services") ($values | getOrNil "services")) }}

{{/* Applications Variables */}}
{{ $application := ($applications | getOrNil $releaseName) }}
{{ $service := ($services | getOrNil $releaseName) }}

{{/* Services Variables */}}
{{ $service := ($services | getOrNil $releaseName) }}

{{/* Core Releases */}}
{{ $coreRelease := ($coreReleases | getOrNil $releaseName) }}

{{/* Cluster Releases */}}
{{ $clusterRelease := ($clusterReleases | getOrNil $releaseName) }}

{{/* Release Variables */}}
{{ $release := (coalesce (. | getOrNil "item") $application $service $clusterRelease $coreRelease) }}
{{ $releaseType := (coalesce ($release | getOrNil "type") "unknown") }}

{{ if and $release $coreRelease }}
{{ $release = ((eq $coreRelease.name $release.name) | ternary (mergeOverwrite (deepCopy $coreRelease) $release) ($release)) }}
{{ end }}

{{ if ($release | getOrNil "injectCoreValuesFromRelease") }}
{{ $release = (mergeOverwrite ((deepCopy $coreReleases) | getOrNil ($release | getOrNil "injectCoreValuesFromRelease")) $release) }}
{{ end }}

{{/* Extensions Variables */}}
{{ $extensionType := (coalesce (. | getOrNil "extensionType") "unknown") }}
{{ $extension := (coalesce ($release | getOrNil $extensionType) ($release | getOrNil ($extensionType | camelcase | untitle)) ) }}

{{/* Template Variables */}}
{{ $templateValues := (dict "coreValues" $values "releaseValues" $extension "parentReleaseValues" $release "releaseNamespace" $releaseNamespace "releaseName" $releaseName) }}

{{/* Release Header - End */}}


{{ $defaultReplicaCount := 3 }}
{{ if (eq $releaseNamespace "dev") }}
{{ $defaultReplicaCount = 1 }}
{{ end }}
enabled: true
nameOverride: {{ $releaseName }}
fullnameOverride: {{ $releaseName }}
replicaCount: {{ $defaultReplicaCount }}
users:
  - name: {{ $releaseName }}-admin
    db: admin
    roles:
      - name: clusterAdmin
      - name: userAdminAnyDatabase
      - name: readWriteAnyDatabase
      - name: dbAdminAnyDatabase
{{ range $appName, $app := $applications }}
{{ if ($app | getOrNil "mongodb" | getOrNil "enabled") }}
{{ if (eq ($app | getOrNil "mongodb" | getOrNil "ref") $releaseName) }}
  - name: {{ $appName }}
    db: {{ $appName }}
    roles:
      - name: readWrite
{{ end }}
{{ end }}
{{ end }}

resources:
  limits:
    cpu: "2"
    memory: 2Gi
  requests:
    cpu: "0.3"
    memory: 128M

mongodbMonitoring:
  user:
    create: true
    additionnalRoles: []
  # Require external secrets set in cluster with a store in namespace
  externalSecrets:
    enabled: true

mongodb-exporter:
  enabled: true
  existingSecret:
    name: {{ $releaseName }}-admin-monitoring
    # name: {{ $releaseName }}-{{ $releaseName }}-mongodb-exporter-monitoring-password
