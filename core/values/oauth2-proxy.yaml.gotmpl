{{/* Release Header - Start */}}

{{/* Common Variables */}}
{{ $values := (coalesce (. | getOrNil "values") (. | getOrNil "Values")) }}
{{ $release := (. | getOrNil "item") }}
{{ $releaseNamespace := (coalesce ($release | getOrNil "namespace") (. | getOrNil "Release" | getOrNil "Namespace")) }}
{{ $releaseName := (coalesce ($release | getOrNil "name") (. | getOrNil "Release" | getOrNil "Name")) }}

{{/* Releases Variables */}}
{{ $coreReleases := ($values | getOrNil "releases") }}
{{ $clusterReleases := ($values | getOrNil "clusterReleases") }}
{{ $environments := ($values | getOrNil "environments") }}
{{ $environment := ($environments | getOrNil $releaseNamespace) }}
{{ $applications := (coalesce ($environment | getOrNil "applications") ($values | getOrNil "applications")) }}
{{ $services := (coalesce ($environment | getOrNil "services") ($values | getOrNil "services")) }}

{{/* Applications Variables */}}
{{ $application := ($applications | getOrNil $releaseName) }}
{{ $service := ($services | getOrNil $releaseName) }}

{{/* Services Variables */}}
{{ $service := ($services | getOrNil $releaseName) }}

{{/* Core Releases */}}
{{ $coreRelease := ($coreReleases | getOrNil $releaseName) }}

{{/* Cluster Releases */}}
{{ $clusterRelease := ($clusterReleases | getOrNil $releaseName) }}

{{/* Release Variables */}}
{{ $release := (coalesce (. | getOrNil "item") $application $service $clusterRelease $coreRelease) }}
{{ $releaseType := (coalesce ($release | getOrNil "type") "unknown") }}

{{ if and $release $coreRelease }}
{{ $release = ((eq $coreRelease.name $release.name) | ternary (mergeOverwrite (deepCopy $coreRelease) $release) ($release)) }}
{{ end }}

{{ if ($release | getOrNil "injectCoreValuesFromRelease") }}
{{ $release = (mergeOverwrite ((deepCopy $coreReleases) | getOrNil ($release | getOrNil "injectCoreValuesFromRelease")) $release) }}
{{ end }}

{{/* Extensions Variables */}}
{{ $extensionType := (coalesce (. | getOrNil "extensionType") "unknown") }}
{{ $extension := (coalesce ($release | getOrNil $extensionType) ($release | getOrNil ($extensionType | camelcase | untitle)) ) }}

{{/* Template Variables */}}
{{ $templateValues := (dict "coreValues" $values "releaseValues" $extension "parentReleaseValues" $release "releaseNamespace" $releaseNamespace "releaseName" $releaseName) }}

{{/* Release Header - End */}}
{{ $releaseSubdomain := ($coreReleases | getOrNil $releaseName | getOrNil "config" | getOrNil "ingress" | getOrNil "subdomain") }}
{{ $releaseDomain := ($release.metadata.config.domain) }}
{{ $serviceDomain := ($release.metadata.config.domain) }}
{{ $cookieDomain := $release.metadata.config.namespaceDomain }}
{{ $redirectDomain := $releaseDomain }}
{{ $isService := false }}

{{ if (eq $releaseNamespace "oauth2-proxy") }}
{{ $releaseDomain = printf "%s.%s" $releaseSubdomain $release.metadata.config.clusterDomain }}
{{ $cookieDomain = $release.metadata.config.clusterDomain }}
{{ else }}
{{ $isService = true }}
{{ $releaseDomain = printf "%s.%s" $releaseSubdomain $release.metadata.config.namespaceDomain }}
{{ end }}
{{ $redirectDomain = $releaseDomain }}


ingress:
  enabled: true
  className: {{ .Values.cluster.common.defaultIngressClass }}
  certManager: true
  annotations:
    forecastle.stakater.com/icon: https://repository-images.githubusercontent.com/105262714/eeb5b100-faff-11e9-9b0b-a97d43094103
  {{- if .Values.cluster.common.defaultIngressAnnotations }}
    {{ toYaml .Values.cluster.common.defaultIngressAnnotations | nindent 4 }}
  {{- end }}
  {{- if ($release | getOrNil "config" | getOrNil "ingress" | getOrNil "annotations") }}
    {{ toYaml ($release | getOrNil "config" | getOrNil "ingress" | getOrNil "annotations") | nindent 4 }}
  {{- end }}

  hosts:
    - {{ $releaseDomain }}
  tls:
    - secretName: {{ $releaseDomain | replace "." "-"}}-tls
      hosts:
        - {{ $releaseDomain }}

replicaCount: 2
podDisruptionBudget:
  enabled: true
  minAvailable: 1

config:
  configFile: {}
  existingConfig: {}

extraArgs:
  provider: oidc
  oidc-issuer-url: {{ printf "https://%s.%s/" ($coreReleases | getOrNil "dex" | getOrNil "config" | getOrNil "ingress" | getOrNil "subdomain") ( $release.metadata.config.clusterDomain) | quote }}
  scope: openid email profile
  email-domain: {{ ($release | getOrNil "config" | getOrNil "rules" | getOrNil "emailDomain") | quote }}
  cookie-expire: {{ coalesce ($release | getOrNil "config" | getOrNil "rules" | getOrNil "cookieExpiration") "12h" }}
  reverse-proxy: true
  upstream: static://202
  pass-user-headers: true
  pass-authorization-header: true
  set-authorization-header: true
  set-xauthrequest: true
  redirect-url: {{ printf "https://%s/oauth2/callback" $redirectDomain }}
  whitelist-domain: {{ coalesce (index $release "config" "rules" "allowedDomainRedirection") (printf "*.%s" $cookieDomain) | quote }}
  cookie-domain: {{ coalesce (index $release "config" "rules" "cookieDomain") (printf ".%s" $cookieDomain) | quote }}
  cookie-name: {{ printf "oauth_%s" $cookieDomain | replace "." "_" }}

proxyVarsAsSecrets: false

extraEnv:
  - name: OAUTH2_PROXY_CLIENT_ID
    valueFrom:
      secretKeyRef:
        name: {{ ($release | getOrNil "secrets" | getOrNil "default-oauth2-client"  | getOrNil "secretRef" | getOrNil "name" ) }}
        key: DEFAULT_STATIC_CLIENT_ID
  - name: OAUTH2_PROXY_CLIENT_SECRET
    valueFrom:
      secretKeyRef:
        name: {{ ($release | getOrNil "secrets" | getOrNil "default-oauth2-client"  | getOrNil "secretRef" | getOrNil "name" ) }}
        key: DEFAULT_STATIC_CLIENT_SECRET
  - name: OAUTH2_PROXY_COOKIE_SECRET
    valueFrom:
      secretKeyRef:
        name: {{ printf "%s-dynamic-secrets-%s" .Release.Name ($release | getOrNil "dynamicSecrets" | getOrNil "oauth2-cookie-secret" | getOrNil "secretRef" | getOrNil "name" ) }}
        key: OAUTH2_PROXY_COOKIE_SECRET



metrics:
  enabled: {{ $release | getOrNil "config" | getOrNil "metrics" | getOrNil "enabled" }}
  servicemonitor:
    enabled: {{ coalesce ($release | getOrNil "config" | getOrNil "metrics" | getOrNil "serviceMonitor" | getOrNil "enabled") .Values.core.packages.monitoring.enabled }}
    interval: 30s
