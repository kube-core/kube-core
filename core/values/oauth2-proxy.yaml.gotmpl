{{ $releaseNamespace := .Release.Namespace }}
{{ $releaseName := .Release.Name }}

ingress:
  enabled: true
  className: {{ .Values.cluster.common.defaultIngressClass }}
  certManager: true
  annotations:
  {{- if .Values.cluster.common.defaultIngressAnnotations }}
    {{ toYaml .Values.cluster.common.defaultIngressAnnotations | nindent 4 }}
  {{- end }}
  {{- if (index .Values.releases .Release.Name "config" "ingress" "annotations") }}
    {{ toYaml (index .Values.releases .Release.Name "config" "ingress" "annotations") | nindent 4 }}
  {{- end }}
  {{- if eq (index .Values.releases $releaseName "namespace") $releaseNamespace }}
  hosts: 
    - {{ (index .Values.releases .Release.Name "config" "ingress" "subdomain") }}.{{ .Values.cluster.config.domain }}
  tls:
    - secretName: {{ (index .Values.releases .Release.Name "config" "ingress" "subdomain") | replace "." "-"}}-tls
      hosts:
        - {{ (index .Values.releases .Release.Name "config" "ingress" "subdomain") }}.{{ .Values.cluster.config.domain }}
  {{- else }}
  hosts: 
    - {{ (index .Values.releases .Release.Name "config" "ingress" "subdomain") }}.{{ $releaseNamespace }}.{{ .Values.cluster.config.domain }}
  tls:
    - secretName: {{ printf "%s-%s" (index .Values.releases .Release.Name "config" "ingress" "subdomain") $releaseNamespace | replace "." "-"}}-tls
      hosts:
        - {{ (index .Values.releases .Release.Name "config" "ingress" "subdomain") }}.{{ $releaseNamespace }}.{{ .Values.cluster.config.domain }}
  {{- end }}

image:
  registry: docker.io
  repository: bitnami/oauth2-proxy
  tag: 7.4.0-debian-11-r3

replicaCount: 2
podDisruptionBudget:
  enabled: true
  minAvailable: 1

config:
  configFile: {}
  existingConfig: {}

extraArgs:
  provider: oidc
  oidc-issuer-url: {{ printf "https://%s.%s/" (index .Values.releases "dex" "config" "ingress" "subdomain") ( .Values.cluster.config.domain ) | quote }}
  scope: openid email profile
  email-domain: {{ (index .Values.releases .Release.Name "config" "rules" "emailDomain") | quote }}
  cookie-name: {{ printf "secure_%s" .Release.Name | snakecase }}
  cookie-expire: {{ (index .Values.releases .Release.Name "config" "rules" "cookieExpiration") }}
  reverse-proxy: true
  upstream: static://202
  pass-user-headers: true
  pass-authorization-header: true
  set-authorization-header: true
  set-xauthrequest: true
  {{- if eq (index .Values.releases $releaseName "namespace") $releaseNamespace }}
  redirect-url: {{ printf "https://%s.%s/oauth2/callback" (index .Values.releases .Release.Name "config" "ingress" "subdomain") .Values.cluster.config.domain }}
  whitelist-domain: {{ coalesce (index .Values.releases .Release.Name "config" "rules" "allowedDomainRedirection") (printf "*.%s" .Values.cluster.config.domain) | quote }}
  cookie-domain: {{ printf ".%s" .Values.cluster.config.domain | quote }}
  {{- else }}
  redirect-url: {{ printf "https://%s.%s.%s/oauth2/callback" (index .Values.releases .Release.Name "config" "ingress" "subdomain") $releaseNamespace .Values.cluster.config.domain }}
  whitelist-domain: {{ coalesce (index .Values.releases .Release.Name "config" "rules" "allowedDomainRedirection") (printf "*.%s.%s" $releaseNamespace .Values.cluster.config.domain) | quote }}
  cookie-domain: {{ printf ".%s.%s" $releaseNamespace .Values.cluster.config.domain | quote }}
  {{- end }}

proxyVarsAsSecrets: false

extraEnv:
  - name: OAUTH2_PROXY_CLIENT_ID
    valueFrom:
      secretKeyRef:
        name: {{ (index .Values.releases .Release.Name "secrets" "default-oauth2-client" "secretRef" "name" ) }}
        key: DEFAULT_STATIC_CLIENT_ID
  - name: OAUTH2_PROXY_CLIENT_SECRET
    valueFrom:
      secretKeyRef:
        name: {{ (index .Values.releases .Release.Name "secrets" "default-oauth2-client" "secretRef" "name" ) }}
        key: DEFAULT_STATIC_CLIENT_SECRET
  - name: OAUTH2_PROXY_COOKIE_SECRET
    valueFrom:
      secretKeyRef:
        name: oauth2-cookie-secret
        key: OAUTH2_PROXY_COOKIE_SECRET

metrics:
  enabled: {{ index .Values.releases .Release.Name "config" "metrics" "enabled" }}
  servicemonitor:
    enabled: {{ coalesce (index .Values.releases .Release.Name "config" "metrics" "serviceMonitor" "enabled") .Values.core.packages.monitoring.enabled }}
    interval: 30s
