{{/* Release Header - Start */}}

{{/* Common Variables */}}
{{ $values := (coalesce (. | getOrNil "values") (. | getOrNil "Values")) }}
{{ $release := (. | getOrNil "item") }}
{{ $releaseNamespace := (coalesce ($release | getOrNil "namespace") (. | getOrNil "Release" | getOrNil "Namespace")) }}
{{ $releaseName := (coalesce ($release | getOrNil "name") (. | getOrNil "Release" | getOrNil "Name")) }}

{{/* Releases Variables */}}
{{ $coreReleases := ($values | getOrNil "releases") }}
{{ $clusterReleases := ($values | getOrNil "clusterReleases") }}
{{ $environments := ($values | getOrNil "environments") }}
{{ $environment := ($environments | getOrNil $releaseNamespace) }}
{{ $applications := (coalesce ($environment | getOrNil "applications") ($values | getOrNil "applications")) }}
{{ $services := (coalesce ($environment | getOrNil "services") ($values | getOrNil "services")) }}

{{/* Applications Variables */}}
{{ $application := ($applications | getOrNil $releaseName) }}
{{ $service := ($services | getOrNil $releaseName) }}

{{/* Services Variables */}}
{{ $service := ($services | getOrNil $releaseName) }}

{{/* Core Releases */}}
{{ $coreRelease := ($coreReleases | getOrNil $releaseName) }}

{{/* Cluster Releases */}}
{{ $clusterRelease := ($clusterReleases | getOrNil $releaseName) }}

{{/* Release Variables */}}
{{ $release := (coalesce (. | getOrNil "item") $application $service $clusterRelease $coreRelease) }}
{{ $releaseType := (coalesce ($release | getOrNil "type") "unknown") }}

{{ if and $release $coreRelease }}
{{ $release = ((eq $coreRelease.name $release.name) | ternary (mergeOverwrite (deepCopy $coreRelease) $release) ($release)) }}
{{ end }}

{{ if ($release | getOrNil "injectCoreValuesFromRelease") }}
{{ $release = (mergeOverwrite ((deepCopy $coreReleases) | getOrNil ($release | getOrNil "injectCoreValuesFromRelease")) $release) }}
{{ end }}

{{/* Extensions Variables */}}
{{ $extensionType := (coalesce (. | getOrNil "extensionType") "unknown") }}
{{ $extension := (coalesce ($release | getOrNil $extensionType) ($release | getOrNil ($extensionType | camelcase | untitle)) ) }}

{{/* Template Variables */}}
{{ $templateValues := (dict "coreValues" $values "releaseValues" $extension "parentReleaseValues" $release "releaseNamespace" $releaseNamespace "releaseName" $releaseName) }}

{{/* Release Header - End */}}


manifests:
{{ range $secretName, $secretData := $extension }}
{{ $crossplaneGenerated := (coalesce ($secretData | getOrNil "crossplaneGenerated") false) }}
{{ $secretEnabled := (coalesce ($secretData | getOrNil "enabled") false) }}
{{ $replicateFrom := $secretData.replicateFrom }}

{{ if (not $crossplaneGenerated) }}
{{ else if (and $crossplaneGenerated $release.metadata.config.cloudEnabled) }}
{{ $replicateFrom = (printf "crossplane-system/%s" (coalesce ($secretData | getOrNil "crossplaneNameOverride") $release.metadata.namingConfig.templated.releaseServiceAccountKeyName $releaseName)) }}
{{ end }}

{{ if $secretEnabled }}
- apiVersion: v1
  kind: Secret
  metadata:
    name: {{ $secretData.secretRef.name }}
    annotations:
      replicator.v1.mittwald.de/replicate-from: {{ $replicateFrom }}
      {{ if (and (eq $secretName "git-ssh") (eq $releaseName "tekton")) }}
      tekton.dev/git-1: {{ $values.git.ssh.host }}
      {{ end }}
      {{ if ($secretData | getOrNil "extraAnnotations") }}
      {{ range $k, $v := ($secretData | getOrNil "extraAnnotations") }}
      {{ $k }}: {{ $v | quote }}
      {{ end }}
      {{ end }}
    {{ if ($secretData | getOrNil "extraLabels") }}
    labels:
      {{ range $k, $v := ($secretData | getOrNil "extraLabels") }}
      {{ $k }}: {{ $v | quote }}
      {{ end }}
    {{ end }}
  type: {{ (coalesce ($secretData | getOrNil "type") "Opaque") }}
  data: {}
{{ end }}
{{ end }}
