{{/* Release Header - Start */}}

{{/* Common Variables */}}
{{ $values := (coalesce (. | getOrNil "values") (. | getOrNil "Values")) }}
{{ $release := (. | getOrNil "item") }}
{{ $releaseNamespace := (coalesce ($release | getOrNil "namespace") (. | getOrNil "Release" | getOrNil "Namespace")) }}
{{ $releaseName := (coalesce ($release | getOrNil "name") (. | getOrNil "Release" | getOrNil "Name")) }}

{{/* Releases Variables */}}
{{ $coreReleases := ($values | getOrNil "releases") }}
{{ $clusterReleases := ($values | getOrNil "clusterReleases") }}
{{ $environments := ($values | getOrNil "environments") }}
{{ $environment := ($environments | getOrNil $releaseNamespace) }}
{{ $applications := (coalesce ($environment | getOrNil "applications") ($values | getOrNil "applications")) }}
{{ $services := (coalesce ($environment | getOrNil "services") ($values | getOrNil "services")) }}

{{/* Applications Variables */}}
{{ $application := ($applications | getOrNil $releaseName) }}
{{ $service := ($services | getOrNil $releaseName) }}

{{/* Services Variables */}}
{{ $service := ($services | getOrNil $releaseName) }}

{{/* Core Releases */}}
{{ $coreRelease := ($coreReleases | getOrNil $releaseName) }}

{{/* Cluster Releases */}}
{{ $clusterRelease := ($clusterReleases | getOrNil $releaseName) }}

{{/* Release Variables */}}
{{ $release := (coalesce (. | getOrNil "item") $application $service $clusterRelease $coreRelease) }}
{{ $releaseType := (coalesce ($release | getOrNil "type") "unknown") }}

{{ if and $release $coreRelease }}
{{ $release = ((eq $coreRelease.name $release.name) | ternary (mergeOverwrite (deepCopy $coreRelease) $release) ($release)) }}
{{ end }}

{{ if ($release | getOrNil "injectCoreValuesFromRelease") }}
{{ $release = (mergeOverwrite ((deepCopy $coreReleases) | getOrNil ($release | getOrNil "injectCoreValuesFromRelease")) $release) }}
{{ end }}

{{/* Extensions Variables */}}
{{ $extensionType := (coalesce (. | getOrNil "extensionType") "unknown") }}
{{ $extension := (coalesce ($release | getOrNil $extensionType) ($release | getOrNil ($extensionType | camelcase | untitle)) ) }}

{{/* Template Variables */}}
{{ $templateValues := (dict "coreValues" $values "releaseValues" $extension "parentReleaseValues" $release "releaseNamespace" $releaseNamespace "releaseName" $releaseName) }}

{{/* Release Header - End */}}

## DNS provider where the DNS records will be created. Available providers are:
## - alibabacloud, aws, azure, azure-private-dns, cloudflare, coredns, designate, digitalocean, google, hetzner, infoblox, linode, rfc2136, transip
##
{{ if eq $values.cloud.provider "gcp" }}
provider: "google"
{{ else if eq $values.cloud.provider "aws" }}
provider: "aws"
{{ end }}


{{ if eq $values.cloud.provider "gcp" }}
## Google configuration to be set via arguments/env. variables
##
google:
  ## Google Project to use
  ##
  project: {{ $values.cloud.project }}
  ## Google Application Credentials
  ##
  serviceAccountSecret: {{ (index $release "secrets" "credentials" "secretRef" "name") }}
  serviceAccountSecretKey: {{ (index $release "secrets" "credentials" "secretRef" "key") }}
  serviceAccountKey: null
{{ else if eq $values.cloud.provider "aws"}}
## AWS configuration to be set via arguments/env. variables
##
aws:
  region: {{ $values.cloud.default.location }}
serviceAccount:
  create: true
  annotations:
    eks.amazonaws.com/role-arn: {{ index $release "config" "role-arn" }}
  ## @param serviceAccount.automountServiceAccountToken Automount API credentials for a service account.
  ##
{{ end }}
## Limit possible target zones by domain suffixes (optional)
##
domainFilters:
- {{ $values.cluster.config.domain }}
{{ range $key, $value := $values.cluster.config.additionnalDomains }}
- {{ toYaml $value }}
{{ end }}

txtOwnerId: {{ $values.cluster.config.name }}

## Adjust the interval for DNS updates
##
interval: "1m"
## Verbosity of the ExternalDNS logs. Available values are:
## - panic, debug, info, warn, error, fatal
##
logLevel: info
## Formats of the ExternalDNS logs. Available values are:
## - text, json
##
logFormat: json
## Modify how DNS records are synchronized between sources and providers (options: sync, upsert-only)
##
policy: upsert-only
## Registry Type. Available types are: txt, noop
## ref: https://github.com/kubernetes-sigs/external-dns/blob/master/docs/proposal/registry.md
##
registry: "txt"

## Replica count
##
replicaCount: {{ index $release "config" "replicaCount" }}
