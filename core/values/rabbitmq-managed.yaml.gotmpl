{{/* Release Header - Start */}}

{{/* Common Variables */}}
{{ $values := (coalesce (. | getOrNil "values") (. | getOrNil "Values")) }}
{{ $release := (. | getOrNil "item") }}
{{ $releaseNamespace := (coalesce ($release | getOrNil "namespace") (. | getOrNil "Release" | getOrNil "Namespace")) }}
{{ $releaseName := (coalesce ($release | getOrNil "name") (. | getOrNil "Release" | getOrNil "Name")) }}

{{/* Releases Variables */}}
{{ $coreReleases := ($values | getOrNil "releases") }}
{{ $clusterReleases := ($values | getOrNil "clusterReleases") }}
{{ $environments := ($values | getOrNil "environments") }}
{{ $environment := ($environments | getOrNil $releaseNamespace) }}
{{ $applications := (coalesce ($environment | getOrNil "applications") ($values | getOrNil "applications")) }}
{{ $services := (coalesce ($environment | getOrNil "services") ($values | getOrNil "services")) }}

{{/* Applications Variables */}}
{{ $application := ($applications | getOrNil $releaseName) }}
{{ $service := ($services | getOrNil $releaseName) }}

{{/* Services Variables */}}
{{ $service := ($services | getOrNil $releaseName) }}

{{/* Core Releases */}}
{{ $coreRelease := ($coreReleases | getOrNil $releaseName) }}

{{/* Cluster Releases */}}
{{ $clusterRelease := ($clusterReleases | getOrNil $releaseName) }}

{{/* Release Variables */}}
{{ $release := (coalesce (. | getOrNil "item") $application $service $clusterRelease $coreRelease) }}
{{ $releaseType := (coalesce ($release | getOrNil "type") "unknown") }}

{{ if and $release $coreRelease }}
{{ $release = ((eq $coreRelease.name $release.name) | ternary (mergeOverwrite (deepCopy $coreRelease) $release) ($release)) }}
{{ end }}

{{ if ($release | getOrNil "injectCoreValuesFromRelease") }}
{{ $release = (mergeOverwrite ((deepCopy $coreReleases) | getOrNil ($release | getOrNil "injectCoreValuesFromRelease")) $release) }}
{{ end }}

{{/* Extensions Variables */}}
{{ $extensionType := (coalesce (. | getOrNil "extensionType") "unknown") }}
{{ $extension := (coalesce ($release | getOrNil $extensionType) ($release | getOrNil ($extensionType | camelcase | untitle)) ) }}

{{/* Template Variables */}}
{{ $templateValues := (dict "coreValues" $values "releaseValues" $extension "parentReleaseValues" $release "releaseNamespace" $releaseNamespace "releaseName" $releaseName) }}

{{/* Release Header - End */}}
cluster: {{ toYaml $values.cluster | nindent 2 }}

{{ $defaultReplicaCount := 3 }}

{{ if (eq $releaseNamespace "dev") }}
{{ $defaultReplicaCount = 1 }}
{{ end }}

nameOverride: {{ $releaseName }}
fullnameOverride: {{ $releaseName }}
ingress:
  enabled: true
  tls:
    enabled: true
  host: {{ $releaseName }}.{{ .Release.Namespace }}.{{ .Values.cluster.config.domain }}

cluster:
  replicaCount: {{ $defaultReplicaCount }}
  extraSpec:
    rabbitmq:
      additionalConfig: |
        prometheus.return_per_object_metrics = true
    resources:
      limits:
        cpu: "2"
        memory: 2Gi
      requests:
        cpu: "0.3"
        memory: 128M
    override:
      statefulSet:
        spec:
          template:
            metadata:
              labels:
                logging.kube-core.io/flow-name: app
vhosts:
{{ if (eq $releaseName "rabbitmq") }}
- {{ $releaseNamespace }}
{{ else if (not (eq $releaseName "rabbitmq")) }}
{{ $rabbitmqName := $releaseName | replace "-rabbitmq" "" }}
- {{ $rabbitmqName }}
{{ end }}


users:
- name: {{ $releaseName }}-admin
  permissions:
  - vhost: "/"
  {{ if (eq $releaseName "rabbitmq") }}
  - vhost: {{ $releaseNamespace }}
  {{ else if (not (eq $releaseName "rabbitmq")) }}
  {{ $rabbitmqName := $releaseName | replace "-rabbitmq" "" }}
  - vhost: {{ $rabbitmqName }}
  {{ end }}
