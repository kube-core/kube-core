{{/* Release Header - Start */}}

{{/* Common Variables */}}
{{ $values := (coalesce (. | getOrNil "values") (. | getOrNil "Values")) }}
{{ $release := (. | getOrNil "item") }}
{{ $releaseNamespace := (coalesce ($release | getOrNil "namespace") (. | getOrNil "Release" | getOrNil "Namespace")) }}
{{ $releaseName := (coalesce ($release | getOrNil "name") (. | getOrNil "Release" | getOrNil "Name")) }}

{{/* Releases Variables */}}
{{ $coreReleases := ($values | getOrNil "releases") }}
{{ $clusterReleases := ($values | getOrNil "clusterReleases") }}
{{ $environments := ($values | getOrNil "environments") }}
{{ $environment := ($environments | getOrNil $releaseNamespace) }}
{{ $applications := (coalesce ($environment | getOrNil "applications") ($values | getOrNil "applications")) }}
{{ $services := (coalesce ($environment | getOrNil "services") ($values | getOrNil "services")) }}

{{/* Applications Variables */}}
{{ $application := ($applications | getOrNil $releaseName) }}
{{ $service := ($services | getOrNil $releaseName) }}

{{/* Services Variables */}}
{{ $service := ($services | getOrNil $releaseName) }}

{{/* Core Releases */}}
{{ $coreRelease := ($coreReleases | getOrNil $releaseName) }}

{{/* Cluster Releases */}}
{{ $clusterRelease := ($clusterReleases | getOrNil $releaseName) }}

{{/* Release Variables */}}
{{ $release := (coalesce (. | getOrNil "item") $application $service $clusterRelease $coreRelease) }}
{{ $releaseType := (coalesce ($release | getOrNil "type") "unknown") }}

{{ if and $release $coreRelease }}
{{ $release = ((eq $coreRelease.name $release.name) | ternary (mergeOverwrite (deepCopy $coreRelease) $release) ($release)) }}
{{ end }}

{{ if ($release | getOrNil "injectCoreValuesFromRelease") }}
{{ $release = (mergeOverwrite ((deepCopy $coreReleases) | getOrNil ($release | getOrNil "injectCoreValuesFromRelease")) $release) }}
{{ end }}

{{/* Extensions Variables */}}
{{ $extensionType := (coalesce (. | getOrNil "extensionType") "unknown") }}
{{ $extension := (coalesce ($release | getOrNil $extensionType) ($release | getOrNil ($extensionType | camelcase | untitle)) ) }}

{{/* Template Variables */}}
{{ $templateValues := (dict "coreValues" $values "releaseValues" $extension "parentReleaseValues" $release "releaseNamespace" $releaseNamespace "releaseName" $releaseName) }}

{{/* Release Header - End */}}

cluster: {{ toYaml $values.cluster | nindent 2 }}
replicaCount: 3
serviceMonitor:
  enabled: true

resources:
  # -- Pod resource limits
  limits:
    memory: 512Mi
  # -- Pod resource requests
  requests:
    cpu: 100m
    memory: 128Mi

initResources:
  # -- Pod resource limits
  limits:
    cpu: 100m
    memory: 256Mi
  # -- Pod resource requests
  requests:
    cpu: 10m
    memory: 64Mi
# -- Extra arguments to give to the binary.
extraArgs:
  - --autogenInternals=false
  - --backgroundScan=1h
config:
  # -- Resource types to be skipped by the Kyverno policy engine.
  # Make sure to surround each entry in quotes so that it doesn't get parsed as a nested YAML list.
  # These are joined together without spaces, run through `tpl`, and the result is set in the config map.
  # @default -- See [values.yaml](values.yaml)
  resourceFilters:
  {{ range (index $release "config" "extraResourceFilters") }}
  - '{{ . }}'
  {{ end }}
  - '[Event,*,*]'
  - '[*,kube-system,*]'
  - '[*,kube-public,*]'
  - '[*,kube-node-lease,*]'
  # - '[Node,*,*]'
  - '[APIService,*,*]'
  - '[TokenReview,*,*]'
  - '[SubjectAccessReview,*,*]'
  - '[SelfSubjectAccessReview,*,*]'
  - '[Binding,*,*]'
  - '[ReplicaSet,*,*]'
  - '[ReportChangeRequest,*,*]'
  - '[ClusterReportChangeRequest,*,*]'
  # exclude resources from the chart
  - '[ClusterRole,*,{{`{{ template "kyverno.fullname" . }}`}}:*]'
  - '[ClusterRoleBinding,*,{{`{{ template "kyverno.fullname" . }}`}}:*]'
  - '[ServiceAccount,{{`{{ include "kyverno.namespace" . }}`}},{{`{{ template "kyverno.serviceAccountName" . }}`}}]'
  - '[ConfigMap,{{`{{ include "kyverno.namespace" . }}`}},{{`{{ template "kyverno.configMapName" . }}`}}]'
  - '[ConfigMap,{{`{{ include "kyverno.namespace" . }}`}},{{`{{ template "kyverno.metricsConfigMapName" . }}`}}]'
  - '[Deployment,{{`{{ include "kyverno.namespace" . }}`}},{{`{{ template "kyverno.fullname" . }}`}}]'
  - '[Job,{{`{{ include "kyverno.namespace" . }}`}},{{`{{ template "kyverno.fullname" . }}`}}-hook-pre-delete]'
  - '[NetworkPolicy,{{`{{ include "kyverno.namespace" . }}`}},{{`{{ template "kyverno.fullname" . }}`}}]'
  - '[PodDisruptionBudget,{{`{{ include "kyverno.namespace" . }}`}},{{`{{ template "kyverno.fullname" . }}`}}]'
  - '[Role,{{`{{ include "kyverno.namespace" . }}`}},{{`{{ template "kyverno.fullname" . }}`}}:*]'
  - '[RoleBinding,{{`{{ include "kyverno.namespace" . }}`}},{{`{{ template "kyverno.fullname" . }}`}}:*]'
  - '[Secret,{{`{{ include "kyverno.namespace" . }}`}},{{`{{ template "kyverno.serviceName" . }}`}}.{{`{{ template "kyverno.namespace" . }}`}}.svc.*]'
  - '[Service,{{`{{ include "kyverno.namespace" . }}`}},{{`{{ template "kyverno.serviceName" . }}`}}]'
  - '[Service,{{`{{ include "kyverno.namespace" . }}`}},{{`{{ template "kyverno.serviceName" . }}`}}-metrics]'
  - '[ServiceMonitor,{{`{{ if .Values.serviceMonitor.namespace }}`}}{{`{{ .Values.serviceMonitor.namespace }}`}}{{`{{ else }}`}}{{`{{ template "kyverno.namespace" . }}`}}{{`{{ end }}`}},{{`{{ template "kyverno.serviceName" . }}`}}-service-monitor]'
  - '[Pod,{{`{{ include "kyverno.namespace" . }}`}},{{`{{ template "kyverno.fullname" . }}`}}-test]'
