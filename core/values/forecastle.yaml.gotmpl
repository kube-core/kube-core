{{/* Release Header - Start */}}

{{/* Common Variables */}}
{{ $values := (coalesce (. | getOrNil "values") (. | getOrNil "Values")) }}
{{ $release := (. | getOrNil "item") }}
{{ $releaseNamespace := (coalesce ($release | getOrNil "namespace") (. | getOrNil "Release" | getOrNil "Namespace")) }}
{{ $releaseName := (coalesce ($release | getOrNil "name") (. | getOrNil "Release" | getOrNil "Name")) }}

{{/* Releases Variables */}}
{{ $coreReleases := ($values | getOrNil "releases") }}
{{ $clusterReleases := ($values | getOrNil "clusterReleases") }}
{{ $environments := ($values | getOrNil "environments") }}
{{ $environment := ($environments | getOrNil $releaseNamespace) }}
{{ $applications := (coalesce ($environment | getOrNil "applications") ($values | getOrNil "applications")) }}
{{ $services := (coalesce ($environment | getOrNil "services") ($values | getOrNil "services")) }}

{{/* Applications Variables */}}
{{ $application := ($applications | getOrNil $releaseName) }}
{{ $service := ($services | getOrNil $releaseName) }}

{{/* Services Variables */}}
{{ $service := ($services | getOrNil $releaseName) }}

{{/* Core Releases */}}
{{ $coreRelease := ($coreReleases | getOrNil $releaseName) }}

{{/* Cluster Releases */}}
{{ $clusterRelease := ($clusterReleases | getOrNil $releaseName) }}

{{/* Release Variables */}}
{{ $release := (coalesce (. | getOrNil "item") $application $service $clusterRelease $coreRelease) }}
{{ $releaseType := (coalesce ($release | getOrNil "type") "unknown") }}

{{ if and $release $coreRelease }}
{{ $release = ((eq $coreRelease.name $release.name) | ternary (mergeOverwrite (deepCopy $coreRelease) $release) ($release)) }}
{{ end }}

{{ if ($release | getOrNil "injectCoreValuesFromRelease") }}
{{ $release = (mergeOverwrite ((deepCopy $coreReleases) | getOrNil ($release | getOrNil "injectCoreValuesFromRelease")) $release) }}
{{ end }}

{{/* Extensions Variables */}}
{{ $extensionType := (coalesce (. | getOrNil "extensionType") "unknown") }}
{{ $extension := (coalesce ($release | getOrNil $extensionType) ($release | getOrNil ($extensionType | camelcase | untitle)) ) }}

{{/* Template Variables */}}
{{ $templateValues := (dict "coreValues" $values "releaseValues" $extension "parentReleaseValues" $release "releaseNamespace" $releaseNamespace "releaseName" $releaseName) }}

{{/* Release Header - End */}}

forecastle:
  config:
    namespaceSelector:
      {{ toYaml (index $release "config" "namespaceSelector") | indent 6 | trim }}
    headerBackground:
    headerForeground:
    title: {{ default (printf "%s-cluster" $values.cluster.config.name ) (index $release "config" "title") }}
  service:
    annotations:
      {{ toYaml $values.cluster.common.defaultServiceAnnotations | indent 6 | trim }}
    expose: "false"
  ingress:
    enabled: true
    annotations:
      forecastle.stakater.com/icon: https://raw.githubusercontent.com/stakater/Forecastle/master/assets/web/forecastle-round-100px.png
    {{ if $values.cluster.common.defaultIngressAnnotations }}
      {{ toYaml $values.cluster.common.defaultIngressAnnotations | nindent 6 }}
    {{- end }}
    {{- if (index $release "config" "ingress" "annotations") }}
      {{ toYaml (index $release "config" "ingress" "annotations") | nindent 6 }}
    {{- end }}
    labels:
    {{ if $values.cluster.common.defaultIngressLabels }}
      {{ toYaml $values.cluster.common.defaultIngressLabels | nindent 6 }}
    {{- end }}
    {{- if (index $release "config" "ingress" "labels") }}
      {{ toYaml (index $release "config" "ingress" "labels") | nindent 6 }}
    {{- end }}
    className: {{ $values.cluster.common.defaultIngressClass }}
    hosts:
    - host: {{ (index $release "config" "ingress" "subdomain") }}.{{ $values.cluster.config.domain }}
      paths:
      - path: /
        pathType: Prefix
    tls:
    - hosts:
      - {{ (index $release "config" "ingress" "subdomain") }}.{{ $values.cluster.config.domain }}
      secretName: {{ (index $release "config" "ingress" "subdomain") | replace "." "-"}}-tls
