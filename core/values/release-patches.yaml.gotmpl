{{ $values := .values }}
{{ $releases := (merge $values.releases $values.applicationsList $values.servicesList )}}

{{ $releaseNamespace := .releaseNamespace }}
{{ $mainReleaseName := (.releaseName | replace "-patches" "") }}
{{ $mainRelease := .item }}

{{ $releasePatches := (index $releases $mainReleaseName "patches" )}}
{{ $releasePatchesEnabled := ($releasePatches | getOrNil "enabled") }}

manifests:
{{ if (not (eq $releaseNamespace "patch-operator")) }}
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: patch-operator-admin-{{ $releaseNamespace }}-{{ $mainReleaseName }}

- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    name: patch-operator-admin-{{ $releaseNamespace }}-{{ $mainReleaseName }}
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: cluster-admin
  subjects:
  - kind: ServiceAccount
    name: patch-operator-admin-{{ $releaseNamespace }}-{{ $mainReleaseName }}
    namespace: {{ $releaseNamespace }}
{{ end }}

{{ if $releasePatches.patches }}
- apiVersion: redhatcop.redhat.io/v1alpha1
  kind: Patch
  metadata:
    name: {{ $mainReleaseName }}
  spec:
    serviceAccountRef:
      name: patch-operator-admin-{{ $releaseNamespace }}-{{ $mainReleaseName }}
    patches:
    {{ range $key, $patch := $releasePatches.patches }}
      {{ $patch.name }}:
        targetObjectRef: {{ toYaml $patch.targetObjectRef | nindent 10 }}
        patchType: {{ coalesce (getOrNil "patchType" $patch) "application/strategic-merge-patch+json" }}
        patchTemplate: |
          {{ toYaml $patch.patchTemplate | nindent 10 }}
    {{ end }}
{{ end }}
