{{/* Extensions Header - Start */}}

{{/* Common Variables */}}
{{ $values := (coalesce (. | getOrNil "values") (. | getOrNil "Values")) }}
{{ $releases := (merge $values.releases $values.applications $values.services )}}

{{/* Release Variables */}}
{{ $release := .item }}
{{ $releaseName := $release.name }}
{{ $releaseNamespace := $release.namespace }}
{{ $releaseType := $release.type }}
{{ $extension := (coalesce (index $release .extensionType) (index $release (.extensionType | camelcase | untitle)) ) }}
{{ $extensionEnabled := ($extension | getOrNil "enabled") }}

{{ $templateValues := (dict "coreValues" $values "releaseValues" $extension "parentReleaseValues" $release "releaseNamespace" $releaseNamespace "releaseName" $releaseName) }}

{{/* Extensions Header - End */}}

{{/* Cloud Naming Header - Start */}}

{{ $name := $release.metadata.namingConfig.templated.name }}
{{ $shortName := $release.metadata.namingConfig.templated.shortName }}
{{ $releaseServiceAccountName := $release.metadata.namingConfig.templated.releaseServiceAccountName }}
{{ $releaseServiceAccountKeyName := $release.metadata.namingConfig.templated.releaseServiceAccountKeyName }}
{{ $releaseBucketName := $release.metadata.namingConfig.templated.releaseBucketName }}
{{ $releaseBucketPolicyName := $release.metadata.namingConfig.templated.releaseBucketPolicyName }}
{{ $releaseBackendBucketName := $release.metadata.namingConfig.templated.releaseBackendBucketName }}
{{ $releaseIamMemberName := $release.metadata.namingConfig.templated.releaseIamMemberName }}
{{ $releaseIamRoleName := $release.metadata.namingConfig.templated.releaseIamRoleName }}
{{ $releaseIamRoleExternalName := $release.metadata.namingConfig.templated.releaseIamRoleExternalName }}
{{ $releaseGlobalAddressName := $release.metadata.namingConfig.templated.releaseGlobalAddressName }}
{{ $releaseGlobalForwardingRuleName := $release.metadata.namingConfig.templated.releaseGlobalForwardingRuleName }}
{{ $releaseTargetHttpProxyName := $release.metadata.namingConfig.templated.releaseTargetHttpProxyName }}
{{ $releaseTargetHttpsProxyName := $release.metadata.namingConfig.templated.releaseTargetHttpsProxyName }}
{{ $releaseUrlMapName := $release.metadata.namingConfig.templated.releaseUrlMapName }}
{{ $releaseManagedSslCertificateName := $release.metadata.namingConfig.templated.releaseManagedSslCertificateName }}

{{/* Cloud Naming Header - End */}}

{{ $cloudProject := $values.cloud.project }}
{{ $clusterName := $values.cluster.config.name }}
{{ $clusterMainDomain := $values.cluster.config.domain }}
{{ $clusterAdditionnalDomains := $values.cluster.config.additionnalDomains }}
{{ $clusterListAllDomains := prepend $clusterAdditionnalDomains $clusterMainDomain }}

cluster: {{ toYaml $values.cluster | nindent 2 }}
cloud: {{ toYaml $values.cloud | nindent 2 }}
prefix: {{ $values.cluster.config.name }}
patch:
  serviceAccountName: patch-operator-admin-{{ $releaseNamespace }}-{{ $releaseName }}
{{ $defaultDeletionPolicy := $values.cloud.crossplane.defaultDeletionPolicy }}

{{ if (not (eq ($extension | getOrNil "serviceAccounts" | getOrNil "enabled") false)) }}
serviceAccounts:
  {{ $releaseServiceAccountName }}:
    enabled: true
    deletionPolicy: {{ coalesce ($extension | getOrNil "serviceAccounts" | getOrNil "deletionPolicy") ($extension | getOrNil "deletionPolicy") $defaultDeletionPolicy }}
{{ end }}

{{ if (not (eq ($extension | getOrNil "serviceAccountKeys" | getOrNil "enabled") false)) }}
serviceAccountKeys:
  {{ $releaseServiceAccountKeyName }}:
    enabled: true
    serviceAccountName: {{ $releaseServiceAccountName }}
    deletionPolicy: {{ coalesce ($extension | getOrNil "serviceAccountKeys" | getOrNil "deletionPolicy") ($extension | getOrNil "deletionPolicy") $defaultDeletionPolicy }}
{{ end }}

{{ if (not (eq ($extension | getOrNil "buckets" | getOrNil "enabled") false)) }}

buckets:
{{ if ($extension | getOrNil "bucket" | getOrNil "enabled") }}
  {{ $releaseBucketName }}:
    enabled: true
    {{ if (eq ($extension | getOrNil "bucket" | getOrNil "public") true) }}
    public: true
    {{ end }}
    deletionPolicy: {{ coalesce ($extension | getOrNil "bucket" | getOrNil "deletionPolicy") ($extension | getOrNil "deletionPolicy") $defaultDeletionPolicy }}
    {{ if $extension | getOrNil "bucket" | getOrNil "location" }}
    location: {{ $extension.bucket.location }}
    {{ end }}
{{ end }}

{{ if ($extension | getOrNil "buckets") }}

{{ range $bucketName, $bucketConfig := ($extension | getOrNil "buckets") }}
{{ $fullBucketName := (printf "%s-%s" $releaseBucketName $bucketName) }}
{{ if (gt ($fullBucketName | len) 63) }}
{{ $ | getOrNil "BUCKET_NAME_TOO_LONG" | required (printf "Bucket name must be less than 63 chars. Current: %s => %s" $fullBucketName ($fullBucketName | len | toString) )}}
{{ end }}

  {{ $fullBucketName }}:
    enabled: true
    {{ if (eq ($bucketConfig | getOrNil "public") true) }}
    public: true
    {{ end }}
    deletionPolicy: {{ coalesce ($bucketConfig | getOrNil "deletionPolicy") ($extension | getOrNil "deletionPolicy") $defaultDeletionPolicy }}
    {{ if $bucketConfig | getOrNil "location" }}
    location: {{ $bucketConfig.location }}
    {{ end }}
{{ end }}
{{ end }}

bucketPolicies:
{{ if (not (eq ($extension | getOrNil "buckets" | getOrNil "enabled") false)) }}
{{ if (not (eq ($extension | getOrNil "bucketPolicies" | getOrNil "enabled") false)) }}
{{ if ($extension | getOrNil "bucket" | getOrNil "enabled") }}

  {{ $releaseBucketPolicyName }}:
    enabled: true
    {{ if (eq ($extension | getOrNil "bucket" | getOrNil "public") true) }}
    public: true
    {{ end }}
    adminRef: {{ coalesce ($extension | getOrNil "policy" | getOrNil "adminRef") $releaseServiceAccountName }}
    deletionPolicy: {{ coalesce ($extension | getOrNil "bucketPolicies" | getOrNil "deletionPolicy") ($extension | getOrNil "bucket" | getOrNil "deletionPolicy") ($extension | getOrNil "deletionPolicy") $defaultDeletionPolicy }}
{{ end }}
{{ end }}
{{ end }}

{{ if ($extension | getOrNil "buckets") }}
{{ range $bucketName, $bucketConfig := ($extension | getOrNil "buckets") }}
{{ $fullBucketName := (printf "%s-%s" $releaseBucketName $bucketName) }}
{{ if (gt ($fullBucketName | len) 63) }}
{{ $ | getOrNil "BUCKET_NAME_TOO_LONG" | required (printf "Bucket name must be less than 63 chars. Current: %s => %s" $fullBucketName ($fullBucketName | len | toString) )}}
{{ end }}

{{ if (not (eq ($bucketConfig | getOrNil "policy" | getOrNil "enabled") false)) }}
  {{ $fullBucketName }}:
    enabled: true
    {{ if (eq ($bucketConfig | getOrNil "public") true) }}
    public: true
    {{ end }}
    adminRef: {{ coalesce ($bucketConfig | getOrNil "policy" | getOrNil "adminRef") $releaseServiceAccountName }}
    deletionPolicy: {{ coalesce ($bucketConfig | getOrNil "deletionPolicy") ($extension | getOrNil "deletionPolicy") $defaultDeletionPolicy }}
{{ end }}
{{ end }}

{{ end }}

backendBuckets:
{{ if (eq ($extension | getOrNil "bucket" | getOrNil "public") true) }}
{{ if (not (eq ($extension | getOrNil "backendBucket" | getOrNil "enabled") false)) }}
  {{ $releaseBackendBucketName }}:
    enabled: true
    bucketName: {{ $releaseBucketName }}
    enableCdn: true
    deletionPolicy: {{ coalesce ($extension | getOrNil "bucket" | getOrNil "deletionPolicy") ($extension | getOrNil "deletionPolicy") $defaultDeletionPolicy }}
{{ end }}
{{ end }}

{{ if ($extension | getOrNil "buckets") }}
{{ range $bucketName, $bucketConfig := ($extension | getOrNil "buckets") }}
{{ $fullBucketName := (printf "%s-%s" $releaseBucketName $bucketName) }}
{{ if (gt ($fullBucketName | len) 63) }}
{{ $ | getOrNil "BUCKET_NAME_TOO_LONG" | required (printf "Bucket name must be less than 63 chars. Current: %s => %s" $fullBucketName ($fullBucketName | len | toString) )}}
{{ end }}

{{ if (eq ($bucketConfig | getOrNil "public" ) true) }}
{{ if (not (eq ($bucketConfig | getOrNil "backendBucket" | getOrNil "enabled") false)) }}
  {{ $fullBucketName }}:
    enabled: true
    bucketName: {{ $fullBucketName }}
    enableCdn: true
    deletionPolicy: {{ coalesce ($bucketConfig | getOrNil "deletionPolicy") ($extension | getOrNil "deletionPolicy") $defaultDeletionPolicy }}
{{ end }}
{{ end }}
{{ end }}

{{ end }}
{{ end }}

{{ if (not (eq ($extension | getOrNil "projectIAMCustomRoles" | getOrNil "enabled") false)) }}
projectIAMCustomRoles:
  {{ $releaseIamRoleName }}:
    enabled: true
    deletionPolicy: {{ coalesce ($extension | getOrNil "projectIAMCustomRoles" | getOrNil "deletionPolicy") ($extension | getOrNil "deletionPolicy") $defaultDeletionPolicy }}
    externalName: {{ $releaseIamRoleExternalName }}
    {{ if $extension | getOrNil "permissions" }}
    permissions: {{ toYaml $extension.permissions | nindent 4 }}
    {{ else }}
    permissions:
    - container.pods.list # TODO: variabilisation to remove this
    {{ end }}
{{ end }}

{{ if (not (eq ($extension | getOrNil "projectIAMMembers" | getOrNil "enabled") false)) }}
projectIAMMembers:
  {{ $releaseIamMemberName }}-default:
    enabled: true
    deletionPolicy: {{ coalesce ($extension | getOrNil "projectIAMMembers" | getOrNil "deletionPolicy") ($extension | getOrNil "deletionPolicy") $defaultDeletionPolicy }}
    member: {{ $releaseServiceAccountName }}
    role: projects/{{ $cloudProject }}/roles/{{ $releaseIamRoleExternalName }}
  {{ if $extension | getOrNil "roles" }}
  {{ range $key, $value := ($extension | getOrNil "roles") }}
  {{ $roleTitle := ( . | title | replace "Roles/" "" | replace "." "" | untitle | kebabcase ) }}
  {{ $hash := $roleTitle }}
  {{ $releaseIamMemberName }}-extra-{{ $hash }}:
    enabled: true
    deletionPolicy: {{ coalesce ($extension | getOrNil "projectIAMMembers" | getOrNil "deletionPolicy") ($extension | getOrNil "deletionPolicy") $defaultDeletionPolicy }}
    member: {{ $releaseServiceAccountName }}
    role: {{ . }}
  {{ end }}
  {{ end }}
{{ end }}

{{ if (eq ($extension | getOrNil "cdn" | getOrNil "enabled") true) }}
globalAdresses:
  {{ $releaseGlobalAddressName }}:
    deletionPolicy: {{ coalesce ($extension | getOrNil "cdn" | getOrNil "deletionPolicy") ($extension | getOrNil "deletionPolicy") $defaultDeletionPolicy }}
    addressType: "EXTERNAL"
    ipVersion: "IPV4"
globalForwardingRules:
  {{ $releaseGlobalForwardingRuleName }}-http:
    deletionPolicy: {{ coalesce ($extension | getOrNil "cdn" | getOrNil "deletionPolicy") ($extension | getOrNil "deletionPolicy") $defaultDeletionPolicy }}
    loadBalancingScheme: "EXTERNAL"
    target:
      type: targetHttpProxies
      name: {{ $releaseTargetHttpProxyName }}
    ipAddress: {{ $releaseGlobalAddressName }}
  {{ $releaseGlobalForwardingRuleName }}-https:
    deletionPolicy: {{ coalesce ($extension | getOrNil "cdn" | getOrNil "deletionPolicy") ($extension | getOrNil "deletionPolicy") $defaultDeletionPolicy }}
    loadBalancingScheme: "EXTERNAL"
    target:
      type: targetHttpsProxies
      name: {{ $releaseTargetHttpsProxyName }}
    ipAddress: {{ $releaseGlobalAddressName }}
targetHttpProxies:
  {{ $releaseTargetHttpProxyName }}:
    deletionPolicy: {{ coalesce ($extension | getOrNil "cdn" | getOrNil "deletionPolicy") ($extension | getOrNil "deletionPolicy") $defaultDeletionPolicy }}
    urlMap: {{ $releaseUrlMapName }}
targetHttpsProxies:
  {{ $releaseTargetHttpsProxyName }}:
    deletionPolicy: {{ coalesce ($extension | getOrNil "cdn" | getOrNil "deletionPolicy") ($extension | getOrNil "deletionPolicy") $defaultDeletionPolicy }}
    urlMap: {{ $releaseUrlMapName }}
    managedSslCertificates:
    - {{ $releaseManagedSslCertificateName }}

urlMaps:
  {{ $releaseUrlMapName }}:
    deletionPolicy: {{ coalesce ($extension | getOrNil "cdn" | getOrNil "deletionPolicy") ($extension | getOrNil "deletionPolicy") $defaultDeletionPolicy }}
    hostRule:
    {{ range $k,$v := ($extension | getOrNil "cdn" | getOrNil "paths") }}
      - hosts:
        {{ range .domains }}
        - {{ . }}
        {{ end }}
        pathMatcher: {{ .pathMatcherName }}
    {{ end }}
    {{ range $k,$v := ($extension | getOrNil "cdn" | getOrNil "templatedPaths") }}
      - hosts:
        {{ range .domains }}
        - {{ tpl . $templateValues }}
        {{ end }}
        pathMatcher: {{ tpl .pathMatcherName $templateValues }}
    {{ end }}
    pathMatcher:
    {{ range $k,$v := ($extension | getOrNil "cdn" | getOrNil "paths") }}
      - defaultService: {{ .backendBucket }}
        name: {{ .pathMatcherName }}
    {{ end }}
    {{ range $k,$v := ($extension | getOrNil "cdn" | getOrNil "templatedPaths") }}
      - defaultService: {{ tpl .backendBucket $templateValues }}
        name: {{ tpl .pathMatcherName $templateValues  }}
    {{ end }}
managedSslCertificates:
  {{ $releaseManagedSslCertificateName }}:
    deletionPolicy: {{ coalesce ($extension | getOrNil "cdn" | getOrNil "deletionPolicy") ($extension | getOrNil "deletionPolicy") $defaultDeletionPolicy }}
    domains:
    {{ range $k,$v := ($extension | getOrNil "cdn" | getOrNil "paths") }}
      {{ range .domains }}
      - {{ . }}
      {{ end }}
    {{ end }}
    {{ range $k,$v := ($extension | getOrNil "cdn" | getOrNil "templatedPaths") }}
      {{ range .domains }}
      - {{ tpl . $templateValues }}
      {{ end }}
    {{ end }}

recordSets:
{{ range $k,$v := ($extension | getOrNil "cdn" | getOrNil "paths") }}
  {{ range $domain := .domains }}
    {{ $isRecordSetManagedByCluster := list false }}
    {{ range $clusterDomain := $clusterListAllDomains }}
    {{ if contains $clusterDomain $domain }}
    {{ $isRecordSetManagedByCluster = prepend $isRecordSetManagedByCluster true }}
    {{ end }}
    {{ end }}
  {{ if has true $isRecordSetManagedByCluster }}
  {{ printf "%s-a" $domain | replace "." "-" }}:
    deletionPolicy: {{ coalesce ($extension | getOrNil "cdn" | getOrNil "deletionPolicy") ($extension | getOrNil "deletionPolicy") $defaultDeletionPolicy }}
    managedZone: {{ (coalesce ($extension | getOrNil "cdn" | getOrNil "managedZone") (($release | getOrNil "metadata" | getOrNil "config" | getOrNil "clusterDomain") | replace "." "-")) }}
    rootDnsName: {{ printf "%s." $domain }}
    rrdatas: []
    type: "A"
    patch:
      injectIpFromLb: true
      globalAddress: {{ $releaseGlobalAddressName }}
  {{ printf "%s-txt" $domain | replace "." "-" }}:
    deletionPolicy: {{ coalesce ($extension | getOrNil "cdn" | getOrNil "deletionPolicy") ($extension | getOrNil "deletionPolicy") $defaultDeletionPolicy }}
    managedZone: {{ (coalesce ($extension | getOrNil "cdn" | getOrNil "managedZone") (($release | getOrNil "metadata" | getOrNil "config" | getOrNil "clusterDomain") | replace "." "-")) }}
    rootDnsName: {{ printf "%s." $domain }}
    type: "TXT"
    rrdatas:
      - {{ printf "provider=kube-core,crossplane-cloud/owner=%s,releases/namespace=%s/%s" $clusterName $releaseName $releaseNamespace}}
  {{ end }}
  {{ end }}
{{ end }}

{{ range $k,$v := ($extension | getOrNil "cdn" | getOrNil "templatedPaths") }}
  {{ range $domain := .domains }}
    {{ $domain = tpl $domain $templateValues }}
    {{ $isRecordSetManagedByCluster := list false }}
    {{ range $clusterDomain := $clusterListAllDomains }}
    {{ if contains $clusterDomain $domain }}
    {{ $isRecordSetManagedByCluster = prepend $isRecordSetManagedByCluster true }}
    {{ end }}
    {{ end }}
  {{ if has true $isRecordSetManagedByCluster }}
  {{ printf "%s-a" $domain | replace "." "-" }}:
    deletionPolicy: {{ coalesce ($extension | getOrNil "cdn" | getOrNil "deletionPolicy") ($extension | getOrNil "deletionPolicy") $defaultDeletionPolicy }}
    managedZone: {{ (coalesce ($extension | getOrNil "cdn" | getOrNil "managedZone") (($release | getOrNil "metadata" | getOrNil "config" | getOrNil "clusterDomain") | replace "." "-")) }}
    rootDnsName: {{ printf "%s." $domain }}
    patch:
      injectIpFromLb: true
      globalAddress: {{ $releaseGlobalAddressName }}
  {{ printf "%s-txt" $domain | replace "." "-" }}:
    deletionPolicy: {{ coalesce ($extension | getOrNil "cdn" | getOrNil "deletionPolicy") ($extension | getOrNil "deletionPolicy") $defaultDeletionPolicy }}
    managedZone: {{ (coalesce ($extension | getOrNil "cdn" | getOrNil "managedZone") (($release | getOrNil "metadata" | getOrNil "config" | getOrNil "clusterDomain") | replace "." "-")) }}
    rootDnsName: {{ printf "%s." $domain }}
    type: "TXT"
    rrdatas:
      - {{ printf "provider=kube-core,crossplane-cloud/owner=%s,releases/namespace=%s/%s" $clusterName $releaseName $releaseNamespace}}
  {{ end }}
  {{ end }}
{{ end }}

{{ end }}
