{{ $values := .values }}
{{ $releases := (merge $values.releases $values.applicationsList $values.servicesList )}}

{{ $releaseNamespace := .releaseNamespace }}
{{ $mainReleaseName := (.releaseName | replace "-cloud" "") }}
{{ $mainRelease := .item }}
{{ $cloudNamingConfig := $values.cloud.naming }}

{{ $releaseCloud := (index $releases $mainReleaseName "cloud" )}}
{{ $releaseCloudEnabled := ($releaseCloud | getOrNil "enabled") }}

cluster: {{ toYaml $values.cluster | nindent 2 }}
cloud: {{ toYaml $values.cloud | nindent 2 }}
prefix: {{ $values.cluster.config.name }}


{{ $cloudProject := $values.cloud.project }}
{{ $cloudLocation := $values.cloud.default.location }}
{{ $clusterName := $values.cluster.config.name }}

{{ if $releaseCloud | getOrNil "enabled" }}
{{ $name := $mainReleaseName }}
{{ $initials := (($name | splitList "-") | join " " | initials) }}

{{ $clusterShortName := $values.cluster.config.shortName }}
{{ $releaseType := ""}}
{{ if (eq $mainRelease.type "release") }}
{{ $releaseType = "kc" }}
{{ else if (eq $mainRelease.type "application") }}
{{ $releaseType = "app" }}
{{ else if (eq $mainRelease.type "service") }}
{{ $releaseType = "svc" }}
{{ end }}

{{ $autoShortName := "" }}
{{ $namespace := ($releaseNamespace | substr 0 3) }}
{{ $autoShortName = (printf "%s-%s-%s-%s" $clusterShortName $releaseType $namespace $initials) }}
{{ $shortName := "" }}
{{ if (and $releaseCloudEnabled $cloudNamingConfig.enabled) }}
{{ $shortName = (index $mainRelease.metadata.namingConfig.nameBases (coalesce ($values.cloud.naming.config.templates | getOrNil "custom" | getOrNil "nameBase" | default "" | camelcase | untitle) ($values.cloud.naming.config.templates.default.nameBase | camelcase | untitle))) }}
{{ else }}
{{ $shortName = $autoShortName }}
{{ end }}

{{ $releaseServiceAccountName := $shortName | substr 0 30 }}
{{ $releaseBucketName := $shortName | substr 0 63 }}
{{ $releaseRoleName := ($shortName | kebabcase | replace "-" "." | untitle) }}

{{ $name = $shortName }}

{{ if (not (eq ($releaseCloud | getOrNil "serviceAccounts" | getOrNil "enabled") false)) }}
serviceAccounts:
  {{ $name }}:
    enabled: true
    mainReleaseName: {{ $mainReleaseName }}
    deletionPolicy: Delete
    project: {{ $cloudProject }}
    location: {{ $cloudLocation }}
    namespace: {{ $releaseNamespace }}
    clusterName: {{ $clusterName }}
    displayName: {{ $name }}
    externalName: {{ $releaseServiceAccountName }}
{{ end }}


{{ if (not (eq ($releaseCloud | getOrNil "serviceAccountKeys" | getOrNil "enabled") false)) }}
serviceAccountKeys:
  {{ $name }}:
    enabled: true
    mainReleaseName: {{ $mainReleaseName }}
    deletionPolicy: Delete
    project: {{ $cloudProject }}
    location: {{ $cloudLocation }}
    namespace: {{ $releaseNamespace }}
    clusterName: {{ $clusterName }}
{{ end }}

{{ if (not (eq ($releaseCloud | getOrNil "buckets" | getOrNil "enabled") false)) }}

buckets:
{{ if ($releaseCloud | getOrNil "bucket" | getOrNil "enabled") }}
  {{ $name }}:
    enabled: true
    {{ if (eq ($releaseCloud | getOrNil "bucket" | getOrNil "public") true) }}
    public: true
    {{ end }}
    mainReleaseName: {{ $mainReleaseName }}
    deletionPolicy: Delete
    externalName: {{ $releaseBucketName }}
    project: {{ $cloudProject }}
    location: {{ $cloudLocation }}
    namespace: {{ $releaseNamespace }}
    clusterName: {{ $clusterName }}
{{ end }}

{{ if ($releaseCloud | getOrNil "buckets") }}

{{ range $bucketName, $bucketConfig := ($releaseCloud | getOrNil "buckets") }}
{{ $fullBucketName := (printf "%s-%s" $name $bucketName) }}
{{ if (gt ($releaseBucketName | len) 63) }}
{{ $ | getOrNil "BUCKET_NAME_TOO_LONG" | required (printf "Bucket name must be less than 63 chars. Current: %s => %s" $releaseBucketName ($releaseBucketName | len | toString) )}}
{{ end }}

  {{ $fullBucketName }}:
    enabled: true
    {{ if (eq ($bucketConfig | getOrNil "public") true) }}
    public: true
    {{ end }}
    mainReleaseName: {{ $mainReleaseName }}
    deletionPolicy: Delete
    externalName: {{ $fullBucketName }}
    project: {{ $cloudProject }}
    location: {{ $cloudLocation }}
    namespace: {{ $releaseNamespace }}
    clusterName: {{ $clusterName }}
{{ end }}
{{ end }}

bucketPolicies:
{{ if (not (eq ($releaseCloud | getOrNil "buckets" | getOrNil "enabled") false)) }}
{{ if (not (eq ($releaseCloud | getOrNil "bucketPolicies" | getOrNil "enabled") false)) }}
  {{ $name }}:
    enabled: true
    {{ if (eq ($releaseCloud | getOrNil "bucket" | getOrNil "public") true) }}
    public: true
    {{ end }}
    mainReleaseName: {{ $mainReleaseName }}
    deletionPolicy: Delete
    project: {{ $cloudProject }}
    location: {{ $cloudLocation }}
    namespace: {{ $releaseNamespace }}
    clusterName: {{ $clusterName }}
{{ end }}
{{ end }}

{{ if ($releaseCloud | getOrNil "buckets") }}
{{ range $bucketName, $bucketConfig := ($releaseCloud | getOrNil "buckets") }}
{{ $fullBucketName := (printf "%s-%s" $name $bucketName) }}
{{ if (gt ($releaseBucketName | len) 63) }}
{{ $ | getOrNil "BUCKET_NAME_TOO_LONG" | required (printf "Bucket name must be less than 63 chars. Current: %s => %s" $releaseBucketName ($releaseBucketName | len | toString) )}}
{{ end }}

{{ if (not (eq ($bucketConfig | getOrNil "policy" | getOrNil "enabled") false)) }}
  {{ $fullBucketName }}:
    enabled: true
    {{ if (eq ($bucketConfig | getOrNil "public") true) }}
    public: true
    {{ end }}
    mainReleaseName: {{ $mainReleaseName }}
    deletionPolicy: Delete
    project: {{ $cloudProject }}
    location: {{ $cloudLocation }}
    namespace: {{ $releaseNamespace }}
    clusterName: {{ $clusterName }}
{{ end }}
{{ end }}

{{ end }}
{{ end }}

{{ if (not (eq ($releaseCloud | getOrNil "projectIAMCustomRoles" | getOrNil "enabled") false)) }}
projectIAMCustomRoles:
  {{ $name }}:
    enabled: true
    mainReleaseName: {{ $mainReleaseName }}
    deletionPolicy: Delete
    project: {{ $cloudProject }}
    location: {{ $cloudLocation }}
    namespace: {{ $releaseNamespace }}
    clusterName: {{ $clusterName }}
    externalName: {{ $releaseRoleName }}

    {{ if $releaseCloud | getOrNil "permissions" }}
    permissions: {{ toYaml $releaseCloud.permissions | nindent 4 }}
    {{ else }}
    permissions:
    - container.pods.list # TODO: variabilisation to remove this
    {{ end }}
{{ end }}

{{ if (not (eq ($releaseCloud | getOrNil "projectIAMMembers" | getOrNil "enabled") false)) }}
projectIAMMembers:
  {{ $name }}-default:
    enabled: true
    mainReleaseName: {{ $mainReleaseName }}
    deletionPolicy: Delete
    member: {{ $releaseServiceAccountName }}
    project: {{ $cloudProject }}
    location: {{ $cloudLocation }}
    namespace: {{ $releaseNamespace }}
    clusterName: {{ $clusterName }}
    role: projects/{{ $cloudProject }}/roles/{{ $releaseRoleName }}
  {{ if $releaseCloud | getOrNil "roles" }}
  {{ range $key, $value := ($releaseCloud | getOrNil "roles") }}
  {{ $roleTitle := ( . | title | replace "Roles/" "" | replace "." "" | untitle | kebabcase ) }}
  {{ $hash := $roleTitle }}
  {{ $name }}-extra-{{ $hash }}:
    enabled: true
    mainReleaseName: {{ $mainReleaseName }}
    deletionPolicy: Delete
    member: {{ $releaseServiceAccountName }}
    project: {{ $cloudProject }}
    location: {{ $cloudLocation }}
    namespace: {{ $releaseNamespace }}
    clusterName: {{ $clusterName }}
    role: {{ . }}
  {{ end }}
  {{ end }}
{{ end }}


{{ end }}
