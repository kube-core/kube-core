{{/* Release Header - Start */}}

{{/* Common Variables */}}
{{ $values := (coalesce (. | getOrNil "values") (. | getOrNil "Values")) }}
{{ $release := (. | getOrNil "item") }}
{{ $releaseNamespace := (coalesce ($release | getOrNil "namespace") (. | getOrNil "Release" | getOrNil "Namespace")) }}
{{ $releaseName := (coalesce ($release | getOrNil "name") (. | getOrNil "Release" | getOrNil "Name")) }}

{{/* Releases Variables */}}
{{ $coreReleases := ($values | getOrNil "releases") }}
{{ $clusterReleases := ($values | getOrNil "clusterReleases") }}
{{ $environments := ($values | getOrNil "environments") }}
{{ $environment := ($environments | getOrNil $releaseNamespace) }}
{{ $applications := (coalesce ($environment | getOrNil "applications") ($values | getOrNil "applications")) }}
{{ $services := (coalesce ($environment | getOrNil "services") ($values | getOrNil "services")) }}

{{/* Applications Variables */}}
{{ $application := ($applications | getOrNil $releaseName) }}
{{ $service := ($services | getOrNil $releaseName) }}

{{/* Services Variables */}}
{{ $service := ($services | getOrNil $releaseName) }}

{{/* Core Releases */}}
{{ $coreRelease := ($coreReleases | getOrNil $releaseName) }}

{{/* Cluster Releases */}}
{{ $clusterRelease := ($clusterReleases | getOrNil $releaseName) }}

{{/* Release Variables */}}
{{ $release := (coalesce (. | getOrNil "item") $application $service $clusterRelease $coreRelease) }}
{{ $releaseType := (coalesce ($release | getOrNil "type") "unknown") }}

{{ if and $release $coreRelease }}
{{ $release = ((eq $coreRelease.name $release.name) | ternary (mergeOverwrite (deepCopy $coreRelease) $release) ($release)) }}
{{ end }}

{{ if ($release | getOrNil "injectCoreValuesFromRelease") }}
{{ $release = (mergeOverwrite ((deepCopy $coreReleases) | getOrNil ($release | getOrNil "injectCoreValuesFromRelease")) $release) }}
{{ end }}

{{/* Extensions Variables */}}
{{ $extensionType := (coalesce (. | getOrNil "extensionType") "unknown") }}
{{ $extension := (coalesce ($release | getOrNil $extensionType) ($release | getOrNil ($extensionType | camelcase | untitle)) ) }}

{{/* Template Variables */}}
{{ $templateValues := (dict "coreValues" $values "releaseValues" $extension "parentReleaseValues" $release "releaseNamespace" $releaseNamespace "releaseName" $releaseName) }}

{{/* Release Header - End */}}

{{ $jaegerSubdomain := (coalesce ((index $coreReleases "istio-jaeger" "ingress") | getOrNil "subDomainOverride") ((index $coreReleases "istio-jaeger" "ingress") | getOrNil "subDomain") "jaeger.istio-system")  }}
{{ $grafanaSubdomain := (coalesce ((index $coreReleases "istio-grafana" "ingress") | getOrNil "subDomainOverride") ((index $coreReleases "istio-grafana" "ingress") | getOrNil "subDomain") "grafana.istio-system")  }}
cluster: {{ toYaml .Values.cluster | nindent 4 }}
spec:
  deployment:
    replicas: 1
    resources:
      limits:
        memory: 1Gi
      requests:
        cpu: 10m
        memory: 64Mi
    view_only_mode: false
  external_services:
    custom_dashboards:
      enabled: true
    istio:
      component_status:
        components:
        - app_label: "istio-ingressgateway"
          is_core: false
          is_proxy: true
          # default: namespace is undefined
          namespace: istio-system
        - app_label: "istio-egressgateway"
          is_core: false
          is_proxy: true
          # default: namespace is undefined
          namespace: istio-system
        enabled: true
      root_namespace: istio-system
    grafana:
      enabled: true
      dashboards:
      - name: "Istio Service Dashboard"
        variables:
          namespace: "var-namespace"
          service: "var-service"
      - name: "Istio Workload Dashboard"
        variables:
          namespace: "var-namespace"
          workload: "var-workload"
      - name: "Istio Mesh Dashboard"
      - name: "Istio Control Plane Dashboard"
      - name: "Istio Performance Dashboard"
      - name: "Istio Wasm Extension Dashboard"
      url: https://{{ $grafanaSubdomain }}.{{ $release.metadata.config.clusterDomain }}
      in_cluster_url: 'http://grafana:3000'
    tracing:
      enabled: true
      in_cluster_url: 'http://jaeger-query:16686/jaeger'
      use_grpc: false
      url: https://{{ $jaegerSubdomain }}.{{ $release.metadata.config.clusterDomain }}/jaeger
    prometheus:
      url: http://prometheus:9090/
  istio_labels:
    app_label_name: "app.kubernetes.io/name"
    injection_label_name: "istio-injection"
    injection_label_rev:  "istio.io/rev"
    version_label_name: "app.kubernetes.io/version"
