{{/* Release Values Templates Header - START */}}
{{ $values := (coalesce (. | getOrNil "values") (. | getOrNil "Values")) }}
{{ $release := (index $values.releases .Release.Name) }}
{{ $releaseName := .Release.Name }}
{{ $releaseNamespace := .Release.Namespace }}
{{ $releaseType := $release.type }}

{{ $_ := set $release "name" $releaseName }}
{{ $_ := set $release "namespace" $releaseNamespace }}
{{ (tpl (readFile "../templates/releases/standard/variables/release-variables-config.yaml.gotmpl") (dict "item" $release "values" $values)) }}
{{ (tpl (readFile "../templates/releases/standard/variables/release-variables-cloud.yaml.gotmpl") (dict "item" $release "values" $values)) }}

{{ $aws := (eq $.Values.cloud.provider "aws" ) }}
{{ $gcp := (eq $.Values.cloud.provider "gcp" ) }}
{{ $provider :=  $.Values.cloud.provider }}
{{/* Release Values Templates Header - END */}}

kps:
  enabled: true

  # Services
  kubeDns:
    enabled: true
  coreDns:
    enabled: false

  # As for gke those aren't accessible to scrape metrics from
  kubeProxy:
    enabled: false
  kubeScheduler:
    enabled: false
  kubeControllerManager:
    enabled: false
  kubeEtcd:
    enabled: false

  # Default rules
  defaultRules:
    rules:
      kubeScheduler: false
      kubeProxy: false

  additionalPrometheusRulesMap:
    # Made for mongodb dashboard 14997
    mongodb:
      groups:
        - name: mongodb_rules
          rules:
            - record: mongodb_rs_members_state
              expr: mongodb_mongod_replset_member_state
  {{- if index $values.releases "eck-operator" "enabled" }}
    # https://grafana.com/oss/prometheus/exporters/elasticsearch-exporter/?tab=recording-rules#step-3-configure-recording-rules
    elasticsearch:
      groups:
        - name: elasticsearch_rules
          rules:
            - record: elasticsearch_filesystem_data_free_percent
              expr: 100 - elasticsearch_filesystem_data_used_percent
            - record: elasticsearch_red_cluster_status
              expr: sum by (cluster) (elasticsearch_cluster_health_status == 2)
            - record: elasticsearch_yellow_cluster_status
              expr: sum by (cluster) (elasticsearch_cluster_health_status == 1)
            - record: elasticsearch_process_cpu_high
              expr: sum by (cluster, instance, name) (elasticsearch_process_cpu_percent)
            - record: elasticsearch_os_cpu_high
              expr: sum by (cluster, instance, name) (elasticsearch_os_cpu_percent)
            - record: elasticsearch_filesystem_data_used_percent
              expr: sum by (cluster, instance, name) (100 * (elasticsearch_filesystem_data_size_bytes - elasticsearch_filesystem_data_free_bytes) / elasticsearch_filesystem_data_size_bytes)
            - record: elasticsearch_node_disk_watermark_reached
              expr: sum by (cluster, instance, name) (round((1 - (elasticsearch_filesystem_data_available_bytes / elasticsearch_filesystem_data_size_bytes)) * 100, 0.001))
            - record: elasticsearch_heap_utilization_percentage
              expr: sum by (cluster, instance, name) (100 * (elasticsearch_jvm_memory_used_bytes{area="heap"} / elasticsearch_jvm_memory_max_bytes{area="heap"}))
  {{- end }}

  prometheusOperator:
    tolerations: {{ toYaml (index $release "scheduling" "all" "tolerations") | nindent 6 }}
    nodeSelector: {{ toYaml (index $release "scheduling" "all" "nodeSelector") | nindent 6 }}
    affinity: {{ toYaml (index $release "scheduling" "all" "affinity") | nindent 6 }}

  prometheus:
    prometheusSpec:
      ruleSelectorNilUsesHelmValues: false
      serviceMonitorSelectorNilUsesHelmValues: false
      podMonitorSelectorNilUsesHelmValues: false
      probeSelectorNilUsesHelmValues: false
      replicas: {{ index $release "config" "prometheus" "replicaCount" }}
      {{ if (index $release "scheduling" "prometheus" "tolerations") }}
      tolerations: {{ toYaml (index $release "scheduling" "prometheus" "tolerations") | nindent 8 }}
      {{ else }}
      tolerations: {{ toYaml (index $release "scheduling" "all" "tolerations") | nindent 8 }}
      {{ end }}
      {{ if (index $release "scheduling" "prometheus" "nodeSelector") }}
      nodeSelector: {{ toYaml (index $release "scheduling" "prometheus" "nodeSelector") | nindent 8 }}
      {{ else }}
      nodeSelector: {{ toYaml (index $release "scheduling" "all" "nodeSelector") | nindent 8 }}
      {{ end }}
      {{ if (index $release "scheduling" "prometheus" "affinity") }}
      affinity: {{ toYaml (index $release "scheduling" "prometheus" "affinity") | nindent 8 }}
      {{ else }}
      affinity: {{ toYaml (index $release "scheduling" "all" "affinity") | nindent 8 }}
      {{ end }}
      retention: {{ index $release "config" "prometheus" "retention" }}
      thanos:
        # image: quay.io/thanos/thanos:v0.26.0
        # version: v0.26.0
        objectStorageConfig:
          {{- if (or $release.metadata.config.cloudEnabled (index $release "config" "thanos" "externalObjectStorageBackend" "enabled")) }}
          name: {{ index $release "secrets" "objstore" "secretRef" "name" }}
          key: {{ index $release "secrets" "objstore" "secretRef" "key" }}
          {{- else }}
          name: kps-thanos-objstore-secret
          key: objstore.yml
          {{- end }}
      externalLabels:
        cluster: {{ $values.cluster.config.name }}
    thanosService:
      enabled: true
    additionalServiceMonitors:
      - name: thanos
        endpoints:
          - interval: 10s
            port: http
        jobLabel: thanos
        namespaceSelector:
          matchNames:
            - monitoring
        selector:
          matchLabels:
            app.kubernetes.io/name: kps-thanos
      {{- if index $values.releases "rabbitmq-operators" "enabled" }}
      - name: rabbitmq-cluster
        endpoints:
          - port: prometheus
            scheme: http
            interval: 15s
            scrapeTimeout: 14s
        selector:
          matchLabels:
            app.kubernetes.io/component: rabbitmq
        namespaceSelector:
          any: true
      {{- end }}
      {{- if ( $values | get (printf "releases.%s.config.prometheus.serviceMonitors" .Release.Name ) false) }}
      {{ toYaml (index $release "config" "prometheus" "serviceMonitors") | nindent 6 }}
      {{- end }}
    ingress:
      enabled: true
      annotations:
        forecastle.stakater.com/icon: https://upload.wikimedia.org/wikipedia/commons/thumb/3/38/Prometheus_software_logo.svg/2066px-Prometheus_software_logo.svg.png
      {{- if $values.cluster.common.defaultIngressAnnotations }}
        {{ toYaml $values.cluster.common.defaultIngressAnnotations | nindent 8 }}
      {{- end }}
      {{- if index $release "config" "prometheus" "ingress" "annotations" }}
        {{ toYaml (index $release "config" "prometheus" "ingress" "annotations") | nindent 8 }}
      {{- end }}
      labels:
      {{- if $values.cluster.common.defaultIngressLabels }}
        {{ toYaml $values.cluster.common.defaultIngressLabels | nindent 8 }}
      {{- end }}
      {{- if index $release "config" "prometheus" "ingress" "labels" }}
        {{ toYaml (index $release "config" "prometheus" "ingress" "labels") | nindent 8 }}
      {{- end }}
      tls:
        - secretName: {{ index $release "config" "prometheus" "ingress" "subdomain" | replace "." "-"}}-tls
          hosts:
          - {{ index $release "config" "prometheus" "ingress" "subdomain" }}.{{ $values.cluster.config.domain }}
      hosts:
        - {{ index $release "config" "prometheus" "ingress" "subdomain" }}.{{ $values.cluster.config.domain }}
  grafana:
    replicas: 1
    tolerations: {{ toYaml (index $release "scheduling" "all" "tolerations") | nindent 6 }}
    nodeSelector: {{ toYaml (index $release "scheduling" "all" "nodeSelector") | nindent 6 }}
    affinity: {{ toYaml (index $release "scheduling" "all" "affinity") | nindent 6 }}
    defaultDashboardsTimezone: Europe/Paris
    sidecar:
      datasources:
        uid: thanos
      dashboards:
        provider:
          folder: "Kps"
    {{- if index $release "config" "grafana" "accessibility" "anonymous" }}
    grafana.ini:
      auth.anonymous:
        enabled: true
        org_name: Main Org.
        org_role: {{ index $release "config" "grafana" "accessibility" "anonRole" }}
    {{- end }}
    adminPassword: admin
    plugins:
      - grafana-piechart-panel
      - flant-statusmap-panel
      {{- if ( $values | get (printf "releases.%s.config.grafana.plugins" .Release.Name ) false) }}
      {{ toYaml (index $release "config" "grafana" "plugins") | nindent 6 }}
      {{- end }}
    datasources:
      datasources.yaml:
        apiVersion: 1
        deleteDatasources:
          - name: Thanos
            orgId: 1
          - name: Prometheus
            orgId: 1
        datasources:
          {{- if index $release "config" "grafana" "datasources" "thanos" }}
          - name: Thanos
            type: prometheus
            url: http://kps-thanos-query.monitoring.svc:9090
            access: proxy
            editable: false
          {{- end }}
          {{- if index $release "config" "grafana" "datasources" "prometheus" }}
          - name: Prometheus
            type: prometheus
            url: http://kps-prometheus.monitoring.svc:9090
            access: proxy
            editable: false
          {{- end }}
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - disableDeletion: true
            editable: false
            folder: Thanos
            name: thanos
            options:
              path: /var/lib/grafana/dashboards/thanos
            orgId: 1
            type: file
          - disableDeletion: true
            editable: false
            folder: kube-core
            name: kube-core
            options:
              path: /var/lib/grafana/dashboards/kube-core
            orgId: 1
            type: file
          - disableDeletion: true
            editable: false
            folder: Others
            name: others
            options:
              path: /var/lib/grafana/dashboards/others
            orgId: 1
            type: file
          - disableDeletion: true
            editable: false
            folder: Nginx
            name: nginx
            options:
              path: /var/lib/grafana/dashboards/nginx
            orgId: 1
            type: file
          {{- if index $values.releases "rabbitmq-operators" "enabled" }}
          - disableDeletion: true
            editable: false
            folder: Rabbitmq
            name: rabbitmq
            options:
              path: /var/lib/grafana/dashboards/rabbitmq
            orgId: 1
            type: file
          {{- end }}
          {{- if index $values.releases "eck-operator" "enabled" }}
          - disableDeletion: true
            editable: false
            folder: Elasticsearch
            name: elastic-search
            options:
              path: /var/lib/grafana/dashboards/elastic-search
            orgId: 1
            type: file
          {{- end }}
          {{- if index $values.releases "logging-stack" "enabled" }}
          - disableDeletion: true
            editable: false
            folder: Logging
            name: logging
            options:
              path: /var/lib/grafana/dashboards/logging
            orgId: 1
            type: file
          {{- end }}
          {{- if index $values.releases "flux" "enabled" }}
          - disableDeletion: true
            editable: false
            folder: Flux
            name: flux
            options:
              path: /var/lib/grafana/dashboards/flux
            orgId: 1
            type: file
          {{- end }}
          {{- if index $values.releases "mongodb-operator" "enabled" }}
          - disableDeletion: true
            editable: false
            folder: Mongo
            name: mongodb
            options:
              path: /var/lib/grafana/dashboards/mongodb
            orgId: 1
            type: file
          {{- end }}
          {{- if index $values.releases "sloth" "enabled" }}
          - disableDeletion: true
            editable: false
            folder: Sloth
            name: sloth
            options:
              path: /var/lib/grafana/dashboards/sloth
            orgId: 1
            type: file
          {{- end }}
          {{- if index $values.releases "pyrra" "enabled" }}
          - disableDeletion: true
            editable: false
            folder: Pyrra
            name: pyrra
            options:
              path: /var/lib/grafana/dashboards/pyrra
            orgId: 1
            type: file
          {{- end }}
          {{- if index $values.releases "chartmuseum" "enabled" }}
          - disableDeletion: true
            editable: false
            folder: Chartmuseum
            name: chartmuseum
            options:
              path: /var/lib/grafana/dashboards/chartmuseum
            orgId: 1
            type: file
          {{- end }}
          {{- if ( $values | get (printf "releases.%s.config.grafana.dashboardProviders" .Release.Name ) false) }}
          {{ toYaml (index $release "config" "grafana" "dashboardProviders") | nindent 10 }}
          {{- end }}
    dashboards:
      thanos:
        thanos-compact:
          datasource: Thanos
          url: https://raw.githubusercontent.com/neo9/grafana-dashboards/master/kubernetes/thanos-compact.json
        thanos-query:
          datasource: Thanos
          url: https://raw.githubusercontent.com/neo9/grafana-dashboards/master/kubernetes/thanos-query.json
        thanos-sidecar:
          datasource: Thanos
          url: https://raw.githubusercontent.com/neo9/grafana-dashboards/master/kubernetes/thanos-sidecar.json
        thanos-store:
          datasource: Thanos
          url: https://raw.githubusercontent.com/neo9/grafana-dashboards/master/kubernetes/thanos-store.json
      nginx:
        ingress-controller-overview:
          datasource: Thanos
          gnetId: 9614
          revision: 1
        ingress-controller-overview-ngen:
          datasource: Thanos
          gnetId: 14314
          revision: 2
        request-handling-performance:
          datasource: Thanos
          gnetId: 12680
          revision: 1
      {{- if index $values.releases "logging-stack" "enabled" }}
      logging:
        logging-operator:
          datasource: Thanos
          revision: 5
          gnetId: 7752
        fluentd:
          datasource: Thanos
          revision: 2
          gnetId: 13042
      {{- end }}
      {{- if index $values.releases "flux" "enabled" }}
      flux:
        cluster:
          datasource: Thanos
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/cluster.json
        control-plane:
          datasource: Thanos
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/control-plane.json
      {{- end }}
      {{- if index $values.releases "rabbitmq-operators" "enabled" }}
      rabbitmq:
      # https://github.com/rabbitmq/cluster-operator/tree/main/observability/grafana/dashboards
        rabbitmq-overview-dashboard:
          datasource: Thanos
          gnetId: 10991
          revision: 11
        rabbitmq-quorum-queues-raft-dashboard:
          datasource: Thanos
          gnetId: 11340
          revision: 5
        erlang-distribution-dashboard:
          datasource: Thanos
          gnetId: 11352
          revision: 7
        erlang-distributions-compare-dashboard:
          datasource: Thanos
          gnetId: 10988
          revision: 11
        erlang-memory-allocators-dashboard:
          datasource: Thanos
          gnetId: 11350
          revision: 5
        rabbitmq-stream-dashboard:
          datasource: Thanos
          gnetId: 14798
          revision: 9
        rabbitmq-perftest-dashboard:
          datasource: Thanos
          gnetId: 6566
          revision: 9
      {{- end }}
      {{- if index $values.releases "eck-operator" "enabled" }}
      elastic-search:
        elastic-exporter-dashboard:
          datasource: Thanos
          gnetId: 14191
          revision: 1
      {{- end }}
      {{- if index $values.releases "mongodb-operator" "enabled" }}
      mongodb:
        mongodb-dashboard:
          datasource: Thanos
          url: https://raw.githubusercontent.com/neo9/grafana-dashboards/master/databases/mongodb_percona.json
      {{- end }}
      {{- if index $values.releases "sloth" "enabled" }}
      sloth:
        sloth-overview:
          datasource: Thanos
          gnetId: 14643
          revision: 2
        slo-detailed:
          datasource: Thanos
          url: https://raw.githubusercontent.com/neo9/grafana-dashboards/master/sloth/slo-detailed.json
      {{- end }}
      {{- if index $values.releases "pyrra" "enabled" }}
      pyrra:
        pyrra-details:
          datasource: Thanos
          url: https://raw.githubusercontent.com/pyrra-dev/pyrra/main/examples/grafana/detail.json
        pyrra-list:
          datasource: Thanos
          url: https://raw.githubusercontent.com/pyrra-dev/pyrra/main/examples/grafana/list.json
      {{- end }}
      {{- if index $values.releases "chartmuseum" "enabled" }}
      chartmuseum:
        chartmuseum-dashboard:
          datasource: Thanos
          url: https://raw.githubusercontent.com/neo9/grafana-dashboards/master/chartmuseum/chartmuseum.json
      {{- end }}
      kube-core:
      {{- if index $values.releases "kyverno" "enabled" }}
        kyverno:
          datasource: Thanos
          url: https://raw.githubusercontent.com/kyverno/grafana-dashboard/master/grafana/dashboard.json
      {{- end }}
        # TODO: Define if it is useful to fix it
        # go-processes:
        #   datasource: Thanos
        #   gnetId: 6671
        #   revision: 2
        go-metrics:
          datasource: Thanos
          gnetId: 10826
          revision: 1
        # TODO: Fix it
        predator:
          datasource: Thanos
          gnetId: 11651
          revision: 2
        # TODO: Implement those
        # https://github.com/tektoncd/triggers/blob/release-v0.21.x/config/config-observability.yaml
        # https://github.com/tektoncd/pipeline/blob/release-v0.40.x/config/config-observability.yaml
        # tekton-overview:
        #   datasource: Thanos
        #   gnetId: 16559
        #   revision: 1
        # tekton:
        #   datasource: Thanos
        #   url: https://raw.githubusercontent.com/jenkins-x-charts/grafana-dashboard/master/charts/grafana-dashboard/dashboards/tekton.json
      others:
      {{- if index $values.releases "cert-manager" "enabled" }}
        cert-manager:
          datasource: Thanos
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/cert-manager/dashboards/cert-manager.json
      {{- end }}
      {{- if index $values.releases "sealed-secrets" "enabled" }}
        sealed-secrets:
          datasource: Thanos
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/sealed-secrets/dashboards/sealed-secrets-controller.json
      {{- end }}
      {{- if index $values.releases "external-dns" "enabled" }}
        external-dns:
          datasource: Thanos
          gnetId: 15038
          revision: 1
      {{- end }}
      {{- if index $values.releases "external-secrets" "enabled" }}
        external-secrets:
          datasource: Thanos
          url: https://raw.githubusercontent.com/neo9/grafana-dashboards/master/external-secrets/dashboard.json
      {{- end }}

      {{- if ( $values | get (printf "releases.%s.config.grafana.dashboards" .Release.Name ) false) }}
      {{- toYaml (index $release "config" "grafana" "dashboards") | nindent 6 }}
      {{- end }}
    ingress:
      enabled: true
      annotations:
        forecastle.stakater.com/icon: https://upload.wikimedia.org/wikipedia/en/thumb/a/a1/Grafana_logo.svg/1200px-Grafana_logo.svg.png
      {{- if $values.cluster.common.defaultIngressAnnotations }}
        {{ toYaml $values.cluster.common.defaultIngressAnnotations | nindent 8 }}
      {{- end }}
      {{- if index $release "config" "grafana" "ingress" "annotations" }}
        {{ toYaml (index $release "config" "grafana" "ingress" "annotations") | nindent 8 }}
      {{- end }}
      labels:
      {{- if $values.cluster.common.defaultIngressLabels }}
        {{ toYaml $values.cluster.common.defaultIngressLabels | nindent 8 }}
      {{- end }}
      {{- if index $release "config" "grafana" "ingress" "labels" }}
        {{ toYaml (index $release "config" "grafana" "ingress" "labels") | nindent 8 }}
      {{- end }}
      tls:
        - secretName: {{ index $release "config" "grafana" "ingress" "subdomain" | replace "." "-"}}-tls
          hosts:
          - {{ index $release "config" "grafana" "ingress" "subdomain" }}.{{ $values.cluster.config.domain }}
      hosts:
        - {{ index $release "config" "grafana" "ingress" "subdomain" }}.{{ $values.cluster.config.domain }}
  alertmanager:
    replicaCount: {{ (index $release "config" "alertmanager" "replicaCount") }}
    alertmanagerSpec:
      replicas: {{ (index $release "config" "alertmanager" "replicaCount") }}
      retention: {{ (index $release "config" "alertmanager" "retention") }}
      tolerations: {{ toYaml (index $release "scheduling" "all" "tolerations") | nindent 8 }}
      nodeSelector: {{ toYaml (index $release "scheduling" "all" "nodeSelector") | nindent 8 }}
      affinity: {{ toYaml (index $release "scheduling" "all" "affinity") | nindent 8 }}
      logFormat: json
      {{ if (index $release "config" "debug") }}
      logLevel: debug
      {{ end }}
    config:
      global:
        resolve_timeout: 5m
      inhibit_rules:
      {{ if $gcp }}
        - target_matchers:
          - alertname="CPUThrottlingHigh"
          - container="metrics-server-nanny"
        - target_matchers:
          - alertname="CPUThrottlingHigh"
          - container="metrics-server"
      {{ end }}
      {{ range (index $release "config" "alertmanager" "inhibitRules") }}
      - {{ toYaml . | nindent 8 }}
      {{ end }}
      route:
        ## https://www.robustperception.io/whats-the-difference-between-group_interval-group_wait-and-repeat_interval
        group_by: ['alertname','job','namespace']
        group_wait: 30s
        group_interval: 5m
        repeat_interval: 1h
        receiver: 'default'
        routes:
        - matchers:
          - alertname="InfoInhibitor"
          receiver: 'null'
        {{ range (index $release "config" "alertmanager" "routes") }}
        - {{.}}: {{ toYaml (index $release "config" "alertmanager" "routes" | nindent 10) }}
        {{ end }}
        {{- if index $release "config" "opsgenie" "heartbeat" "enabled" }}
        - matchers:
            - alertname="Watchdog"
          repeat_interval: 2m
          group_interval: 2m
          receiver: 'heartbeat'
        {{- end }}
        {{- if ( $values | get (printf "releases.%s.config.alertmanager.additionalRoutes" .Release.Name ) false) }}
        {{ toYaml (index $release "config" "alertmanager" "additionalRoutes") | nindent 10 }}
        {{- end }}
      receivers:
        - name: 'null'
        {{- if index $release "config" "opsgenie" "heartbeat" "enabled" }}
        - name: 'heartbeat'
          webhook_configs:
          {{ if index $release "config" "opsgenie" "heartbeat" "endpointOverride" }}
          - url: {{ index $release "config" "opsgenie" "heartbeat" "endpointOverride" }}
          {{ else }}
          - url: 'https://api.opsgenie.com/v2/heartbeats/k8s-{{ $values.cluster.config.name }}-heartbeat/ping'
          {{ end }}
            send_resolved: true
            http_config:
              basic_auth:
                password: {{ index $release "config" "opsgenie" "heartbeat" "apiKey" }}
        {{- end }}
        - name: 'default'
          {{- if index $release "config" "robusta" "enabled" }}
          webhook_configs:
          - url: 'http://kps-runner.monitoring.svc.cluster.local/api/alerts'
            send_resolved: true
            max_alerts: 1
          {{- end }}
          {{- if index $release "config" "opsgenie" "alerts" "enabled" }}
          opsgenie_configs:
          - api_key: {{ index $release "config" "opsgenie" "alerts" "apiKey" }}
            send_resolved: true
            tags: {{ $values.cluster.config.name }}
            message: |-
              {{`{{ if .CommonAnnotations.message }}
                {{ .CommonAnnotations.message }}
              {{ else if .CommonAnnotations.description }}
                {{ .CommonAnnotations.description }}
              {{ else if .Alerts }}
                {{ range .Alerts }}
                  {{ range .Annotations.SortedPairs }}{{.Value }}{{ end }}
                {{ end }}
              {{ else }}
                Empty Message
              {{ end }}`}}
            priority: {{`'{{if or (eq .CommonLabels.severity "P1") (eq .CommonLabels.severity "P2") (eq .CommonLabels.severity "P3") (eq .CommonLabels.severity "P4") (eq .CommonLabels.severity "P5")}}{{ .CommonLabels.severity }}{{else}}P4{{end}}'`}}
          {{- end }}
        {{- if ( $values | get (printf "releases.%s.config.alertmanager.additionalReceivers" .Release.Name ) false) }}
        {{ toYaml (index $release "config" "alertmanager" "additionalReceivers") | nindent 8 }}
        {{- end }}
      templates: []
    ingress:
      enabled: true
      annotations:
        forecastle.stakater.com/icon: https://camo.githubusercontent.com/13ff7fc7ea6d8a6d98d856da8e3220501b9e6a89620f017d1db039007138e062/687474703a2f2f6465766f70792e696f2f77702d636f6e74656e742f75706c6f6164732f323031392f30322f7a616c2d3230302e706e67
      {{- if $values.cluster.common.defaultIngressAnnotations }}
        {{ toYaml $values.cluster.common.defaultIngressAnnotations | nindent 8 }}
      {{- end }}
      {{- if index $release "config" "alertmanager" "ingress" "annotations" }}
        {{ toYaml (index $release "config" "alertmanager" "ingress" "annotations") | nindent 8 }}
      {{- end }}
      labels:
      {{- if $values.cluster.common.defaultIngressLabels }}
        {{ toYaml $values.cluster.common.defaultIngressLabels | nindent 8 }}
      {{- end }}
      {{- if index $release "config" "alertmanager" "ingress" "labels" }}
        {{ toYaml (index $release "config" "alertmanager" "ingress" "labels") | nindent 8 }}
      {{- end }}
      tls:
        - secretName: {{ index $release "config" "alertmanager" "ingress" "subdomain" | replace "." "-"}}-tls
          hosts:
          - {{ index $release "config" "alertmanager" "ingress" "subdomain" }}.{{ $values.cluster.config.domain }}
      hosts:
        - {{ index $release "config" "alertmanager" "ingress" "subdomain" }}.{{ $values.cluster.config.domain }}

kps-thanos:
  enabled: true
  fullnameOverride: kps-thanos
  objstoreConfig: |-
    type: s3
    config:
      bucket: kps-thanos
      endpoint: kps-minio.monitoring.svc.cluster.local:9000
      access_key: minio
      secret_key: minio123
      insecure: true
  {{ if (or $release.metadata.config.cloudEnabled (index $release "config" "thanos" "externalObjectStorageBackend" "enabled")) }}
  existingObjstoreSecret: {{ index $release "secrets" "objstore" "secretRef" "name" }}
  existingObjstoreSecretItems:
    - key: {{ index $release "secrets" "objstore" "secretRef" "key" }}
      path: {{ index $release "secrets" "objstore" "secretRef" "key" }}
  {{ end }}
  bucketweb:
    enabled: true
    tolerations: {{ toYaml (index $release "scheduling" "all" "tolerations") | nindent 6 }}
    nodeSelector: {{ toYaml (index $release "scheduling" "all" "nodeSelector") | nindent 6 }}
    affinity: {{ toYaml (index $release "scheduling" "all" "affinity") | nindent 6 }}
    ingress:
      enabled: true
      annotations:
      {{- if $values.cluster.common.defaultIngressAnnotations }}
        {{ toYaml $values.cluster.common.defaultIngressAnnotations | nindent 8 }}
      {{- end }}
      {{- if index $release "config" "thanos" "bucketweb" "ingress" "annotations" }}
        {{ toYaml (index $release "config" "thanos" "bucketweb" "ingress" "annotations") | nindent 8 }}
      {{- end }}
      labels:
      {{- if $values.cluster.common.defaultIngressLabels }}
        {{ toYaml $values.cluster.common.defaultIngressLabels | nindent 8 }}
      {{- end }}
      {{- if index $release "config" "thanos" "bucketweb" "ingress" "labels" }}
        {{ toYaml (index $release "config" "thanos" "bucketweb" "ingress" "labels") | nindent 8 }}
      {{- end }}
      tls: true
      hostname: {{ index $release "config" "thanos" "bucketweb" "ingress" "subdomain" }}.{{ $values.cluster.config.domain }}
  compactor:
    enabled: true
    persistence:
      size: 20Gi
    tolerations: {{ toYaml (index $release "scheduling" "all" "tolerations") | nindent 6 }}
    nodeSelector: {{ toYaml (index $release "scheduling" "all" "nodeSelector") | nindent 6 }}
    affinity: {{ toYaml (index $release "scheduling" "all" "affinity") | nindent 6 }}
    retentionResolutionRaw: {{ index $release "config"  "thanos" "compactor" "retentionResolutionRaw" }}
    retentionResolution5m: {{ index $release "config"  "thanos" "compactor" "retentionResolution5m" }}
    retentionResolution1h: {{ index $release "config"  "thanos" "compactor" "retentionResolution1h" }}
    ingress:
      enabled: true
      annotations:
      {{- if $values.cluster.common.defaultIngressAnnotations }}
        {{ toYaml $values.cluster.common.defaultIngressAnnotations | nindent 8 }}
      {{- end }}
      {{- if index $release "config" "thanos" "compactor" "ingress" "annotations" }}
        {{ toYaml (index $release "config" "thanos" "compactor" "ingress" "annotations") | nindent 8 }}
      {{- end }}
      labels:
      {{- if $values.cluster.common.defaultIngressLabels }}
        {{ toYaml $values.cluster.common.defaultIngressLabels | nindent 8 }}
      {{- end }}
      {{- if index $release "config" "thanos" "compactor" "ingress" "labels" }}
        {{ toYaml (index $release "config" "thanos" "compactor" "ingress" "labels") | nindent 8 }}
      {{- end }}
      tls: true
      hostname: {{ index $release "config" "thanos" "compactor" "ingress" "subdomain" }}.{{ $values.cluster.config.domain }}
  storegateway:
    enabled: true
    replicaCount: {{ (index $release "config" "thanos" "storegateway" "replicaCount") }}
    tolerations: {{ toYaml (index $release "scheduling" "all" "tolerations") | nindent 6 }}
    nodeSelector: {{ toYaml (index $release "scheduling" "all" "nodeSelector") | nindent 6 }}
    affinity: {{ toYaml (index $release "scheduling" "all" "affinity") | nindent 6 }}
    ingress:
      enabled: true
      annotations:
      {{- if $values.cluster.common.defaultIngressAnnotations }}
        {{ toYaml $values.cluster.common.defaultIngressAnnotations | nindent 8 }}
      {{- end }}
      {{- if index $release "config" "thanos" "storegateway" "ingress" "annotations" }}
        {{ toYaml (index $release "config" "thanos" "storegateway" "ingress" "annotations") | nindent 8 }}
      {{- end }}
      labels:
      {{- if $values.cluster.common.defaultIngressLabels }}
        {{ toYaml $values.cluster.common.defaultIngressLabels | nindent 8 }}
      {{- end }}
      {{- if index $release "config" "thanos" "storegateway" "ingress" "labels" }}
        {{ toYaml (index $release "config" "thanos" "storegateway" "ingress" "labels") | nindent 8 }}
      {{- end }}
      tls: true
      hostname: {{ index $release "config" "thanos" "storegateway" "ingress" "subdomain" }}.{{ $values.cluster.config.domain }}
  ruler:
    enabled: false
    tolerations: {{ toYaml (index $release "scheduling" "all" "tolerations") | nindent 6 }}
    nodeSelector: {{ toYaml (index $release "scheduling" "all" "nodeSelector") | nindent 6 }}
    affinity: {{ toYaml (index $release "scheduling" "all" "affinity") | nindent 6 }}
    alertmanagers:
      - http://kps-kube-prometheus-stack-alertmanager.monitoring.svc.cluster.local:9093
    config: |-
      groups:
        - name: "metamonitoring"
          rules:
            - alert: "PrometheusDown"
              expr: absent(up{container="prometheus"})
    ingress:
      enabled: true
      annotations:
      {{- if $values.cluster.common.defaultIngressAnnotations }}
        {{ toYaml $values.cluster.common.defaultIngressAnnotations | nindent 8 }}
      {{- end }}
      {{- if index $release "config" "thanos" "ruler" "ingress" "annotations" }}
        {{ toYaml (index $release "config" "thanos" "ruler" "ingress" "annotations") | nindent 8 }}
      {{- end }}
      labels:
      {{- if $values.cluster.common.defaultIngressLabels }}
        {{ toYaml $values.cluster.common.defaultIngressLabels | nindent 8 }}
      {{- end }}
      {{- if index $release "config" "thanos" "ruler" "ingress" "labels" }}
        {{ toYaml (index $release "config" "thanos" "ruler" "ingress" "labels") | nindent 8 }}
      {{- end }}
      tls: true
      hostname: {{ index $release "config" "thanos" "ruler" "ingress" "subdomain" }}.{{ $values.cluster.config.domain }}
  query:
    enabled: true
    tolerations: {{ toYaml (index $release "scheduling" "all" "tolerations") | nindent 6 }}
    nodeSelector: {{ toYaml (index $release "scheduling" "all" "nodeSelector") | nindent 6 }}
    affinity: {{ toYaml (index $release "scheduling" "all" "affinity") | nindent 6 }}
    replicaLabel: [prometheus_replica]
    ingress:
      enabled: true
      annotations:
      {{- if $values.cluster.common.defaultIngressAnnotations }}
        {{ toYaml $values.cluster.common.defaultIngressAnnotations | nindent 8 }}
      {{- end }}
      {{- if index $release "config" "thanos" "query" "ingress" "annotations" }}
        {{ toYaml (index $release "config" "thanos" "query" "ingress" "annotations") | nindent 8 }}
      {{- end }}
      labels:
      {{- if $values.cluster.common.defaultIngressLabels }}
        {{ toYaml $values.cluster.common.defaultIngressLabels | nindent 8 }}
      {{- end }}
      {{- if index $release "config" "thanos" "query" "ingress" "labels" }}
        {{ toYaml (index $release "config" "thanos" "query" "ingress" "labels") | nindent 8 }}
      {{- end }}
      tls: true
      hostname: {{ index $release "config" "thanos" "query" "ingress" "subdomain" }}.{{ $values.cluster.config.domain }}
  queryFrontend:
    enabled: true
    tolerations: {{ toYaml (index $release "scheduling" "all" "tolerations") | nindent 6 }}
    nodeSelector: {{ toYaml (index $release "scheduling" "all" "nodeSelector") | nindent 6 }}
    affinity: {{ toYaml (index $release "scheduling" "all" "affinity") | nindent 6 }}
    ingress:
      enabled: true
      annotations:
      {{- if $values.cluster.common.defaultIngressAnnotations }}
        {{ toYaml $values.cluster.common.defaultIngressAnnotations | nindent 8 }}
      {{- end }}
      {{- if index $release "config" "thanos" "queryFrontend" "ingress" "annotations" }}
        {{ toYaml (index $release "config" "thanos" "queryFrontend" "ingress" "annotations") | nindent 8 }}
      {{- end }}
      labels:
      {{- if $values.cluster.common.defaultIngressLabels }}
        {{ toYaml $values.cluster.common.defaultIngressLabels | nindent 8 }}
      {{- end }}
      {{- if index $release "config" "thanos" "queryFrontend" "ingress" "labels" }}
        {{ toYaml (index $release "config" "thanos" "queryFrontend" "ingress" "labels") | nindent 8 }}
      {{- end }}
      tls: true
      hostname: {{ index $release "config" "thanos" "queryFrontend" "ingress" "subdomain" }}.{{ $values.cluster.config.domain }}
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
  minio:
    enabled: false

kps-minio:
  enabled: {{ not (or $release.metadata.config.cloudEnabled (index $release "config" "thanos" "externalObjectStorageBackend" "enabled")) }}
  DeploymentUpdate:
    type: Recreate
  {{ if (index $release "scheduling" "minio" "tolerations") }}
  tolerations: {{ toYaml (index $release "scheduling" "minio" "tolerations") | nindent 4 }}
  {{ else }}
  tolerations: {{ toYaml (index $release "scheduling" "all" "tolerations") | nindent 4 }}
  {{ end }}
  {{ if (index $release "scheduling" "minio" "nodeSelector") }}
  nodeSelector: {{ toYaml (index $release "scheduling" "minio" "nodeSelector") | nindent 4 }}
  {{ else }}
  nodeSelector: {{ toYaml (index $release "scheduling" "all" "nodeSelector") | nindent 4 }}
  {{ end }}
  {{ if (index $release "scheduling" "minio" "affinity") }}
  affinity: {{ toYaml (index $release "scheduling" "minio" "affinity") | nindent 4 }}
  {{ else }}
  affinity: {{ toYaml (index $release "scheduling" "all" "affinity") | nindent 4 }}
  {{ end }}
  fullnameOverride: kps-minio
  accessKey: "minio"
  secretKey: "minio123"
  ## Create a bucket after minio install
  ##
  defaultBucket:
    enabled: true
    ## If enabled, must be a string with length > 0
    name: kps-thanos
    ## Can be one of none|download|upload|public
    policy: none
    ## Purge if bucket exists already
    purge: false
    ## set versioning for bucket true|false
    # versioning: false

  ## Create multiple buckets after minio install
  ## Enabling `defaultBucket` will take priority over this list
  ##
  buckets:
    []
    # - name: bucket1
    #   policy: none
    #   purge: false
    # - name: bucket2
    #   policy: none
    #   purge: false
  persistence:
    {{ toYaml (index $release "config" "kpsminio" "persistence") | nindent 4 }}

kps-robusta:
  enabled: {{ (index $release "config" "robusta" "enabled") }}
  globalConfig:
    grafana_url: {{ $values.cluster.monitoring.grafanaEndpoint }}
    grafana_api_key: ""
    grafana_dashboard_uid: ""
    prometheus_url: {{ $release.metadata.config.monitoring.metricsEndpoint }}
    account_id: {{ (index $release "config" "robusta" "global" "signingKey") }}
    signing_key: {{ (index $release "config" "robusta" "global" "accountID") }}
  enablePrometheusStack: false
  enableServiceMonitors: false
  disableCloudRouting: true
  enablePlatformPlaybooks: false
  clusterName: {{ $values.cluster.config.name }}
  sinksConfig:
  {{- range $sinkName, $sinkConfig := (index $release "config" "robusta" "slackSinks") }}
  {{- $name := (coalesce ($sinkConfig | getOrNil "nameOverride") (printf "slack-%s-%s" $values.cluster.config.name $sinkName)) }}
  {{- $channel := (coalesce ($sinkConfig | getOrNil "channel") (printf "k8s-%s-%s-robusta" $values.cluster.config.name $sinkName)) }}
  {{- $apiKey := (coalesce ($sinkConfig | getOrNil "apiKey") (index $release "config" "robusta" "slack" "apiKey"))  }}
  {{- $isDefault := (. | getOrNil "default") }}
  {{- $namespace := (.| getOrNil "namespace")  }}
  - slack_sink:
      name: {{ $name }}
      {{- if $isDefault }}
      default: true
      {{- end }}
      slack_channel: {{ $channel }}
      api_key: {{ $apiKey }}
      {{- if $namespace }}
      match:
        namespace: ^{{ $namespace }}$
      {{- end }}
  {{- end }}
  {{- if (index $release "config" "robusta" "additionalSinks") }}
  {{ toYaml (index $release "config" "robusta" "additionalSinks") | nindent 2 }}
  {{- end }}
