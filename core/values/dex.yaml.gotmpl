image:
  repository: ghcr.io/dexidp/dex
  tag: "v2.35.3"

https:
  enabled: true
grpc:
  enabled: false

configSecret:
  create: true
  name: {{.Release.Name }}-config

config:
  issuer: {{ printf "https://%s.%s/" (index .Values.releases .Release.Name "config" "ingress" "subdomain") ( .Values.cluster.config.domain ) }}
  web:
    tlsKey: /etc/dex/certs/tls.key
    tlsCert: /etc/dex/certs/tls.crt
  logger:
    level: debug
    format: json
  frontend:
    issuer: {{ default (printf "%s-cluster" .Values.project.name | replace "-" " " | title ) (index .Values.releases .Release.Name "config" "title") }}
    logoUrl: {{ index .Values.releases .Release.Name "config" "extra" "logoUrl" }}
  storage:
    type: kubernetes
    config:
      inCluster: true
  staticClients:
    - id: "{{ `{{ .Env.DEFAULT_STATIC_CLIENT_ID }}` }}"
      redirectURIs:
        - {{ printf "https://%s.%s/oauth2/callback" (index .Values.releases "oauth2-proxy" "config" "ingress" "subdomain") ( .Values.cluster.config.domain ) }}
        {{- if ( .Values | getOrNil (printf "releases.%s.config.idp.defaultStaticClient.allowedRedirectURIs" .Release.Name )) }}
        {{ toYaml (index .Values.releases .Release.Name "config" "idp" "defaultStaticClient" "allowedRedirectURIs")  | nindent 8 }}
        {{- end }}
      name: {{ (index .Values.releases .Release.Name "config" "idp" "defaultStaticClient" "name") }}
      secret: "{{ `{{ .Env.DEFAULT_STATIC_CLIENT_SECRET }}` }}"
    {{ if ( .Values | getOrNil (printf "releases.%s.config.idp.extraStaticClients" .Release.Name)) }}
    {{ toYaml ( index .Values.releases .Release.Name "config" "idp" "extraStaticClients") | nindent 4 }}
    {{ end }}
  connectors:
    - type: google
      id: default_oidc_provider
      name: {{ index .Values.releases .Release.Name "config" "idp" "mainConnectorName" }}
      config:
        clientID: $DEFAULT_OIDC_CONNECTORS_ID
        clientSecret: $DEFAULT_OIDC_CONNECTORS_SECRET
        redirectURI: {{ printf "https://%s.%s/callback" (index .Values.releases .Release.Name "config" "ingress" "subdomain") ( .Values.cluster.config.domain ) }}
        scopes:
          - profile
          - email
    {{ if ( .Values | getOrNil (printf "releases.%s.config.idp.extraConnectors" .Release.Name)) }}
    {{ toYaml ( index .Values.releases .Release.Name "config" "idp" "extraConnectors") | nindent 4 }}
    {{ end }}

volumes:
  - name: tls
    secret:
      secretName: {{ (index .Values.releases .Release.Name "config" "ingress" "subdomain") | replace "." "-"}}-tls

volumeMounts:
  - name: tls
    mountPath: /etc/dex/certs

envFrom: []

env: {}

envVars:
  - name: DEFAULT_STATIC_CLIENT_ID
    valueFrom:
      secretKeyRef:
        name: {{ printf "%s-dynamic-secrets-%s" .Release.Name (index .Values.releases .Release.Name "dynamicSecrets" "default-oauth2-client" "secretRef" "name" ) }}
        key: DEFAULT_STATIC_CLIENT_ID
  - name: DEFAULT_STATIC_CLIENT_SECRET
    valueFrom:
      secretKeyRef:
        name: {{ printf "%s-dynamic-secrets-%s" .Release.Name (index .Values.releases .Release.Name "dynamicSecrets" "default-oauth2-client" "secretRef" "name" ) }}
        key: DEFAULT_STATIC_CLIENT_SECRET
  - name: DEFAULT_OIDC_CONNECTORS_ID
    valueFrom:
      secretKeyRef:
        name: {{ (index .Values.releases .Release.Name "secrets" "default-idp-provider" "secretRef" "name" ) }}
        key: DEFAULT_OIDC_CONNECTORS_ID
  - name: DEFAULT_OIDC_CONNECTORS_SECRET
    valueFrom:
      secretKeyRef:
        name: {{ (index .Values.releases .Release.Name "secrets" "default-idp-provider" "secretRef" "name" ) }}
        key: DEFAULT_OIDC_CONNECTORS_SECRET
  {{ if ( .Values | getOrNil (printf "releases.%s.config.idp.extraEnvVars" .Release.Name)) }}
  {{ toYaml ( index .Values.releases .Release.Name "config" "idp" "extraEnvVars") | nindent 2  }}
  {{ end }}

ingress:
  enabled: true
  className: {{ .Values.cluster.common.defaultIngressClass }}
  annotations:
    forecastle.stakater.com/icon: https://cncf-branding.netlify.app/img/projects/dex/stacked/color/dex-stacked-color.png
  {{ if .Values.cluster.common.defaultIngressAnnotations }}
    {{ toYaml .Values.cluster.common.defaultIngressAnnotations | nindent 4 }}
  {{- end }}
  {{- if (index .Values.releases .Release.Name "config" "ingress" "annotations") }}
    {{ toYaml (index .Values.releases .Release.Name "config" "ingress" "annotations") | nindent 4 }}
  {{- end }}
  hosts:
    - host: {{ (index .Values.releases .Release.Name "config" "ingress" "subdomain") }}.{{ .Values.cluster.config.domain }}
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
   - secretName: {{ (index .Values.releases .Release.Name "config" "ingress" "subdomain") | replace "." "-"}}-tls
     hosts:
       - {{ (index .Values.releases .Release.Name "config" "ingress" "subdomain") }}.{{ .Values.cluster.config.domain }}

serviceMonitor:
  enabled: {{ coalesce (index .Values.releases .Release.Name "config" "metrics" "serviceMonitor" "enabled") .Values.core.packages.monitoring.enabled }}
  namespace: {{ .Release.Namespace }}
  interval: 30s

replicaCount: 2
podDisruptionBudget:
  enabled: true
  minAvailable: 1