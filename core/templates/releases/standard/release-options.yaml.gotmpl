{{- $values := .values }}
{{ $releaseName := .releaseName }}
{{ $releaseNamespace := .releaseNamespace }}
{{- if .item.strategicMergePatches }}
  strategicMergePatches:
  {{ toYaml .item.strategicMergePatches | nindent 2 }}
  {{- end }}
  jsonPatches:
  {{- if .item.jsonPatches }}
  {{ toYaml .item.jsonPatches | nindent 2 }}
  {{- end }}
  {{- if .item.options.patchIngresses }}
  - target:
      kind: Ingress
      name: .*
    patch:
  {{- if .item.options.removeIngressClassAnnotation }}
      - op: remove
        path: "/metadata/annotations/kubernetes.io~1ingress.class"
        {{/*# For Reference - brace yourself ;)
        # https://github.com/kubernetes-sigs/kustomize/issues/1256#issuecomment-562531658
        # https://datatracker.ietf.org/doc/html/rfc6902
        # http://jsonpatch.com/#json-pointer */}}
  {{- end }}
  {{- if .item.options.removeIngressClassName }}
      - op: remove
        path: "/spec/ingressClassName"
  {{- end }}
  {{- if .item.options.injectIngressClassName }}
      - op: replace
        path: "/spec/ingressClassName"
        value: "{{ coalesce $values.applicationsConfig.defaultIngressClass $values.servicesConfig.defaultIngressClass $values.cluster.common.defaultIngressClass }}"
  {{- end }}
  {{- if .item.options.upgradeIngress }}
      - op: replace
        path: "/apiVersion"
        value: "networking.k8s.io/v1"
      - op: add
        path: "/spec/rules/0/http/paths/0/path"
        value: "/"
      - op: add
        path: "/spec/rules/0/http/paths/0/pathType"
        value: "Prefix"
      - op: add
        path: "/spec/rules/0/http/paths/0/backend/service"
        value: {"name":"", "port": {"number":""}}
      - op: copy
        from: "/spec/rules/0/http/paths/0/backend/serviceName"
        path: "/spec/rules/0/http/paths/0/backend/service/name"
      - op: copy
        from: "/spec/rules/0/http/paths/0/backend/servicePort"
        path: "/spec/rules/0/http/paths/0/backend/service/port/number"
      - op: remove
        path: "/spec/rules/0/http/paths/0/backend/serviceName"
      - op: remove
        path: "/spec/rules/0/http/paths/0/backend/servicePort"
  {{- else if (and .item.options.patchIngresses (or (eq .item.type "application") (eq .item.type "service")) (getOrNil "enabled" (getOrNil "ingress" .item.values))) }}
  - target:
      kind: Ingress
      name: .*
    patch:
  {{- if .item.options.removeIngressClassAnnotation }}
      - op: remove
        path: "/metadata/annotations/kubernetes.io~1ingress.class"
        {{/*# For Reference - brace yourself ;)
        # https://github.com/kubernetes-sigs/kustomize/issues/1256#issuecomment-562531658
        # https://datatracker.ietf.org/doc/html/rfc6902
        # http://jsonpatch.com/#json-pointer */}}
  {{- end }}
  {{- if .item.options.removeIngressClassName }}
      - op: remove
        path: /spec/ingressClassName
  {{- end }}
  {{- if .item.options.injectIngressClassName }}
      - op: replace
        path: "/spec/ingressClassName"
        value: {{ index $values.releases "nginx-ingress-controller" "config" "ingressClass" }}-{{ .releaseNamespace }}
  {{- end }}
  {{- if .item.options.injectIngressHost }}
      - op: replace
        path: "/spec/rules/0/host"
        value: {{ $releaseName }}.{{ $releaseNamespace }}.{{ $values.cluster.config.domain }}
  {{- end }}
    # tls: []
  #  - secretName: mongo-express-tls
  #    hosts:
  #      - mongo-express.local
  {{- if .item.options.injectIngressTls }}
      - op: add
        path: "/spec/tls"
        value: [{"hosts": ["{{ $releaseName }}.{{ $releaseNamespace }}.{{ $values.cluster.config.domain }}"], "secretName": "{{ $releaseName }}.{{ $releaseNamespace }}.{{ $values.cluster.config.domain | replace "." "-"}}-tls"}]

  {{- end }}
  {{- end }}
  {{- end }}
  transformers:
  {{ if $values.core.globalHelmMetadataEnabled }}
  {{- tpl (readFile "templates/releases/standard/release-helm-metadata.yaml.gotmpl") . }}
  {{ end }}
  {{- if .item.transformers }}
  {{ toYaml .item.transformers | nindent 2 }}
  {{- end }}
  {{- if .item.options.applyDefaultLabelsOnIngress }}
  - apiVersion: builtin
    kind: LabelTransformer
    metadata:
      name: apply-default-labels-on-ingress
    labels:
      {{ toYaml $values.cluster.common.defaultIngressLabels | nindent 6 }}
    fieldSpecs:
    - path: metadata/labels
      kind: Ingress
      create: true
  {{- end }}
  {{- if .item.options.applyDefaultAnnotationsOnIngress }}
  - apiVersion: builtin
    kind: AnnotationsTransformer
    metadata:
      name: apply-default-annotations-on-ingress
    annotations:
      {{ toYaml $values.cluster.common.defaultIngressAnnotations | nindent 6 }}
    fieldSpecs:
    - path: metadata/annotations
      kind: Ingress
      create: true
  {{- end }}
  {{- if .item.options.injectReloaderAnnotations }}
  - apiVersion: builtin
    kind: AnnotationsTransformer
    metadata:
      name: inject-reloader-annotations
    annotations:
      reloader.stakater.com/auto: "true"
    fieldSpecs:
    - path: metadata/annotations
      kind: Deployment
      create: true
    - path: metadata/annotations
      kind: StatefulSet
      create: true
    - path: metadata/annotations
      kind: DaemonSet
      create: true
  {{- end }}
  {{- if .item.options.injectClusterLoggingLabel }}
  - apiVersion: builtin
    kind: LabelTransformer
    metadata:
      name: inject-cluster-logging-label
    labels:
      logging.kube-core.io/flow-name: {{if (or (eq .item.type "application") (eq .item.type "service"))}}app{{else}}cluster{{end}}
    fieldSpecs:
    - path: metadata/labels
      kind: Deployment
      create: true
    - path: spec/template/metadata/labels
      kind: Deployment
      create: true
    - path: metadata/labels
      kind: StatefulSet
      create: true
    - path: spec/template/metadata/labels
      kind: StatefulSet
      create: true
    - path: metadata/labels
      kind: DaemonSet
      create: true
    - path: spec/template/metadata/labels
      kind: DaemonSet
      create: true
    - path: metadata/labels
      kind: CronJob
      create: true
    - path: spec/jobTemplate/metadata/labels
      kind: CronJob
      create: true
  {{- end }}
  {{- if .item.options.injectOauth2ProxyOnIngress }}
  - apiVersion: builtin
    kind: AnnotationsTransformer
    metadata:
      name: inject-oauth2-proxy-on-ingress
    annotations:
      nginx.ingress.kubernetes.io/auth-url: {{ printf "https://%s.%s/oauth2/auth" (index $values.releases "oauth2-proxy" "config" "ingress" "subdomain") ( $values.cluster.config.domain ) | quote }}
      nginx.ingress.kubernetes.io/auth-signin: {{ printf "https://%s.%s/oauth2/start" (index $values.releases "oauth2-proxy" "config" "ingress" "subdomain") ( $values.cluster.config.domain ) | quote }}
    fieldSpecs:
    - path: metadata/annotations
      kind: Ingress
      create: true
  {{- end }}
  {{- if .item.options.injectSatisfyAnyAuthOnIngress }}
  - apiVersion: builtin
    kind: AnnotationsTransformer
    metadata:
      name: inject-satisfy-any-auth-on-ingress
    annotations:
      nginx.ingress.kubernetes.io/satisfy: "any"
    fieldSpecs:
    - path: metadata/annotations
      kind: Ingress
      create: true
  {{- end }}
  {{- if .item.options.injectionToEnforcePublicAccessFromIngressAccessOperator }}
  - apiVersion: builtin
    kind: AnnotationsTransformer
    metadata:
      name: inject-allowed-visitors-to-public-on-ingress
    annotations:
      ingress.neo9.io/allowed-visitors: "public"
      ingress.neo9.io/access-filtered: "false"
      nginx.ingress.kubernetes.io/satisfy: "any"
    fieldSpecs:
    - path: metadata/annotations
      kind: Ingress
      create: true
  - apiVersion: builtin
    kind: LabelTransformer
    metadata:
      name: injecty-access-filtered-false-on-ingress
    labels:
      ingress.neo9.io/access-filtered: "false"
    fieldSpecs:
    - path: metadata/labels
      kind: Ingress
      create: true
  {{- end }}
  {{- tpl (readFile "templates/releases/standard/release-labels.yaml.gotmpl") . }}
  {{- if .item.hooks }}
  hooks:
  {{ toYaml .item.hooks | nindent 2 }}
  {{- end }}
