{{- $values := .Values }}
{{- $releases := .Values.releases }}

{{ $environments := .Values.environments }}
{{ (tpl (readFile "templates/releases/standard/variables/release-config.yaml.gotmpl") (dict "values" $values "environments" $environments "coreReleases" $releases )) }}

{{- range $releaseName, $release := $environments }}
{{- $release := (mergeOverwrite (deepCopy $values.templates.environment) $release) }}
{{- $envValues := (mergeOverwrite (deepCopy $values) $release.config ) }}

{{- if $release.enabled -}}
{{- if (not (eq $releaseName "default"))  -}}
{{- $namespace := $releaseName -}}
{{- $context := (coalesce $release.context $envValues.cluster.config.context) -}}

{{ $_ := set $release "type" "environment" }}
{{ $_ := set $release "name" $releaseName }}
{{ $_ := set $release "namespace" $namespace }}
{{ $_ := (tpl (readFile "templates/releases/standard/release-variables.yaml.gotmpl") (dict "item" $release "values" $envValues)) }}
{{ $_ := set $.Values.environments $release.name $release }}

{{ if and $values.core.environmentsEnabled (not $values.core.applicationsOnly) (not $values.core.servicesOnly) }}
{{- tpl (readFile "templates/releases/standard/release.yaml.gotmpl") (dict "item" $release "values" $envValues "releaseName" $releaseName "releaseNamespace" $namespace "releaseContext" $context) }}
{{- tpl (readFile "templates/releases/standard/release-options.yaml.gotmpl") (dict "item" $release "values" $envValues "releaseName" $releaseName "releaseNamespace" $namespace "releaseContext" $context) }}
{{- tpl (readFile "templates/releases/standard/release-extensions.yaml.gotmpl") (dict "item" $release "values" $envValues "releaseName" $releaseName "releaseNamespace" $namespace "releaseContext" $context) }}
{{ end }}


{{ range $applicationName, $application := ($release | getOrNil "applications") }}
{{ $application := (mergeOverwrite (deepCopy $envValues.templates.application) $application) }}

{{- if $application.enabled -}}
{{ $_ := set $application "type" "application" }}
{{ $_ := set $application "name" $applicationName }}
{{ $_ := set $application "namespace" $namespace }}
{{ $_ := (tpl (readFile "templates/releases/standard/release-variables.yaml.gotmpl") (dict "item" $application "values" $envValues)) }}
{{ $_ := set $.Values.applications $application.name $application }}


{{ if $values.core.applicationsEnabled }}
{{- tpl (readFile "templates/releases/standard/release.yaml.gotmpl") (dict "item" $application "values" $envValues "releaseName" $applicationName "releaseNamespace" $namespace "releaseContext" $context) }}
{{- tpl (readFile "templates/releases/standard/release-options.yaml.gotmpl") (dict "item" $application "values" $envValues "releaseName" $applicationName "releaseNamespace" $namespace "releaseContext" $context) }}
{{- tpl (readFile "templates/releases/standard/release-extensions.yaml.gotmpl") (dict "item" $application "values" $envValues "releaseName" $applicationName "releaseNamespace" $namespace "releaseContext" $context) }}
{{- end -}}

{{- end -}}
{{- end -}}

{{ range $serviceName, $service := ($release | getOrNil "services") }}
{{ $service := (mergeOverwrite (deepCopy $envValues.templates.service) $service) }}

{{- if $service.enabled -}}
{{ $_ := set $service "type" "service" }}
{{ $_ := set $service "name" $serviceName }}
{{ $_ := set $service "namespace" $namespace }}
{{ $_ := (tpl (readFile "templates/releases/standard/release-variables.yaml.gotmpl") (dict "item" $service "values" $envValues)) }}
{{ $_ := set $.Values.services $service.name $service }}


{{ if $values.core.servicesEnabled }}
{{- tpl (readFile "templates/releases/standard/release.yaml.gotmpl") (dict "item" $service "values" $envValues "releaseName" $serviceName "releaseNamespace" $namespace "releaseContext" $context) }}
{{- tpl (readFile "templates/releases/standard/release-options.yaml.gotmpl") (dict "item" $service "values" $envValues "releaseName" $serviceName "releaseNamespace" $namespace "releaseContext" $context) }}
{{- tpl (readFile "templates/releases/standard/release-extensions.yaml.gotmpl") (dict "item" $service "values" $envValues "releaseName" $serviceName "releaseNamespace" $namespace "releaseContext" $context) }}
{{- end -}}

{{- end -}}
{{- end -}}




{{- end -}}
{{- end -}}

{{- end -}}
