{{ $values := .Values }}
{{ $env := .env }}
{{ $type := .type }}
{{ $envConfig := (index $values.environments $env) }}
{{ $helmfileName := (printf "%s.%ss" $env $type )}}

{{ $helmfilePath := (printf "./%s.helmfile.yaml.gotmpl" "HELMFILE_NAME") }}
{{ if (or (env "KUBE_CORE_DEV") ($values | getOrNil "devMode")) }}

  {{ if (eq $type "application") }}
    {{ $kubeCoreLocalPath := (env "KUBE_CORE_LOCAL_CORE_PATH" ) }}
    {{ $kubeCoreLocalHelmfilePath := (env "KUBE_CORE_HELMFILES_APPLICATIONS_LOCAL_PATH" ) }}
    {{ if (or (env "KUBE_CORE_DEV") ($values | getOrNil "devMode")) }}
      {{ if $kubeCoreLocalHelmfilePath }}
       {{ $helmfilePath = $kubeCoreLocalHelmfilePath }}
      {{ else if $kubeCoreLocalPath }}
        {{ $helmfilePath = (printf "%s/%ss.yaml.gotmpl" $kubeCoreLocalPath $type) }}
      {{ else }}
       {{ $helmfilePath = (printf "KUBE_CORE_HELMFILES_APPLICATIONS_LOCAL_PATH" ) }}
      {{ end }}
    {{ end }}
  {{ else if (eq $type "service") }}
    {{ $kubeCoreLocalPath := (env "KUBE_CORE_LOCAL_CORE_PATH" ) }}
    {{ $kubeCoreLocalHelmfilePath := (env "KUBE_CORE_HELMFILES_SERVICES_LOCAL_PATH" ) }}
    {{ if (or (env "KUBE_CORE_DEV") ($values | getOrNil "devMode")) }}
      {{ if $kubeCoreLocalHelmfilePath }}
        {{ $helmfilePath = $kubeCoreLocalHelmfilePath }}
      {{ else if $kubeCoreLocalPath }}
        {{ $helmfilePath = (printf "%s/%ss.yaml.gotmpl" $kubeCoreLocalPath $type) }}
      {{ else }}
        {{ $helmfilePath = (printf "KUBE_CORE_HELMFILES_SERVICES_LOCAL_PATH" ) }}
      {{ end }}
    {{ end }}
  {{ end }}
{{ else }}
  {{ $remotePath := ($values | getOrNil "org" | getOrNil "core" | getOrNil "helmfiles" | getOrNil "HELMFILE_NAME" | getOrNil "remotePath") }}
  {{ $version := ($values | getOrNil "org" | getOrNil "core" | getOrNil "version") }}
  {{ $remote := ($values | getOrNil "org" | getOrNil "core" | getOrNil "remotePath") }}

  {{ if $remotePath }}
    {{ $helmfilePath = $remotePath }}
  {{ else if (and $version $remote) }}
    {{ $helmfilePath = (printf "%s/core/%s.yaml.gotmpl?ref=%s" $remote "HELMFILE_NAME" $version) }}
  {{ else }}
    {{ if (eq $type "application") }}
      {{ $helmfilePath = (printf "KUBE_CORE_HELMFILES_APPLICATIONS_REMOTE_PATH" ) }}
    {{ else if (eq $type "service") }}
      {{ $helmfilePath = (printf "KUBE_CORE_HELMFILES_SERVICES_REMOTE_PATH" ) }}
    {{ end }}
  {{ end }}
{{ end }}

helmfiles:
- path: {{ $helmfilePath }}
  values:
  # Core Values
  {{ if $values | getOrNil "org" | getOrNil "core" | getOrNil "values" }}
  {{ range $values.org.core.values }}
  - {{ . }}
  {{ end }}
  {{ end }}
  {{ tpl (readFile "./lib/printfiles.functions.yaml.gotmpl") (dict "path" "../values/core") | nindent 2 }}


  - core:
      helmfileName: {{ $helmfileName }}
      releasesEnabled: false
      releasesRawEnabled: false
      releasesCustomEnabled: false
      namespacesEnabled: false
      globalHelmMetadataEnabled: true
      globalLabelsEnabled: true
{{ if (eq $type "application") }}
      applicationsEnabled: true
  - applications: {{ toYaml $values.applications | nindent 6 }}
  - applicationsList: {{ toYaml $values.applications | nindent 6 }}
  - servicesList: {{ toYaml $values.services | nindent 6 }}
  - applicationsConfig:
      namespace: {{ coalesce ($values | getOrNil "applicationsConfig" | getOrNil "namespace")  ($values | getOrNil "envConfig" | getOrNil "namespace") $env }}
      defaultIngressClass: {{ coalesce ($values | getOrNil "applicationsConfig" | getOrNil "namespace")  ($values | getOrNil "envConfig" | getOrNil "defaultIngressClass") (printf "nginx-%s" $env) }}
{{ else if (eq $type "service") }}
      servicesEnabled: true
  - services: {{ toYaml $values.services | nindent 6 }}
  - applicationsList: {{ toYaml $values.applications | nindent 6 }}
  - servicesList: {{ toYaml $values.services | nindent 6 }}
  - servicesConfig:
      namespace: {{ coalesce ($values | getOrNil "servicesConfig" | getOrNil "namespace")  ($values | getOrNil "envConfig" | getOrNil "namespace") $env }}
      defaultIngressClass: {{ coalesce ($values | getOrNil "servicesConfig" | getOrNil "namespace")  ($values | getOrNil "envConfig" | getOrNil "defaultIngressClass") (printf "nginx-%s" $env) }}

{{ end }}

{{ if (eq $type "application") }}
  # Environments - All in one - Simple
  {{ if isFile "../values/platform/applications.yaml" }}
  - ../values/platform/applications.yaml
  {{ end }}

  # Environments - All in one with default - Flexible
  {{ if isFile "../values/platform/applications-default.yaml" }}
  - ../values/platform/applications-default.yaml
  {{ end }}
  {{ if isFile (printf "../values/platform/applications-%s.yaml" $env) }}
  - {{ (printf "../values/platform/applications-%s.yaml" $env) }}
  {{ end }}

  # Environments - Split - Advanced
  {{ range $applicationName, $application := $values.applications }}
  ## Default values for all apps
  {{ if isFile "../values/envs/default/applications/commons.yaml" }}
  - applications:
      {{ $applicationName }}:
        values: {{ (readFile "../values/envs/default/applications/commons.yaml") | nindent 10 }}
  {{ end }}
  ## Default values for current app
  {{ if isFile (printf "../values/envs/default/applications/%s.yaml" $applicationName) }}
  - applications:
      {{ $applicationName }}:
        values: {{ (readFile (printf "../values/envs/default/applications/%s.yaml" $applicationName)) | nindent 10 }}
  {{ end }}

  # Default values for env
  {{ if isFile (printf "../values/envs/%s/applications/commons.yaml" $env) }}
  - applications:
      {{ $applicationName }}:
        values: {{ (readFile (printf "../values/envs/%s/applications/commons.yaml" $env)) | nindent 10 }}
  {{ end }}

  # Specific extra values for applications in current env
  {{ range $k,$v := ($application | getOrNil "extraValues") }}
  {{ if isFile (printf "../values/envs/%s/applications/%s.yaml" $env $k ) }}
  - applications:
      {{ $applicationName }}:
        values: {{ readFile (printf "../values/envs/%s/applications/%s.yaml" $env $k ) | nindent 10 }}
  {{ end }}
  {{ end }}

  # App values
  {{ if isFile (printf "../values/envs/%s/applications/%s.yaml" $env $applicationName) }}
  - applications:
      {{ $applicationName }}:
        values: {{ (readFile (printf "../values/envs/%s/applications/%s.yaml" $env $applicationName)) | nindent 10 }}
  {{ end }}

  # App Options
  {{ if ($values | getOrNil "applicationsConfig" | getOrNil "options") }}
  - applications:
      {{ $applicationName }}:
        options: {{ toYaml $values.applicationsConfig.options | nindent 10 }}
  {{ end }}

  # Env Options
  {{ if ($envConfig | getOrNil "applicationsConfig" | getOrNil "options") }}
  - applications:
      {{ $applicationName }}:
        options: {{ toYaml $envConfig.applicationsConfig.options | nindent 10 }}
  {{ end }}

  {{ end }}

  # Overlay
  - {{ toYaml $envConfig | nindent 4 }}
{{ else if (eq $type "service") }}
  # Environments - All in one - Simple
  {{ if isFile "../values/platform/services.yaml" }}
  - ../values/platform/services.yaml
  {{ end }}

  # Environments - All in one with default - Flexible
  {{ if isFile "../values/platform/services-default.yaml" }}
  - ../values/platform/services-default.yaml
  {{ end }}
  {{ if isFile (printf "../values/platform/services-%s.yaml" $env) }}
  - {{ (printf "../values/platform/services-%s.yaml" $env) }}
  {{ end }}

  # Environments - Split - Advanced
  {{ range $serviceName, $service := $values.services }}
  ## Default values for all service
  {{ if isFile "../values/envs/default/services/commons.yaml" }}
  - services:
      {{ $serviceName }}:
        values: {{ readFile "../values/envs/default/services/commons.yaml" | nindent 10 }}
  {{ end }}
  ## Default values for current service
  {{ if isFile (printf "../values/envs/default/services/%s.yaml" $serviceName) }}
  - services:
      {{ $serviceName }}:
        values: {{ readFile (printf "../values/envs/default/services/%s.yaml" $serviceName) | nindent 10 }}
  {{ end }}

  # Default values for env
  {{ if isFile (printf "../values/envs/%s/services/commons.yaml" $env) }}
  - services:
      {{ $serviceName }}:
        values: {{ readFile (printf "../values/envs/%s/services/commons.yaml" $env) | nindent 10 }}
  {{ end }}

  # Specific extra values for services in current env
  {{ range $k,$v := ($service | getOrNil "extraValues") }}
  {{ if isFile (printf "../values/envs/%s/services/%s.yaml" $env $k ) }}
  - services:
      {{ $serviceName }}:
        values: {{ readFile (printf "../values/envs/%s/services/%s.yaml" $env $k ) | nindent 10 }}
  {{ end }}
  {{ end }}

  # Service values
  {{ if isFile (printf "../values/envs/%s/services/%s.yaml" $env $serviceName) }}
  - services:
      {{ $serviceName }}:
        values: {{ readFile (printf "../values/envs/%s/services/%s.yaml" $env $serviceName) | nindent 10 }}
  {{ end }}

  # Service Options
  {{ if ($values | getOrNil "servicesConfig" | getOrNil "options") }}
  - services:
      {{ $serviceName }}:
        options: {{ toYaml $values.servicesConfig.options | nindent 10 }}
  {{ end }}

  # Env Options
  {{ if ($envConfig | getOrNil "servicesConfig" | getOrNil "options") }}
  - services:
      {{ $serviceName }}:
        options: {{ toYaml $envConfig.servicesConfig.options | nindent 10 }}
  {{ end }}

  {{ end }}

  # Overlay
  - {{ toYaml $envConfig | nindent 4 }}
{{ end }}
