templates:
  release: &release
    config: {}
    context: ""
    chart: ""
    chartVersion: "latest"
    enabled: false
    extraReleaseValues: []
    hooks: {}
    type: "release"
    injectCoreValues: false
    jsonPatches: {}
    labels: {}
    manifests: []
    namespace: "default"
    needs: []
    options:
      renderRelease: true
      renderOptions: true
      renderExtensions: true
      forceNamespace: true
      forceNamespaceIngressClass: false
      forceIngressClass: false
      forceNamespaceVisitorGroup: false
      forceClusterIssuer: ""
      forceNamespaceClusterIssuer: false
      forceVisitorGroups: ""
      forceNamespaceNodeAffinity: false
      forceNamespaceNodeSelector: false
      patchIngresses: false
      upgradeIngress: false
      applyDefaultLabelsOnIngress: false
      applyDefaultAnnotationsOnIngress: false
      removeIngressClassAnnotation: false
      removeIngressClassName: false
      injectReloaderAnnotations: false
      injectClusterLoggingLabel: false
      injectDefaultIngressClassName: false
      injectIngressHost: false
      injectIngressTls: false
      injectOauth2ProxyOnIngress: false
      injectNamespaceOauth2ProxyOnIngress: false
      injectSatisfyAnyAuthOnIngress: false
      injectionToEnforcePublicAccessFromIngressAccessOperator: false
    patches:
      enabled: false
      patches: {}
    release: {}
    slos: {}
    monitoring: {}
    ingress:
      enabled: false
    scaling:
      enabled: false
    chaos: {}
    secrets: {}
    rules: {}
    extensions:
      replicatedSecretsEnabled: true
      dynamicSecretsEnabled: true
      configmapsEnabled: true
      extraManifestsEnabled: true
      rawManifestsEnabled: true
      externalSecretsEnabled: true
    extraManifests: {}
    rawManifests: {}
    configmaps: {}
    cloud: {}
    gitops:
      enabled: false
    external-secrets: {}
    dynamicSecrets: {}
    strategicMergePatches: {}
    transformers: {}
    values: {}
    templatedValues: {}
  raw:
    config: {}
    context: ""
    chart: "kube-core/raw"
    chartVersion: "latest"
    enabled: false
    extraReleaseValues: []
    hooks: {}
    type: "release"
    injectCoreValues: false
    jsonPatches: {}
    labels: {}
    manifests: []
    namespace: "default"
    needs: []
    options:
      renderRelease: true
      renderOptions: true
      renderExtensions: false
      forceNamespace: false
      forceNamespaceIngressClass: false
      forceIngressClass: false
      forceNamespaceVisitorGroup: false
      forceClusterIssuer: ""
      forceNamespaceClusterIssuer: false
      forceVisitorGroups: ""
      forceNamespaceNodeAffinity: false
      forceNamespaceNodeSelector: false
      patchIngresses: false
      upgradeIngress: false
      applyDefaultLabelsOnIngress: false
      applyDefaultAnnotationsOnIngress: false
      removeIngressClassAnnotation: false
      removeIngressClassName: false
      injectReloaderAnnotations: false
      injectClusterLoggingLabel: false
      injectDefaultIngressClassName: false
      injectIngressHost: false
      injectIngressTls: false
      injectOauth2ProxyOnIngress: false
      injectNamespaceOauth2ProxyOnIngress: false
      injectSatisfyAnyAuthOnIngress: false
      injectionToEnforcePublicAccessFromIngressAccessOperator: false
    patches:
      enabled: false
      patches: {}
    release: {}
    slos: {}
    monitoring: {}
    ingress:
      enabled: false
    scaling:
      enabled: false
    chaos: {}
    secrets: {}
    customExtensions: {}
    extensions:
      customExtensionsEnabled: true
      replicatedSecretsEnabled: true
      dynamicSecretsEnabled: true
      configmapsEnabled: true
      extraManifestsEnabled: true
      rawManifestsEnabled: true
      externalSecretsEnabled: true
    extraManifests: {}
    rawManifests: {}
    configmaps: {}
    cloud: {}
    gitops:
      enabled: false
    external-secrets: {}
    dynamicSecrets: {}
    strategicMergePatches: {}
    transformers: {}
    values: {}
    templatedValues: {}
  namespace:
    config: {}
    context: ""
    chart: "kube-core/namespace"
    chartVersion: "latest"
    enabled: false
    extraReleaseValues: []
    hooks: {}
    type: "release"
    injectCoreValues: false
    jsonPatches: {}
    labels: {}
    manifests: []
    namespace: "default"
    needs: []
    options:
      renderRelease: true
      renderOptions: true
      renderExtensions: false
      forceNamespace: false
      forceNamespaceIngressClass: false
      forceIngressClass: false
      forceNamespaceVisitorGroup: false
      forceClusterIssuer: ""
      forceNamespaceClusterIssuer: false
      forceVisitorGroups: ""
      forceNamespaceNodeAffinity: false
      forceNamespaceNodeSelector: false
      patchIngresses: false
      upgradeIngress: false
      applyDefaultLabelsOnIngress: false
      applyDefaultAnnotationsOnIngress: false
      removeIngressClassAnnotation: false
      removeIngressClassName: false
      injectReloaderAnnotations: false
      injectClusterLoggingLabel: false
      injectDefaultIngressClassName: false
      injectIngressHost: false
      injectIngressTls: false
      injectOauth2ProxyOnIngress: false
      injectNamespaceOauth2ProxyOnIngress: false
      injectSatisfyAnyAuthOnIngress: false
      injectionToEnforcePublicAccessFromIngressAccessOperator: false
    patches:
      enabled: false
      patches: {}
    release: {}
    slos: {}
    monitoring: {}
    ingress:
      enabled: false
    scaling:
      enabled: false
    chaos: {}
    secrets: {}
    customExtensions: {}
    extensions:
      replicatedSecretsEnabled: true
      dynamicSecretsEnabled: true
      configmapsEnabled: true
      extraManifestsEnabled: true
      rawManifestsEnabled: true
      externalSecretsEnabled: true
    extraManifests: {}
    rawManifests: {}
    configmaps: {}
    cloud: {}
    gitops:
      enabled: false
    external-secrets: {}
    dynamicSecrets: {}
    strategicMergePatches: {}
    transformers: {}
    values: {}
    templatedValues: {}
  application:
    config: {}
    chart: "kube-core/n9-api"
    chartVersion: "latest"
    enabled: false
    context: ""
    extraReleaseValues: []
    hooks: {}
    type: "application"
    injectCoreValues: false
    jsonPatches: {}
    labels: {}
    manifests: []
    namespace: "default"
    needs: []
    options:
      renderRelease: true
      renderOptions: true
      renderExtensions: true
      forceNamespace: true
      forceNamespaceIngressClass: false
      forceIngressClass: false
      forceNamespaceVisitorGroup: false
      forceClusterIssuer: ""
      forceNamespaceClusterIssuer: false
      forceVisitorGroups: ""
      forceNamespaceNodeAffinity: false
      forceNamespaceNodeSelector: false
      patchIngresses: false
      upgradeIngress: false
      applyDefaultLabelsOnIngress: false
      applyDefaultAnnotationsOnIngress: false
      removeIngressClassAnnotation: false
      removeIngressClassName: false
      injectReloaderAnnotations: false
      injectClusterLoggingLabel: false
      injectDefaultIngressClassName: false
      injectIngressHost: false
      injectIngressTls: false
      injectOauth2ProxyOnIngress: false
      injectNamespaceOauth2ProxyOnIngress: false
      injectSatisfyAnyAuthOnIngress: false
      injectionToEnforcePublicAccessFromIngressAccessOperator: false
    patches:
      enabled: false
      patches: {}
    release: {}
    slos: {}
    monitoring: {}
    ingress:
      enabled: false
    scaling:
      enabled: false
    chaos: {}
    external-secrets: {}
    secrets: {}
    customExtensions: {}
    extensions:
      replicatedSecretsEnabled: true
      dynamicSecretsEnabled: true
      configmapsEnabled: true
      extraManifestsEnabled: true
      rawManifestsEnabled: true
      externalSecretsEnabled: true
    extraManifests: {}
    rawManifests: {}
    configmaps: {}
    cloud: {}
    gitops:
      enabled: false
    dynamicSecrets: {}
    strategicMergePatches: {}
    transformers: {}
    values: {}
    templatedValues: {}
  service:
    config: {}
    chart: "kube-core/raw"
    chartVersion: "latest"
    enabled: false
    context: ""
    extraReleaseValues: []
    hooks: {}
    type: "service"
    injectCoreValues: false
    jsonPatches: {}
    labels: {}
    manifests: []
    namespace: "default"
    needs: []
    options:
      renderRelease: true
      renderOptions: true
      renderExtensions: true
      forceNamespace: true
      forceNamespaceIngressClass: false
      forceIngressClass: false
      forceNamespaceVisitorGroup: false
      forceClusterIssuer: ""
      forceNamespaceClusterIssuer: false
      forceVisitorGroups: ""
      forceNamespaceNodeAffinity: false
      forceNamespaceNodeSelector: false
      patchIngresses: false
      upgradeIngress: false
      applyDefaultLabelsOnIngress: false
      applyDefaultAnnotationsOnIngress: false
      removeIngressClassAnnotation: false
      removeIngressClassName: false
      injectReloaderAnnotations: false
      injectClusterLoggingLabel: false
      injectDefaultIngressClassName: false
      injectIngressHost: false
      injectIngressTls: false
      injectOauth2ProxyOnIngress: false
      injectNamespaceOauth2ProxyOnIngress: false
      injectSatisfyAnyAuthOnIngress: false
      injectionToEnforcePublicAccessFromIngressAccessOperator: false
    patches:
      enabled: false
      patches: {}
    release: {}
    slos: {}
    monitoring: {}
    ingress:
      enabled: false
    scaling:
      enabled: false
    chaos: {}
    external-secrets:
    secrets: {}
    customExtensions: {}
    extensions:
      replicatedSecretsEnabled: true
      dynamicSecretsEnabled: true
      configmapsEnabled: true
      extraManifestsEnabled: true
      rawManifestsEnabled: true
      externalSecretsEnabled: true
    extraManifests: {}
    rawManifests: {}
    configmaps: {}
    cloud: {}
    gitops:
      enabled: false
    dynamicSecrets: {}
    strategicMergePatches: {}
    transformers: {}
    values: {}
    templatedValues: {}
envConfig:
  namespace: apps
  defaultIngressClass: ""
  domain: ""
  bucketPrefix: ""
  context: ""
applications: {}
applicationsList: {}
applicationsConfig:
  namespace: apps
  defaultIngressClass: ""
  domain: ""
  bucketPrefix: ""
  context: ""
services: {}
servicesList: {}
servicesConfig:
  namespace: apps
  defaultIngressClass: ""
  domain: ""
  bucketPrefix: ""
  context: ""
clusterReleases: {}
clusterRepositories: []
releases:
  app-extensions: *release
  cert-manager: *release
  chaos-mesh: *release
  chartmuseum: *release
  cluster-issuers: *release
  cluster-logging: *release
  container-registry-cleaner: *release
  container-registry-config: *release
  container-registry-operator: *release
  crossplane: *release
  crossplane-buckets: *release
  crossplane-cloud: *release
  crossplane-provider: *release
  crossplane-provider-config: *release
  eck-operator: *release
  efk: *release
  estafette-gke-node-pool-shifter: *release
  estafette-gke-preemptible-killer: *release
  estafette-k8s-node-compactor: *release
  estafette-vulnerability-scanner: *release
  external-dns: *release
  external-secrets: *release
  flux: *release
  flux-config: *release
  forecastle: *release
  imagecache: *release
  ingress-access-operator: *release
  istio-base: *release
  istio-grafana: *release
  istio-ingress-sidecar: *release
  istio-ingress-config: *release
  istio-kiali: *release
  istio-prometheus: *release
  istio-rules-external-services: *release
  istio-discovery: *release
  keda: *release
  keycloak: *release
  keycloak-dev: *release
  kps: *release
  kube-cleanup-operator: *release
  kube-downscaler: *release
  kube-fledged: *release
  kubernetes-dashboard: *release
  logging-gcs: *release
  logging-operator: *release
  logging-stack: *release
  metrics-server: *release
  minio-operator: *release
  minio-tenants: *release
  mongodb-atlas-operator: *release
  mongodb-operator: *release
  nexus: *release
  nginx: *release
  nginx-ingress-controller: *release
  nginx-istio-ingress-controller: *release
  node-initializer: *release
  patch-operator: *release
  polaris: *release
  predator: *release
  priority-class: *release
  prometheus-adapter: *release
  rabbitmq-operators: *release
  reloader: *release
  replicator: *release
  sealed-secrets: *release
  secret-generator: *release
  sloop: *release
  sloth: *release
  sonarqube: *release
  starboard-operator: *release
  system-config: *release
  system-jobs: *release
  tekton: *release
  tekton-catalog: *release
  tekton-logging: *release
  test-logging: *release
  velero: *release
  visitor-groups: *release
  zeebe: *release
  zeebe-operate: *release
  kyverno: *release
  cluster-policies: *release
  kyverno-policies: *release
  prometheus-pushgateway: *release
  descheduler: *release
  cluster-rbac: *release
  node-problem-detector: *release
  rabbitmq-managed: *release
  mongodb-managed: *release
  postgres-managed: *release
  postgres-operator: *release
  flux-repository: *release
  dex: *release
  oauth2-proxy: *release
  namespace: *release
  trivy: *release
  goldilocks: *release
  opencost: *release
  env-config: *release
  pyrra: *release
  linkerd: *release
  slack-operator: *release
  kiali-operator: *release
  jaeger-operator: *release
  istio-jaeger: *release
  istio-elasticsearch: *release
  jaeger-managed: *release
  kiali-managed: *release
  sidecar-cleaner: *release
